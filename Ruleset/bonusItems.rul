
extended:
  tags:
    RuleArmor:
      ABLATIVE_ARMOR_BONUS: int
    RuleItem: 
      ABLATIVE_ITEM_BONUS: int
      ACCURACY_BONUS: int
      PSI_DEFENSE_BONUS: int
      HELLWEAVE_BONUS: int
    BattleItem: # tracked per item, because they could be dropped
      ABLATIVE_ITEM_BONUS_STATE: int
    BattleUnit: # tracked per unit
      ORIGINAL_ACCURACY: int
      PSI_DEFENSE_BONUS_STATE: int
      HELLWEAVE_BONUS_STATE: int
      HEALTH_FROM_ARMOR: int  # ablative armor (+hp) from armor
      HEALTH_FROM_ITEM: int   # ablative armor (+hp) from passive item (vests, etc.)
    
  scripts:
    newTurnUnit:
      - offset: 50 # reset item bonuses
        code: |
          var int original_accuracy;
          var int psi_defense_bonus_state;
          var int hellweave_bonus;
          var ptr RuleArmor armor_rule;

          unit.getTag original_accuracy Tag.ORIGINAL_ACCURACY;
          unit.getTag psi_defense_bonus_state Tag.PSI_DEFENSE_BONUS_STATE;
          unit.getTag hellweave_bonus Tag.HELLWEAVE_BONUS_STATE;

          if gt original_accuracy 0;
            # was modified, so reset
            unit.Stats.setFiring original_accuracy;
            unit.setTag Tag.ORIGINAL_ACCURACY 0;
            debug_log "Inventory Item Accuracy Bonus - Reset:" original_accuracy unit;
          end;

          if gt psi_defense_bonus_state 0;
            unit.setTag Tag.PSI_DEFENSE_BONUS_STATE 0;
          end;

          if gt hellweave_bonus 0;
            unit.setTag Tag.HELLWEAVE_BONUS_STATE 0;
          end;

          return;
      - offset: 51 # Ablative Armor handling
        code: |
          var ptr RuleArmor armor_rule;
          var int ablative_armor;
          var int health_from_armor;
          var int health_from_item;

          unit.getRuleArmor armor_rule;
          armor_rule.getTag ablative_armor Tag.ABLATIVE_ARMOR_BONUS;
          unit.getTag health_from_armor Tag.HEALTH_FROM_ARMOR;
          unit.getTag health_from_item Tag.HEALTH_FROM_ITEM;

          if and eq health_from_armor 0 gt ablative_armor 0;
            unit.setTag Tag.HEALTH_FROM_ARMOR ablative_armor;
            debug_log "Health_from_armor initialized to rule value:" ablative_armor unit;
          end;

          if gt health_from_item 0;
            unit.setTag Tag.HEALTH_FROM_ITEM 0;
            debug_log "Health_from_item zeroed (0)." unit;
          end;
          return;
          
    newTurnItem:
      - offset: 50 # set item bonuses
        code: |
          var int psi_defense_bonus;
          var int psi_defense_bonus_state;
          var int hellweave_bonus;
          var int hellweave_bonus_state;
          var int accuracy_bonus;
          var int original_accuracy;
          var ptre BattleUnit owner;
          var ptr RuleItem item_rule;
          var int temp;
          
          item.getOwner owner;
          item.getRuleItem item_rule;

          item_rule.getTag accuracy_bonus Tag.ACCURACY_BONUS;
          item_rule.getTag psi_defense_bonus Tag.PSI_DEFENSE_BONUS;
          item_rule.getTag hellweave_bonus Tag.HELLWEAVE_BONUS;

          owner.getTag original_accuracy Tag.ORIGINAL_ACCURACY;
          owner.getTag psi_defense_bonus_state Tag.PSI_DEFENSE_BONUS_STATE;
          owner.getTag hellweave_bonus Tag.HELLWEAVE_BONUS_STATE;

          if and eq original_accuracy 0 gt accuracy_bonus 0;
            owner.Stats.getFiring temp;
            owner.setTag Tag.ORIGINAL_ACCURACY temp;
            debug_log "Inventory Item Accuracy Bonus:" temp accuracy_bonus owner;
            add temp accuracy_bonus;
            owner.Stats.setFiring temp;
          end;


          if and eq psi_defense_bonus_state 0 gt psi_defense_bonus 0;
            owner.setTag Tag.PSI_DEFENSE_BONUS_STATE psi_defense_bonus;
            debug_log "Inventory Item Psi Defense Bonus:" psi_defense_bonus owner;
          end;

          if and eq hellweave_bonus_state 0 gt hellweave_bonus 0;
            owner.setTag Tag.HELLWEAVE_BONUS_STATE hellweave_bonus;
            debug_log "Inventory Item Hellweave Bonus:" hellweave_bonus owner;
          end;

          return;
      - offset: 51 # Ablative Armor handling
        code: |
          var int rule_bonus;
          var int item_bonus;
          var int health_from_item;
          var ptre BattleUnit owner;
          var ptr RuleItem item_rule;

          var int temp;
          
          item.getOwner owner;
          item.getRuleItem item_rule;

          if eq owner null;
            return;
          end;

          item_rule.getTag rule_bonus Tag.ABLATIVE_ITEM_BONUS;
          item.getTag item_bonus Tag.ABLATIVE_ITEM_BONUS_STATE;
          owner.getTag health_from_item Tag.HEALTH_FROM_ITEM;

          if and eq health_from_item 0 gt item_bonus 0;
            owner.setTag Tag.HEALTH_FROM_ITEM item_bonus;
            debug_log "Health_from_item set to item value:" item_bonus owner item;
          else and eq health_from_item 0 gt rule_bonus 0;
            owner.setTag Tag.HEALTH_FROM_ITEM rule_bonus;
            item.setTag Tag.ABLATIVE_ITEM_BONUS_STATE rule_bonus;
            debug_log "Health_from_item initialized to rule value:" rule_bonus owner item;
          end;

          if and neq health_from_item 0 neq health_from_item item_bonus neq item_bonus 0;
            item.setTag Tag.ABLATIVE_ITEM_BONUS_STATE health_from_item;
            debug_log "Health_from_item has changed, synced back to item:" health_from_item item_bonus owner item;
          end;

          return;
    hitUnit:
      - offset: 50
        code: |
          var int hellweave_bonus;
          var int min;
          var int max;
          var int returned_damage;
          var int attacker_health;

          unit.getTag hellweave_bonus Tag.HELLWEAVE_BONUS_STATE;

          if and gt hellweave_bonus 0 eq battle_action battle_action_hit;
            set min hellweave_bonus;
            set max hellweave_bonus;
            sub min 10;
            add max 10;
            battle_game.randomRange returned_damage min max;

            attacker.getHealth attacker_health;
            if ge returned_damage attacker_health; # unit will die from the returned damage
              set power 0; # do no damage, simulating that our defenses strike first
            end;
            sub attacker_health returned_damage;
            attacker.setHealth attacker_health;
            debug_log "Melee hit against unit with hellweave. Return damage:" returned_damage attacker;
          end;

          return power part side;
    damageUnit:
      - offset: 50 # Ablative Armor Handling
        code: |
          var int health_from_item;
          var int health_from_armor;
          var int org_power;

          set org_power to_health;

          unit.getTag health_from_item Tag.HEALTH_FROM_ITEM;
          unit.getTag health_from_armor Tag.HEALTH_FROM_ARMOR;
          debug_log "Health (Dmg./Item/Armor):" to_health health_from_item health_from_armor;
          if and gt to_health 0 gt health_from_item 0;
            if gt health_from_item to_health;
              sub health_from_item to_health;
              set to_health 0;
              div to_stun 2;
              set to_wound 0;
              battle_game.flashMessage "STR_ARMOR_STOPPED" org_power health_from_item;
            else;
              sub to_health health_from_item;
              set health_from_item -1;
            end;
            unit.setTag Tag.HEALTH_FROM_ITEM health_from_item;
            debug_log "Health_from_item changed by hit:" health_from_item unit;
          end;

          if and gt to_health 0 gt health_from_armor 0;
            if gt health_from_armor to_health;
              sub health_from_armor to_health;
              set to_health 0;
              div to_stun 2;
              set to_wound 0;
              battle_game.flashMessage "STR_ARMOR_STOPPED" org_power health_from_armor;
            else;
              sub to_health health_from_armor;
              set health_from_armor -1;
            end;
            unit.setTag Tag.HEALTH_FROM_ARMOR health_from_armor;
            debug_log "Health_from_armor changed by hit:" health_from_armor unit;
          end;

          return;
    psiDefenceBonusStats:
      - offset: 50
        code: |
          var int psi_defense_bonus;
          unit.getTag psi_defense_bonus Tag.PSI_DEFENSE_BONUS_STATE;
          add bonus psi_defense_bonus;
          return bonus;

items:
  - type: STR_SCOPE
    tags:
      ACCURACY_BONUS: 10
    costBuy: 2000
    costSell: 1000
    size: 0.1
    weight: 3
    bigSprite: 520
    floorSprite: 520
    # PASSIVE ITEM
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    # PASSIVE
    armor: 8
    invWidth: 2
    invHeight: 1
    supportedInventorySections: [STR_BELT]
  - type: STR_PERSONAL_MIND_SHIELD
    tags:
      PSI_DEFENSE_BONUS: 30
    size: 0.1
    costBuy: 400000
    costSell: 304000
    weight: 5
    bigSprite: 519
    floorSprite: 519
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 2
    supportedInventorySections: [STR_BACK_PACK]
  - type: STR_HELLWEAVE
    tags:
      HELLWEAVE_BONUS: 30
      ABLATIVE_ITEM_BONUS: 20
    size: 0.1
    costBuy: 400000
    costSell: 304000
    weight: 5
    bigSprite: 521
    floorSprite: 521
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 3
    supportedInventorySections: [STR_BACK_PACK]
  - type: STR_NANOSCALE_VEST
    tags:
      ABLATIVE_ITEM_BONUS: 10
    size: 0.1
    costBuy: 400000
    costSell: 304000
    weight: 5
    bigSprite: 522
    floorSprite: 522
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 3
    supportedInventorySections: [STR_BACK_PACK]
  - type: STR_PLATED_VEST
    tags:
      ABLATIVE_ITEM_BONUS: 20
      ARMOR_ITEM_BONUS: 10
    size: 0.1
    costBuy: 400000
    costSell: 304000
    weight: 5
    bigSprite: 523
    floorSprite: 523
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 3
    supportedInventorySections: [STR_BACK_PACK]
  - type: STR_STASIS_VEST
    tags:
      ABLATIVE_ITEM_BONUS: 20
    size: 0.1
    costBuy: 400000
    costSell: 304000
    weight: 5
    bigSprite: 524
    floorSprite: 524
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 3
    supportedInventorySections: [STR_BACK_PACK]
  - type: STR_HAZMAT_VEST
#    tags:
#      PSI_DEFENSE_BONUS: 30
    size: 0.1
    costBuy: 400000
    costSell: 304000
    weight: 5
    bigSprite: 525
    floorSprite: 525
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 3
    supportedInventorySections: [STR_BACK_PACK]
  - type: STR_BLUESCREEN_ROUNDS
#    tags:
#      PSI_DEFENSE_BONUS: 30
    size: 0.1
    costBuy: 400000
    costSell: 304000
    weight: 5
    bigSprite: 526
    floorSprite: 526
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 1
    supportedInventorySections: [STR_BELT]

extraSprites:
  - type: BIGOBS.PCK
    files:
      519: Resources/Items/MindShield/MindShield.BigOb.png
      520: Resources/Items/Scope/Scope.BigOb.png
      521: Resources/Items/Hellweave/HellWeave.BigOb.png
      522: Resources/Items/NanoscaleVest/NanoscaleVest.BigOb.png
      523: Resources/Items/PlatedVest/PlatedVest.BigOb.png
      524: Resources/Items/StasisVest/StasisVest.BigOb.png
      525: Resources/Items/HazmatVest/Hazmat.BigOb.png
      526: Resources/Items/BluescreenRounds/Bluescreen.BigOb.png
      527: Resources/Items/MimicBeacon/MimicBeacon.BigOb.png
      
  - type: FLOOROB.PCK
    files:
      519: Resources/Items/MindShield/MindShield.FloorOb.png
      520: Resources/Items/Scope/Scope.FloorOb.png
      521: Resources/Items/Hellweave/HellWeave.FloorOb.png
      522: Resources/Items/NanoscaleVest/NanoscaleVest.FloorOb.png
      523: Resources/Items/PlatedVest/PlatedVest.FloorOb.png
      524: Resources/Items/StasisVest/StasisVest.FloorOb.png
      525: Resources/Items/HazmatVest/Hazmat.FloorOb.png
      526: Resources/Items/BluescreenRounds/Bluescreen.FloorOb.png
      527: Resources/Items/MimicBeacon/MimicBeacon.BigOb.png

extraStrings:
  - type: en-US
    strings:
      STR_SCOPE: "S.C.O.P.E."
      STR_PERSONAL_MIND_SHIELD: "Mind Shield"
      STR_HELLWEAVE: "Hellweave"
      STR_NANOSCALE_VEST: "Nanoscale Vest"
      STR_PLATED_VEST: "Plated Vest"
      STR_STASIS_VEST: "Stasis Vest"
      STR_HAZMAT_VEST: "Hazmat Vest"
      STR_BLUESCREEN_ROUNDS: "Bluescreen Rounds"
      STR_ARMOR_STOPPED: "Absorbed: {0}>{1}"