itemCategories:
  - type: STR_EXPERIMENTAL_PROJECTS
  - type: STR_ARMOR_MODIFICATIONS
  - type: STR_DISASSEMBLY
  - type: STR_TECHNOLOGY_EXTRACTION
  - type: STR_EXPLOSIVES
  - type: STR_WEAPONS_AND_AMMO
  - type: STR_ARMOR_CATEGORY
  - type: STR_PASSIVE_BONUS_ITEMS
  - type: STR_SOLDIER_GEAR

extended:
  tags:
    RuleArmor:
      IS_MIMIC: int
      ABLATIVE_ARMOR_BONUS: int
      MECHANICAL: int
    RuleItem: 
      ABLATIVE_ITEM_BONUS: int
      ARMOR_ITEM_BONUS: int
      ACCURACY_BONUS: int
      PSI_DEFENSE_BONUS: int
      HELLWEAVE_BONUS: int
      HEALTH_RECOVERY: int
      HAZMAT_BONUS: int
      BLUESCREEN_BONUS: int
      SKULLJACK: int
      PSI_AMP_TYPE: int
      SHREDDER_DAMAGE: int
    BattleItem: # tracked per item, because they could be dropped
      ABLATIVE_ITEM_BONUS_STATE: int
      ARMOR_ITEM_BONUS_STATE: int
      HEALTH_RECOVERY_STATE: int
    BattleUnit: # tracked per unit
      ORIGINAL_ACCURACY: int
      PSI_DEFENSE_BONUS_STATE: int
      HELLWEAVE_BONUS_STATE: int
      HEALTH_FROM_ARMOR: int  # ablative armor (+hp) from armor
      HEALTH_FROM_ITEM: int   # ablative armor (+hp) from passive item (vests, etc.)
      ARMOR_FROM_ITEM: int
      BLUESCREEN_BONUS_STATE: int
      HAZMAT_BONUS_STATE: int
      MIMIC_COUNTER: int
  scripts:
    newTurnUnit:
      - offset: 50 # reset passive item bonuses
        code: |
          var int original_accuracy;
          var int psi_defense_bonus_state;
          var int hellweave_bonus_state;
          var int hazmat_bonus_state;
          var int bluescreen_bonus_state;
          var ptr RuleArmor armor_rule;

          unit.getTag original_accuracy Tag.ORIGINAL_ACCURACY;
          unit.getTag psi_defense_bonus_state Tag.PSI_DEFENSE_BONUS_STATE;
          unit.getTag hellweave_bonus_state Tag.HELLWEAVE_BONUS_STATE;

          if gt original_accuracy 0;
            # was modified, so reset
            unit.Stats.setFiring original_accuracy;
            unit.setTag Tag.ORIGINAL_ACCURACY 0;
            debug_log "Inventory Item Accuracy Bonus - Reset:" original_accuracy unit;
          end;

          if gt psi_defense_bonus_state 0;
            unit.setTag Tag.PSI_DEFENSE_BONUS_STATE 0;
          end;

          if gt hellweave_bonus_state 0;
            unit.setTag Tag.HELLWEAVE_BONUS_STATE 0;
          end;

          if gt hazmat_bonus_state 0;
            unit.setTag Tag.HAZMAT_BONUS_STATE 0;
          end;

          if gt bluescreen_bonus_state 0;
            unit.setTag Tag.BLUESCREEN_BONUS_STATE 0;
          end;

          return;
      - offset: 51 # Ablative Armor handling
        code: |
          var ptr RuleArmor armor_rule;
          var int ablative_armor;
          var int health_from_armor;
          var int health_from_item;
          var int armor_from_item;

          unit.getRuleArmor armor_rule;
          armor_rule.getTag ablative_armor Tag.ABLATIVE_ARMOR_BONUS;
          unit.getTag health_from_armor Tag.HEALTH_FROM_ARMOR;
          unit.getTag health_from_item Tag.HEALTH_FROM_ITEM;
          unit.getTag armor_from_item Tag.ARMOR_FROM_ITEM;

          if and eq health_from_armor 0 gt ablative_armor 0;
            unit.setTag Tag.HEALTH_FROM_ARMOR ablative_armor;
            debug_log "Health_from_armor initialized to rule value:" ablative_armor unit;
          end;

          if gt health_from_item 0;
            unit.setTag Tag.HEALTH_FROM_ITEM 0;
            debug_log "Health_from_item zeroed (0)." unit;
          end;

          if gt armor_from_item 0;
            unit.setTag Tag.ARMOR_FROM_ITEM 0;
            debug_log "armor_from_item zeroed (0)." unit;
          end;
          return;
    newTurnItem:
      - offset: 50 # set passive item bonuses
        code: |
          var int psi_defense_bonus;
          var int psi_defense_bonus_state;
          var int hellweave_bonus;
          var int hellweave_bonus_state;
          var int hazmat_bonus;
          var int hazmat_bonus_state;
          var int bluescreen_bonus;
          var int bluescreen_bonus_state;
          var int armor_bonus;
          var int armor_bonus_state;
          var int accuracy_bonus;
          var int original_accuracy;
          var ptre BattleUnit owner;
          var ptr RuleItem item_rule;
          var int temp;
          
          item.getOwner owner;
          item.getRuleItem item_rule;

          item_rule.getTag accuracy_bonus Tag.ACCURACY_BONUS;
          item_rule.getTag psi_defense_bonus Tag.PSI_DEFENSE_BONUS;
          item_rule.getTag hellweave_bonus Tag.HELLWEAVE_BONUS;
          item_rule.getTag hazmat_bonus Tag.HAZMAT_BONUS;
          
          owner.getTag original_accuracy Tag.ORIGINAL_ACCURACY;
          owner.getTag psi_defense_bonus_state Tag.PSI_DEFENSE_BONUS_STATE;
          owner.getTag hellweave_bonus_state Tag.HELLWEAVE_BONUS_STATE;
          owner.getTag hazmat_bonus_state Tag.HAZMAT_BONUS_STATE;

          if and eq original_accuracy 0 gt accuracy_bonus 0;
            owner.Stats.getFiring temp;
            owner.setTag Tag.ORIGINAL_ACCURACY temp;
            debug_log "Inventory Item Accuracy Bonus:" temp accuracy_bonus owner;
            add temp accuracy_bonus;
            owner.Stats.setFiring temp;
          end;

          if and eq psi_defense_bonus_state 0 gt psi_defense_bonus 0;
            owner.setTag Tag.PSI_DEFENSE_BONUS_STATE psi_defense_bonus;
            debug_log "Inventory Item Psi Defense Bonus:" psi_defense_bonus owner;
          end;

          if and eq hellweave_bonus_state 0 gt hellweave_bonus 0;
            owner.setTag Tag.HELLWEAVE_BONUS_STATE hellweave_bonus;
            debug_log "Inventory Item Hellweave Bonus:" hellweave_bonus owner;
          end;

          if and eq hazmat_bonus_state 0 gt hazmat_bonus 0;
            owner.setTag Tag.HAZMAT_BONUS_STATE hazmat_bonus;
            debug_log "Inventory Item Hazmat Bonus:" hazmat_bonus owner;
          end;

          if and eq bluescreen_bonus_state 0 gt bluescreen_bonus 0;
            owner.setTag Tag.BLUESCREEN_BONUS_STATE bluescreen_bonus;
            debug_log "Inventory Item Bluescreen Bonus:" bluescreen_bonus owner;
          end;

          return;
      - offset: 51 # Ablative Armor handling
        code: |
          var int rule_bonus_health;
          var int item_bonus_health;
          var int rule_bonus_armor;
          var int item_bonus_armor;
          var int current_health;
          var int max_health;
          var int health_from_item;
          var int armor_from_item;
          var ptre BattleUnit owner;
          var ptr RuleItem item_rule;
          var int recovery_value;
          var int recovery_left;

          var int temp;
          
          item.getOwner owner;
          item.getRuleItem item_rule;

          if eq owner null;
            return;
          end;

          item_rule.getTag rule_bonus_health Tag.ABLATIVE_ITEM_BONUS;
          item_rule.getTag rule_bonus_armor Tag.ARMOR_ITEM_BONUS;

          item_rule.getTag recovery_value Tag.HEALTH_RECOVERY;

          item.getTag item_bonus_health Tag.ABLATIVE_ITEM_BONUS_STATE;
          item.getTag item_bonus_armor Tag.ARMOR_ITEM_BONUS_STATE;

          item.getTag recovery_left Tag.HEALTH_RECOVERY_STATE;
          owner.getTag health_from_item Tag.HEALTH_FROM_ITEM;
          owner.getTag armor_from_item Tag.ARMOR_FROM_ITEM;

          if and eq recovery_left 0 gt recovery_value 0;
            item.setTag Tag.HEALTH_RECOVERY_STATE recovery_value;
            debug_log "Health recovery initialized to" recovery_value;
          end;

          if and eq health_from_item 0 gt item_bonus_health 0;
            owner.setTag Tag.HEALTH_FROM_ITEM item_bonus_health;
            debug_log "Health_from_item set to item value:" item_bonus_health owner item;
          else and eq health_from_item 0 gt rule_bonus_health 0;
            owner.setTag Tag.HEALTH_FROM_ITEM rule_bonus_health;
            item.setTag Tag.ABLATIVE_ITEM_BONUS_STATE rule_bonus_health;
            debug_log "Health_from_item initialized to rule value:" rule_bonus_health owner item;
          end;

          if and eq armor_from_item 0 gt item_bonus_armor 0;
            owner.setTag Tag.ARMOR_FROM_ITEM item_bonus_armor;
            debug_log "Armor_from_item set to item value:" item_bonus_armor owner item;
          else and eq armor_from_item 0 gt rule_bonus_armor 0;
            owner.setTag Tag.ARMOR_FROM_ITEM rule_bonus_armor;
            item.setTag Tag.ARMOR_ITEM_BONUS_STATE rule_bonus_armor;
            debug_log "armor_from_item initialized to rule value:" rule_bonus_armor owner item;
          end;

          if and neq armor_from_item 0 neq armor_from_item item_bonus_armor neq item_bonus_armor 0;
            item.setTag Tag.ARMOR_ITEM_BONUS_STATE armor_from_item;
            debug_log "armor_from_item has changed, synced back to item:" armor_from_item item_bonus_armor owner item;
          end;

          if and neq health_from_item 0 neq health_from_item item_bonus_health neq item_bonus_health 0;
            # health_from_item is the reduced health value..
            # we can check for recovery here
            if and gt recovery_left 0 eq health_from_item -1;
              set health_from_item 20;
              sub recovery_left 1;
              if eq recovery_left 0;
                set recovery_left -1;
              end;
              item.setTag Tag.HEALTH_RECOVERY_STATE recovery_left;
              debug_log "Health recovery activated. Vest recharged to 20";
            end;
            item.setTag Tag.ABLATIVE_ITEM_BONUS_STATE health_from_item;
            debug_log "Health_from_item has changed, synced back to item:" health_from_item item_bonus_health owner item;
          end;

          return;
    hitUnit:
      - offset: 50 # for Heallweave
        code: |
          var int hellweave_bonus;
          var int min;
          var int max;
          var int returned_damage;
          var int attacker_health;

          unit.getTag hellweave_bonus Tag.HELLWEAVE_BONUS_STATE;

          if and gt hellweave_bonus 0 eq battle_action battle_action_hit;
            set min hellweave_bonus;
            set max hellweave_bonus;
            sub min 10;
            add max 10;
            battle_game.randomRange returned_damage min max;

            attacker.getHealth attacker_health;
            if ge returned_damage attacker_health; # unit will die from the returned damage
              set power 0; # do no damage, simulating that our defenses strike first
            end;
            sub attacker_health returned_damage;
            attacker.setHealth attacker_health;
            debug_log "Melee hit against unit with hellweave. Return damage:" returned_damage attacker;
          end;

          return power part side;
      - offset: 51 # for Hazmat
        code: |
          var int hazmat_bonus_state;
          var int reduction_value;
          unit.getTag hazmat_bonus_state Tag.HAZMAT_BONUS_STATE;

          if gt hazmat_bonus_state 0;
            if and eq damaging_type 2 eq damaging_type 8 eq damaging_type 11;
              set reduction_value power;
              muldiv reduction_value hazmat_bonus_state 100;
              sub power reduction_value;
              debug_log "Hazard hit against unit with hazmat. Damage reduced:" power unit;
            end;
          end;

          return power part side;
      - offset: 52 # for Armor Bonus
        code: |
          var int armor_from_item;
          var int reduction_value;
          var int shredder_damage;
          var ptr RuleItem item_rule;


          unit.getTag armor_from_item Tag.ARMOR_FROM_ITEM;
          damaging_item.getRuleItem item_rule;
          item_rule.getTag shredder_damage Tag.SHREDDER_DAMAGE;

          if and gt power 0 gt armor_from_item 0;
            sub power armor_from_item;
            if gt shredder_damage 0;
              sub armor_from_item shredder_damage;
              if eq armor_from_item 0;
                set armor_from_item -1;
              end;
              unit.setTag Tag.ARMOR_FROM_ITEM armor_from_item;
              debug_log "armor_from_item changed by hit:" armor_from_item unit;
            end;
          end;

          return power part side;
      - offset: 53 # for Bluescreen Rounds
        code: |
          var int bluescreen_bonus_state;
          var ptr RuleArmor armor_rule;
          var int mechanical;
          attacker.getTag bluescreen_bonus_state Tag.BLUESCREEN_BONUS_STATE;

          if gt bluescreen_bonus_state 0;
            unit.getRuleArmor armor_rule;
            armor_rule.getTag mechanical Tag.MECHANICAL;
            if gt mechanical 0;
              add power bluescreen_bonus_state;
            end;
          end;

          return power part side;
      - offset: 54 # for Skulljack
        code: |
          var int skulljack;
          var ptr RuleItem item_rule;
          var int chance;
          var int health;
          var int max_health;
          var int temp;
          set chance 70;
          weapon_item.getRuleItem item_rule;
          item_rule.getTag skulljack Tag.SKULLJACK;
          if gt skulljack 0;
            debug_log "Someone was hit with a skulljack";
            battle_game.randomChance chance;
            if gt chance 0;
              unit.getHealth health;
              unit.getHealthMax max_health;
              set temp 200;
              sub temp max_health; # 52 - 170
              div temp 10;         # 5 - 17
              set power health;
              add power temp;
              debug_log "Instant stun!";
            end;
          end;
          return power part side;
    damageUnit:
      - offset: 50 # Ablative Armor Handling
        code: |
          var int health_from_item;
          var int health_from_armor;
          var int org_power;

          set org_power to_health;

          unit.getTag health_from_item Tag.HEALTH_FROM_ITEM;
          unit.getTag health_from_armor Tag.HEALTH_FROM_ARMOR;
          debug_log "Health (Dmg./Item/Armor):" to_health health_from_item health_from_armor;

          if and gt to_health 0 gt health_from_item 0;
            if gt health_from_item to_health;
              sub health_from_item to_health;
              set to_health 0;
              div to_stun 2;
              set to_wound 0;
              battle_game.flashMessage "STR_ARMOR_STOPPED" org_power health_from_item;
            else;
              sub to_health health_from_item;
              set health_from_item -1;
            end;
            unit.setTag Tag.HEALTH_FROM_ITEM health_from_item;
            debug_log "Health_from_item changed by hit:" health_from_item unit;
          end;

          if and gt to_health 0 gt health_from_armor 0;
            if gt health_from_armor to_health;
              sub health_from_armor to_health;
              set to_health 0;
              div to_stun 2;
              set to_wound 0;
              battle_game.flashMessage "STR_ARMOR_STOPPED" org_power health_from_armor;
            else;
              sub to_health health_from_armor;
              set health_from_armor -1;
            end;
            unit.setTag Tag.HEALTH_FROM_ARMOR health_from_armor;
            debug_log "Health_from_armor changed by hit:" health_from_armor unit;
          end;

          return;
    psiDefenceBonusStats:
      - offset: 50 # for Mind Shield
        code: |
          var int psi_defense_bonus;
          unit.getTag psi_defense_bonus Tag.PSI_DEFENSE_BONUS_STATE;
          add bonus psi_defense_bonus;
          return bonus;

items:
  - type: STR_PSI_AMP
    requires:
      - STR_PSI_LAB
    tags:
      PSI_AMP_TYPE: 1
    costBuy: 350000
    size: 0.1
    costSell: 194700
    weight: 10
    bigSprite: 401
    floorSprite: 401
    handSprite: 708
    hitSound: 36
    hitAnimation: 57
    battleType: 9
    power: 100
    hidePower: true
    damageAlter:
      RandomType: 3
      ArmorEffectiveness: 0
    twoHanded: false
    invWidth: 2
    invHeight: 2
    costUse:
      time: 25
      mana: 4
    costPanic:
      time: 25
      mana: 4
    flatUse:
      time: true
      mana: true
    psiAttackName: STR_MIND_MERGE
    LOSRequired: false
    tuMindControl: 0
    accuracyUse: 100
    accuracyPanic: 100
    listOrder: 4405
    maxRange: 15
    aimRange: 15
    accuracyMultiplier:
      psiStrength: 0.5
      psiSkill: 0.5
    psiTargetMatrix: 7 # everyone
  - type: STR_ALIEN_PSI_AMP
    requires:
      - STR_ALIEN_PSI_AMP
    tags:
      PSI_AMP_TYPE: 2
    costBuy: 0
    size: 0.1
    costSell: 194700
    weight: 10
    bigSprite: 402
    floorSprite: 402
    handSprite: 716
    hitSound: 36
    hitAnimation: 57
    power: 100
    hidePower: true
    damageAlter:
      RandomType: 3
      ArmorEffectiveness: 0
    battleType: 9
    twoHanded: false
    invWidth: 2
    invHeight: 2
    costUse:
      time: 25
      mana: 4
    costPanic:
      time: 25
      mana: 4
    flatUse:
      time: true
      mana: true
    psiAttackName: STR_MIND_MERGE
    listOrder: 4410
    maxRange: 15
    aimRange: 15
    accuracyMultiplier:
      psiStrength: 0.5
      psiSkill: 0.5
    psiTargetMatrix: 7 # everyone
  - type: STR_SCOPE
    tags:
      ACCURACY_BONUS: 10
    costBuy: 0
    costSell: 1000
    size: 0.1
    weight: 3
    bigSprite: 520
    floorSprite: 520
    # PASSIVE ITEM
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    # PASSIVE
    armor: 8
    invWidth: 2
    invHeight: 1
    supportedInventorySections: [STR_BELT]
  - type: STR_PERSONAL_MIND_SHIELD
    requires:
      - STR_PERSONAL_MIND_SHIELD
    requiresBuy:
      - STR_PERSONAL_MIND_SHIELD
    tags:
      PSI_DEFENSE_BONUS: 30
    size: 0.1
    costBuy: 400000
    costSell: 304000
    weight: 5
    bigSprite: 519
    floorSprite: 519
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 2
    supportedInventorySections: [STR_BACK_PACK]
  - type: STR_HELLWEAVE
    tags:
      HELLWEAVE_BONUS: 30
      ABLATIVE_ITEM_BONUS: 20
    size: 0.1
    costBuy: 0
    costSell: 104000
    weight: 5
    bigSprite: 521
    floorSprite: 521
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 3
    supportedInventorySections: [STR_BACK_PACK]
  - type: STR_NANOSCALE_VEST
    tags:
      ABLATIVE_ITEM_BONUS: 10
    size: 0.1
    costBuy: 0
    costSell: 1400
    weight: 5
    bigSprite: 522
    floorSprite: 522
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 3
    supportedInventorySections: [STR_BACK_PACK]
  - type: STR_PLATED_VEST
    tags:
      ABLATIVE_ITEM_BONUS: 20
      ARMOR_ITEM_BONUS: 10
    size: 0.1
    costBuy: 0
    costSell: 104000
    weight: 5
    bigSprite: 523
    floorSprite: 523
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 3
    supportedInventorySections: [STR_BACK_PACK]
  - type: STR_STASIS_VEST
    tags:
      ABLATIVE_ITEM_BONUS: 20
      HEALTH_RECOVERY: 4
    size: 0.1
    costBuy: 0
    costSell: 104000
    weight: 5
    bigSprite: 524
    floorSprite: 524
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 3
    supportedInventorySections: [STR_BACK_PACK]
  - type: STR_HAZMAT_VEST
    tags:
      ABLATIVE_ITEM_BONUS: 20
      HAZMAT_BONUS: 100
    size: 0.1
    costBuy: 0
    costSell: 104000
    weight: 5
    bigSprite: 525
    floorSprite: 525
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 3
    supportedInventorySections: [STR_BACK_PACK]
  - type: STR_BLUESCREEN_ROUNDS
    tags:
      BLUESCREEN_BONUS: 50
    size: 0.1
    costBuy: 0
    costSell: 304000
    weight: 5
    bigSprite: 526
    floorSprite: 526
    hitSound: 37
    power: 0
    hidePower: true
    battleType: 10
    fuseType: -2
    tuPrime: 0
    tuUnprime: 0
    invWidth: 2
    invHeight: 1
    supportedInventorySections: [STR_BELT]
  - type: STR_MEDI_KIT
    size: 0.3
    weight: 8
    categories: [STR_SOLDIER_GEAR, STR_EQUIPMENT]
    requires:
      - STR_MEDI_KIT
    requiresBuy:
      - STR_MEDI_KIT
    bigSprite: 528
    floorSprite: 528
    handSprite: 524
    invWidth: 2
    invHeight: 2
    medikitType: 1
    medikitTargetSelf: true
    medikitTargetMatrix: 15
    heal: 1
    painKiller: 0
    stimulant: 0
    woundRecovery: 10
    healthRecovery: 40
    stunRecovery: 0
    energyRecovery: 0
    tuUse: 20
    flatRate: false
    costSell: 46500
    costBuy: 50000
  - type: STR_NANO_MEDI_KIT
    size: 0.1
    costSell: 86500
    costBuy: 90000
    categories: [STR_SOLDIER_GEAR, STR_EQUIPMENT]
    requires:
      - STR_NANO_MEDI_KIT
    requiresBuy:
      - STR_NANO_MEDI_KIT
    weight: 5
    bigSprite: 24
    floorSprite: 24
    battleType: 6
    invWidth: 1
    invHeight: 2
    medikitType: 1
    medikitTargetSelf: true
    medikitTargetMatrix: 15
    heal: 1
    painKiller: 0
    stimulant: 0
    woundRecovery: 10
    healthRecovery: 60
    stunRecovery: 0
    energyRecovery: 0
    tuUse: 20
    flatRate: false
  - type: STR_MOTION_SCANNER
    categories: [STR_SOLDIER_GEAR, STR_EQUIPMENT]
    requires:
      - STR_MOTION_SCANNER
    requiresBuy:
      - STR_MOTION_SCANNER
    costSell: 46500
    costBuy: 50000
  - type: STR_MIND_PROBE
    categories: [STR_SOLDIER_GEAR, STR_EQUIPMENT]
    requires:
      - STR_MIND_PROBE
    requiresBuy:
      - STR_MIND_PROBE
    costSell: 304000
    costBuy: 320000
  - type: STR_SKULLJACK
    categories: [STR_SOLDIER_GEAR, STR_EQUIPMENT]
    tags:
      SKULLJACK: 1
    power: 20
    hidePower: true
    damageType: 6
    damageAlter:
      ArmorEffectiveness: 0
    size: 0.1
    costBuy: 0
    costSell: 194700
    weight: 6
    bigSprite: 33
    floorSprite: 32
    handSprite: 88
    hitSound: 36
    battleType: 3
    accuracyMelee: 100
    skillApplied: false
    tuMelee: 40
    clipSize: -1
    twoHanded: false
    invWidth: 1
    invHeight: 3
    flatRate: false
    armor: 15
    confMelee:
      name: STR_SKULLJACK
  - type: STR_MIMIC_BEACON
    categories: [STR_SOLDIER_GEAR, STR_EXPLOSIVES]
    size: 0.1
    costBuy: 0 # cannot buy
    costSell: 12000
    weight: 3
    bigSprite: 527
    floorSprite: 527
    invHeight: 2
    invWidth: 2
    power: 0
    damageType: 0
    damageAlter:
      FixRadius: 0
    battleType: 4
    accuracyThrow: 100
    costPrime:
      time: 45
    costUnprime:
      time: 5
    costThrow:
      time: 5
    primeActionName: STR_MIMIC_PRIME_ACTION
    primeActionMessage: STR_MIMIC_PRIME_MESSAGE
    unprimeActionName: STR_MIMIC_UNPRIME_ACTION
    unprimeActionMessage: STR_MIMIC_UNPRIME_MESSAGE
    recover: true
    spawnUnit: STR_SOLDIER_MIMIC # Default empty meaning don't spawn a unit, when a valid unit (defined in the units: ruleset) is defined here it will be spawned by this item.
    spawnUnitFaction: 2 # Default -1 meaning the spawned unit will be the same faction as the unit using/firing the item, this defines which faction gets the new unit:
                         #   -1: Same faction as item user
                         #    0: Player faction
                         #    1: Enemy faction
                         #    2: Civilian faction
  - type: STR_SMOKE_GRENADE
    costBuy: 800
    costSell: 650
    damageAlter:
      FixRadius: 3
  - type: STR_PROXIMITY_GRENADE
    costBuy: 850
    costSell: 750
    damageAlter:
      FixRadius: 3
    requires:
      - STR_PROXIMITY_GRENADE
    requiresBuy:
      - STR_PROXIMITY_GRENADE
  - type: STR_ELECTRO_FLARE
    costBuy: 300
    costSell: 230
  - type: STR_STINGRAY_LAUNCHER
    costBuy: 600
    costSell: 0
  - type: STR_STINGRAY_MISSILES
    costBuy: 50
    costSell: 0
  - type: STR_AVALANCHE_LAUNCHER
    costBuy: 800
    costSell: 0
  - type: STR_AVALANCHE_MISSILES
    costBuy: 100
    costSell: 0
  - type: STR_CANNON
    costBuy: 550
    costSell: 0
  - type: STR_CANNON_ROUNDS_X50
    costBuy: 30
    costSell: 0
  - type: STR_FUSION_BALL_LAUNCHER
    costSell: 0
  - type: STR_FUSION_BALL
    costSell: 0
  - type: STR_LASER_CANNON
    costSell: 0
  - type: STR_PLASMA_BEAM
    costSell: 0

extraSprites:
  - type: BIGOBS.PCK
    files:
      401: Resources/PsiAmps/AdvancedPsiAmp_bigOb.png
      402: Resources/PsiAmps/AlienPsiAmp_bigOb.png
      519: Resources/Items/MindShield/MindShield.BigOb.png
      520: Resources/Items/Scope/Scope.BigOb.png
      521: Resources/Items/Hellweave/HellWeave.BigOb.png
      522: Resources/Items/NanoscaleVest/NanoscaleVest.BigOb.png
      523: Resources/Items/PlatedVest/PlatedVest.BigOb.png
      524: Resources/Items/StasisVest/StasisVest.BigOb.png
      525: Resources/Items/HazmatVest/Hazmat.BigOb.png
      526: Resources/Items/BluescreenRounds/Bluescreen.BigOb.png
      527: Resources/Items/MimicBeacon/MimicBeacon.BigOb.png
      528: Resources/Items/BasicMedKit/BasicMedkit.gif
  - type: FLOOROB.PCK
    files:
      401: Resources/PsiAmps/AdvancedPsiAmp_floorOb.png
      402: Resources/PsiAmps/AlienPsiAmp_floorOb.png
      519: Resources/Items/MindShield/MindShield.FloorOb.png
      520: Resources/Items/Scope/Scope.FloorOb.png
      521: Resources/Items/Hellweave/HellWeave.FloorOb.png
      522: Resources/Items/NanoscaleVest/NanoscaleVest.FloorOb.png
      523: Resources/Items/PlatedVest/PlatedVest.FloorOb.png
      524: Resources/Items/StasisVest/StasisVest.FloorOb.png
      525: Resources/Items/HazmatVest/Hazmat.FloorOb.png
      526: Resources/Items/BluescreenRounds/Bluescreen.FloorOb.png
      527: Resources/Items/MimicBeacon/MimicBeacon.BigOb.png
      528: Resources/Items/BasicMedKit/floorob_BasicMedKit.gif
  - type: HANDOB.PCK
    height: 40
    width: 256
    subX: 32
    subY: 40
    files:
      524: Resources/Items/BasicMedKit/BasicMedkit.HandOb.png
      708: Resources/PsiAmps/AdvancedPsiAmp_handOb.png
      716: Resources/PsiAmps/AlienPsiAmp_handOb.png

units:
  - type: STR_SOLDIER_MIMIC
    race: STR_SOLDIER_MIMIC
    stats:
      tu: 0
      stamina: 0
      health: 45
      bravery: 110
      reactions: 0
      firing: 0
      throwing: 0
      strength: 0
      psiStrength: 100
      psiSkill: 0
      melee: 0
    armor: MIMIC_ARMOR
    standHeight: 16
    kneelHeight: 16
    value: 0
    deathSound: 23
    moveSound: 14
    energyRecovery: 50
    aggression: 0
    capturable: false
    moraleLossWhenKilled: 0
    
armors:
  - type: MIMIC_ARMOR
    tags:
      IS_MIMIC: 1
    units: [STR_SOLDIER_MIMIC]
    corpseBattle:
      - STR_CORPSE
    allowsMoving: false
    createsMeleeThreat: false
    spriteSheet: XCOM_0.PCK
    spriteInv: MAN_0
    spriteFaceGroup: 6
    spriteFaceColor: [96, 96, 96, 96, 160, 160, 163, 163] #M0 F0 M1 F1 M2 F2 M3 F3
    spriteHairGroup: 9
    spriteHairColor: [144, 144, 164, 164, 245, 245, 166, 166] #M0 F0 M1 F1 M2 F2 M3 F3
    storeItem: STR_NONE
    frontArmor: 12
    sideArmor: 12
    rearArmor: 12
    underArmor: 12
    damageModifier:
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
      - 1.0
    loftempsSet: [ 3 ]
    scripts:
      createUnit: |
        var ptr RuleArmor armor_rule;
        var int is_mimic;
        debug_log "Mimic Beacon Code running";
        unit.getRuleArmor armor_rule;  
        armor_rule.getTag is_mimic Tag.IS_MIMIC;

        if gt is_mimic 0;  # we have a mimic
          debug_log "Mimic Beacon Spawned";
          unit.setTag Tag.MIMIC_COUNTER 2;
        end;
        return;
      recolorUnitSprite: |
        var int color;
        var int temp;
        get_color color new_pixel;
        
        set temp anim_frame;
        wavegen_tri temp 16 16 15;
        mul temp -1;
        add temp 8;
        add_shade new_pixel temp;

        return new_pixel;
      newTurnUnit: |
        var ptr RuleArmor armor_rule;
        var int counter;
        var int is_mimic;

        debug_log "Mimic Beacon Code On New Turn";
        if eq side 1; # on the alien turns
          unit.getRuleArmor armor_rule;  
          armor_rule.getTag is_mimic Tag.IS_MIMIC;

          if gt is_mimic 0;  # we have a mimic
            unit.getTag counter Tag.MIMIC_COUNTER;

            sub counter 1;
            debug_log "Mimic Counter: " counter;

            if gt counter 0;
              unit.setTag Tag.MIMIC_COUNTER counter;
            end;
            if eq counter 0; # mimic beacon timer is over
              unit.setHealth 0;      # kill the mimic
              debug_log "Mimic removed";
            end;
          end;
        end;
        return;

extraStrings:
  - type: en-US
    strings:
      STR_SCOPE: "S.C.O.P.E."
      STR_PERSONAL_MIND_SHIELD: "Mind Shield"
      STR_HELLWEAVE: "Hellweave"
      STR_NANOSCALE_VEST: "Nanoscale Vest"
      STR_PLATED_VEST: "Plated Vest"
      STR_STASIS_VEST: "Stasis Vest"
      STR_HAZMAT_VEST: "Hazmat Vest"
      STR_BLUESCREEN_ROUNDS: "Bluescreen Rounds"
      STR_ARMOR_STOPPED: "Absorbed: {0}>{1}"
      STR_SKULLJACK: Skulljack
      STR_MIMIC_BEACON: Mimic Beacon
      STR_MIMIC_ARMOR: Mimic Armor
      STR_SOLDIER_MIMIC: Deployed Mimic Beacon
      STR_MIMIC_PRIME_ACTION: Activate Beacon
      STR_MIMIC_PRIME_MESSAGE: Mimic Beacon activated
      STR_MIMIC_UNPRIME_ACTION: Deactivate Beacon
      STR_MIMIC_UNPRIME_MESSAGE: Mimic Beacon deactivated
      STR_EQUIPMENT: Misc. Equipment
      STR_EXPERIMENTAL_PROJECTS: Experimental Projects
      STR_ARMOR_MODIFICATIONS: Armor Modifications
      STR_PASSIVE_BONUS_ITEMS: Utility
      STR_DISASSEMBLY: Disassembly
      STR_TECHNOLOGY_EXTRACTION: Corpse Repurposing
      STR_EXPLOSIVES: Explosives
      STR_WEAPONS_AND_AMMO: Weapons & Ammo
      STR_ARMOR_CATEGORY: Body Armor
      STR_SOLDIER_GEAR: Personal Equipment
      STR_NANO_MEDI_KIT: Nano Medi-Kit
      STR_ALIEN_PSI_AMP: Alien Psi Amp
      STR_ALIEN_PSI_AMP_UFOPEDIA: "This version of the Psionic Amplifier incorporates artifacts from the powerful 'Ethereal' alien we encountered. It will put our experienced Psi Operatives on the same level as the aliens' most powerful Psionic forces."
      STR_INCENDIARY_GRENADE: Incendiary Grenade
