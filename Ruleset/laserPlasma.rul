# recharge laser rifle - TODO: add ufopedia article to explain this mechanic
extended:
  tags:
    RuleItem:
      LASER: int
      PLASMA: int
    RuleArmor:
      ANIMATED: int
  scripts:
    returnFromMissionUnit:
      - offset: 98
        code: |
          var ptre BattleItem item;
          var ptr RuleItem item_rule;
          var int temp;

          unit.getRightHandWeapon item;
          item.getRuleItem item_rule;
          item_rule.getTag temp Tag.LASER;

          if eq temp 1;
            item_rule.getTag temp Tag.GUN_TYPE;
            if eq temp 1;
              debug_log "Recharged Laser Pistol for Recovery" item;
              item.setAmmoQuantity 12;
            else eq temp 2;
              debug_log "Recharged Laser Rifle for Recovery" item;
              item.setAmmoQuantity 20;
            else eq temp 3;
              debug_log "Recharged Laser Sniper for Recovery" item;
              item.setAmmoQuantity 5;
            else eq temp 4;
              debug_log "Recharged Laser Shotgun for Recovery" item;
              item.setAmmoQuantity 6;
            else eq temp 5;
              debug_log "Recharged Heavy Laser for Recovery" item;
              item.setAmmoQuantity 20;
            end;
          end;

          unit.getLeftHandWeapon item;
          item.getRuleItem item_rule;
          item_rule.getTag temp Tag.LASER;

          if eq temp 1;
            item_rule.getTag temp Tag.GUN_TYPE;
            if eq temp 1;
              debug_log "Recharged Laser Pistol for Recovery" item;
              item.setAmmoQuantity 12;
            else eq temp 2;
              debug_log "Recharged Laser Rifle for Recovery" item;
              item.setAmmoQuantity 20;
            else eq temp 3;
              debug_log "Recharged Laser Sniper for Recovery" item;
              item.setAmmoQuantity 5;
            else eq temp 4;
              debug_log "Recharged Laser Shotgun for Recovery" item;
              item.setAmmoQuantity 6;
            else eq temp 5;
              debug_log "Recharged Heavy Laser for Recovery" item;
              item.setAmmoQuantity 20;
            end;
          end;
          return;
    recolorUnitSprite:
      - offset: 98
        code: |
          var ptr RuleArmor armor_rule;
          var int animated;
          var int color;
          var int id;
          var int temp;
          unit.getId id;
          add id 15;
          mul id 2;
          unit.getRuleArmor armor_rule;
          armor_rule.getTag animated Tag.ANIMATED;
          if gt animated 0;
            get_color color new_pixel;
            if eq color COLOR_X1_RED;
              set temp anim_frame;
              wavegen_tri temp id 16 15;
              mul temp -1;
              add temp 8;
              add_shade new_pixel temp;
            end;
          end;
          return new_pixel;
    recolorItemSprite:
      - offset: 98
        code: |
          var int color;
          var int temp;
          var int isLaser;
          var int isPlasma;
          var ptr RuleItem item_rule;
          var int flash_color;
          set temp 0;

          item.getRuleItem item_rule;
          item_rule.getTag isLaser Tag.LASER;
          item_rule.getTag isPlasma Tag.PLASMA;

          if gt isLaser 0;
            set flash_color COLOR_X1_RED;
            set temp 1;
          else gt isPlasma 0;
            set flash_color COLOR_X1_GREEN0;
            set temp 1;
          end;
          if gt temp 0;
            get_color color new_pixel;
            if eq color flash_color;
              item.getFuseTimer temp;
              if gt temp 0;
                set temp anim_frame;
                wavegen_tri temp 16 16 15;
                mul temp -1;
                add temp 8;
                set color COLOR_X1_BLUE1;
                set_color new_pixel color;
                add_shade new_pixel temp;
              else;
                set temp anim_frame;
                wavegen_tri temp 16 16 15;
                mul temp -1;
                add temp 8;
                add_shade new_pixel temp;
              end;
            end;
          end;
          return new_pixel;
items:
  - type: STR_XCOM_LASER_PISTOL
    tags:
      LASER: 1
    fuseType: 2
    primeActionName: STR_LASER_RECHARGE
    primeActionMessage: STR_LASER_RECHARGE_MESSAGE
    clipSize: 12
    scripts:
      newTurnItem: |
        var int temp;
        item.getFuseTimer temp;
        if gt temp 0;
          item.setFuseTimer -1;
          item.setFuseEnabled 0;
          item.setAmmoQuantity 12;
          debug_log "Recharged Laser Pistol" item;
        end;
        return;
    costBuy: 0
    costSell: 0
  - type: STR_XCOM_LASER_RIFLE
    tags:
      LASER: 1
    fuseType: 2
    primeActionName: STR_LASER_RECHARGE
    primeActionMessage: STR_LASER_RECHARGE_MESSAGE
    clipSize: 19
    scripts:
      newTurnItem: |
        var int temp;
        item.getFuseTimer temp;
        if gt temp 0;
          item.setFuseTimer -1;
          item.setFuseEnabled 0;
          item.setAmmoQuantity 19;
          debug_log "Recharged Scatter Laser Rifle" item;
        end;
        return;
    costBuy: 0
    costSell: 0
  - type: STR_LASER_SHOTGUN
    tags:
      LASER: 1
    fuseType: 2
    primeActionName: STR_LASER_RECHARGE
    primeActionMessage: STR_LASER_RECHARGE_MESSAGE
    clipSize: 6
    scripts:
      newTurnItem: |
        var int temp;
        item.getFuseTimer temp;
        if gt temp 0;
          item.setFuseTimer -1;
          item.setFuseEnabled 0;
          item.setAmmoQuantity 6;
          debug_log "Recharged Scatter Laser" item;
        end;
        return;
    costBuy: 0
    costSell: 0
  - type: STR_LASER_SNIPER_RIFLE
    tags:
      LASER: 1
    fuseType: 2
    primeActionName: STR_LASER_RECHARGE
    primeActionMessage: STR_LASER_RECHARGE_MESSAGE
    clipSize: 5
    scripts:
      newTurnItem: |
        var int temp;
        item.getFuseTimer temp;
        if gt temp 0;
          item.setFuseTimer -1;
          item.setFuseEnabled 0;
          item.setAmmoQuantity 5;
          debug_log "Recharged Laser Sniper" item;
        end;
        return;
    costBuy: 0
    costSell: 0
  - type: STR_XCOM_HEAVY_LASER
    tags:
      LASER: 1
    fuseType: 2
    primeActionName: STR_LASER_RECHARGE
    primeActionMessage: STR_LASER_RECHARGE_MESSAGE
    clipSize: 21
    scripts:
      newTurnItem: |
        var int temp;
        item.getFuseTimer temp;
        if gt temp 0;
          item.setFuseTimer -1;
          item.setFuseEnabled 0;
          item.setAmmoQuantity 21;
          debug_log "Recharged Heavy Laser" item;
        end;
        return;
    costBuy: 0
    costSell: 0
  - type: STR_XCOM_PLASMA_PISTOL
    tags:
      PLASMA: 1
    costBuy: 0
    costSell: 0
  - type: STR_XCOM_PLASMA_RIFLE
    tags:
      PLASMA: 1
    costBuy: 0
    costSell: 0
  - type: STR_PLASMA_SHOTGUN
    tags:
      PLASMA: 1
    costBuy: 0
    costSell: 0
  - type: STR_PLASMA_SNIPER_RIFLE
    tags:
      PLASMA: 1
    costBuy: 0
    costSell: 0
  - type: STR_XCOM_HEAVY_PLASMA
    tags:
      PLASMA: 1

    costBuy: 0
    costSell: 0
extraStrings:
  - type: en-US
    strings:
      STR_LASER_RECHARGE: Recharge
      STR_LASER_RECHARGE_MESSAGE: Laser is being recharged.
