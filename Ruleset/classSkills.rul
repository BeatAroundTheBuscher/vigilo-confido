# Class & Skill System inspired by XCOM2012/XCOM2/Phoenix Point, written by memmaker

# Classes
# Ranger        - str: Movement/Melee,      wkn: Armor, Attack Range
# Grenadier     - str: Armor/Heavy Weapons, wkn: Movement, Accuracy
# Sniper        - str: Damage/Range,        wkn: Health, Melee
# Specialist    - str: Medikits/Support,    wkn: Offense
# Psi Op        - str: Psi,                 wkn: Health, Conventional Weapons

# Class Skill list (A=Active,P=Passive) - T = Tested, V = Visualisation needed
# = Ranger
# Initial
#  TA Run & Gun
#  TA Slash
#  TP Blademaster
# Advanced
#  TA Conceal
#  TA Rapid Fire
#  TP Phantom
#  TP Shadowstrike
# Elite
#  TA Reaper
#  TP Untouchable

# = Grenadier
# Initial
#  TA Heavy Rocket
#  TA Rapid Deployment
#  TP Shredder
# Advanced 
#  TA War Cry
#  TA Rage Burst
#  TP Blast Padding
#  TP Mayhem
# Elite
#  TA Rupture
#  TP Sting Grenades

# = Sniper
# Initial
#  TA Headshot
#  TA Disabling Shot
#  TP Death from above
# Advanced
#  TA Quick Aim
#  TA Double Tap
#  TP Aim
#  TP Center mass
# Elite
#  TA Serial
#  TP Alpha Mike Foxtrot

# = Specialist
# Initial
#  TA Paramedic
#  TA Aid Protocol
#  TP Guardian
# Advanced
#  TA Combat Protocol
#  TA Interference
#  TP Steadfast
#  TP Field Surgeon
# Elite
#  TA Electric Reinforcement
#  TP Savior
#  TP Ever Vigilant

# = Psi Operative
# Initial - Basic Psi Amp (Not Skill Menu)
#  TA Panic
#  TA Mind Merge
# Advanced - Skills (Need Basic Psi Amp in inv.)
#  TA Soul Steal
#  TA Inspire
# Elite - Skills (Need alien Psi Amp in inv)
#  TA Stasis
#  TA Mind Control

# Possible Skill Types:
# 1. Passive Skills
#    Always active or trigger on specific conditions (via SoldierBonus)
# 2. Active Self
#    Player activated without a target (via Medikit)
# 3. Active Enemy
#    Player activated with an enemy unit as target (via Psi-Amp)
# 4. Item Bound
#    Player activated via scripted item use (eg. Grenades, Firearms)

# Concept:
# Soldiers of each class can be hired for an increased salary.
# Soldiers of can choose to undergo the military molding process, gaining access to their class skills in the process.
# Classed soldiers receive additional active and passive skills for each level of training.
# The active ones are activated with the special icon and the passive ones are always active.
#
# There are three training phases. The initial molding process is the first one.
# Second Phase (or Advanced Training) adds two additional passive and active skills.
# Third Phase (or Elite Training) adds another passive skill and an elite level active skill.
#
# The elite level active skill has to be activated via the SKILL_AMP usable item.

# So every class ends up with 9 skills if they get promoted to colonel.
# Currently there are 2 special cases: Specialist has 10 skills and Psi-Op only 8.

# New Concepts:
# Weapon Proficiency
# Light vs. Heavy Versions of Armors
# Class based Armors
# Weapons have only one shot mode (but get special abilities instead?)
# Status effects (bleed, fire, poison, acid)
# Willpower mechanics?


# ideas: have a smoke grenade that applies special states on hit. use newTurn to react on these states-
# gun disabling smoke
# flashbang
# combat drugs
# Instead of mana, pay with morale and have a recover action or recovery on a turn without hits

# NOTE: You can set tags on GeoscapeSoldier in returnFromMissionUnit which you could read back in createUnit.
# NOTE: One item can be used as Armor.SpecialWeapon thus removing the item as long as that armor is worn.

# Symbols: P = Passive Skill, A = Active Skill, E = Elite Level Skill, I = Skill could be bound to item, X = Is implemented
# == Possibly Possible Skills (Not all of these are possible and not all are currently implemented)
# === Ranger
# P Phantom            - Begin a mission in concealment.
# A Dash               - Move to a target position within half of the normal movement range.
# A Run & Gun          - Take an extra action
# A Slash              - A free melee attack with your sword
# P Sprinter           - Grants +4 mobility (roughly 3 tiles movement).
# P Ready For Action   - Reloading and inventory actions do not cost an Action Points
# P Blademaster        - Deal increased damage on all sword attacks.
# A Conceal            - Immediately enter concealment once per mission.
# P Shadowstrike       - While concealed, gain bonus aim and bonus critical chance when attacking enemies.
# P Shadowstep         - This soldier does not trigger overwatch or reaction fire.
# A Rapid Fire         - Fire twice in a row at an enemy. Each shot suffers an Aim penalty of -15.
# P Bladestorm         - Free sword attacks on any enemies that enter or attack from melee range.
# P Untouchable        - If you score a kill during your turn, the next attack against you during the enemy turn will miss. Includes area-of-effect attacks such as grenades.
# A Reaper             - A devastating chain melee attack where the first melee attack cannot miss. Each melee kill in Reaper mode grants an extra action, but further melee attacks deal reduced damage. 4-turn cooldown.
# === Grenadier
# A Heavy Rocket       - Fire a rocket using an equipped launcher. This ability can not be used after moving, nor more than once per mission.
# A Shredder Rocket    - Fire a rocket that causes all enemies hit to take +33% damage from all sources for the next 4 turns. The rocket's blast is weaker than a standard rocket's.
# P Blast Padding      - Your gear includes layers of extra padding and blast plates, granting a bonus point of Armor and 66% less damage from explosive attacks.
# P Will to Survive    - Reduces all normal damage taken by 2 if not flanked.
# A War Cry            - All enemies within 10 tiles have their Action Points Reduced to 50% for the next turn.
# P Shredder           - Your cannon attacks shred armor. Higher rank weapons shred more points of armor. The shredding effect applies before damage.
# P Mayhem             - Confers additional damage to all explosive damage done & Heavy Weapon type guns.
# P Platform Stability - Shots taken before any costly actions have +10 Aim and +10% critical chance. Also grants +10 aim for purposes of reducing scatter if the soldier has not moved this turn
# P Extra Conditioning - Confers bonus health + strength based on which type of armor is equipped. Heavier armor increases the bonus.
# A Rapid Deployment m - Activate this ability before throwing or launching a support grenade, and the throw will not cost an action.
# P HEAT Warheads      - Your grenades now pierce armor and shred additional points of armor.
# P Sting Grenades     - Your flashbang grenades have a 50% chance to stun enemies for one turn in the flashbang's Area of Effect.
# A Rage Burst         - Shoot with a proficient direct-fire projectile weapon, using all remaining ammo in the weapon's magazine.
# A Rupture            - A Rupture shot deals critical damage and ensures that the target takes an additional +3 damage from all attacks in the future. Uses 3 ammo. 3-turn cooldown.
# === Sniper
# A Lightning Hands    - Fire your pistol at a target. This attack does not cost an action.
# P Sharpshooter       - +10 critical chance in all situations, +10 Aim
# A Headshot           - Fire a shot with +30% critical chance and extra damage on critical hits.
# P Steady Hands       - If you did not move last turn, gain +10 Aim and +10 Critical chance.
# A Disabling Shot     - Allows sniper rifles to fire a shot that causes the target's main weapon to malfunction. The target may use Reload to fix the weapon. 2 turn cooldown. Cannot cause critical hits.
# P Death from Above   - Killing an enemy at a lower elevation with your sniper rifle costs only a single action, and does not end your turn.
# P Aim                - Kneel now confers +20 Aim to the first shot on the following turn.
# A Double Tap         - Fire a standard shot and gain a bonus shot or overwatch action.
# P Center Mass        - You do additional points of base damage when using guns.
# P Alpha Mike Foxtrot - You do 4 additional points of base damage and 2 additional points of crit damage with your primary weapon.
# A Fan Fire           - Fire the pistol three times at the same target.
# A Mark For Death     - Mark enemy target. Until end of the turn all damage to that  target is increased by 50%.
# A Serial             - A powerful chained shot ability. For every kill made with your sniper rifle, your actions will be refunded. Critical chance decreases per chained kill. 4 turn cooldown.
# === Specialist
# A Aid Protocol       - It grants that target a bonus to Defense until the start of the next player turn. The basic Gremlin grants +20 Defense.
# P Field Surgeon      - Reduces (or, for 1 HP flesh wounds, eliminates) Wounded timer on soldiers who sustained HP damage but were not Critically Wounded. Does not affect wound sustained by sending fatigued soldier on a mission.
# P Sprinter           - Grants +4 mobility (roughly 3 tiles movement).
# P Steadfast          - Never panic as a result of getting wounded, allies panicking, allies getting wounded or killed, or the intimidation ability.
# P Revive             - Allows Medikits to revive critically wounded Soldiers at 33% of maximum health instead of just stabilizing them.
# P Paramedic          - Once per turn, this unit may use a medikit without spending an action.
# P Ever Vigilant      - If you spend all your actions on moves, you are granted an automatic overwatch shot at the end of the turn.
# P Guardian           - With every successful Overwatch shot, there is a 50% chance that another shot will be taken.
# P Combat Drugs       - Smoke grenades confer +20 Will and +20% critical chance in addition to the original 20 defense. The area of effect is also increased by 25%.
# P Savior             - Medikits restore health per use.
# A Electric Reinforcement - All allies gain 20 temporary Armor for 1 turn
# A Restoration        - Each squad member is healed or revived as needed.
# === Psi 
# -- Bound to normal weapon PSI_AMP
# Panic
# Mind Control
# Inspire            - Channel your psionic energy into the TU of another unit
# -- Bound to special weapon PSI_AMP
# Mind Merge         - Grants bonus will, crit and ablative hit points to an ally until the beginning of the player's next turn.
# Stasis             - No damage received and no action possible for one turn
# Soul Steal         - Damage enemy and heal the user
# Mind Crush         - Deal random damage to all enemy entities within 10 tiles
# Psychic Ward       - Allies within 10 tiles are immune to Panic and Psychic damage attacks

# === Other
# X Sustain          - Instead of being killed, go into stasis with 1 hp once per mission
# X Executioner      - Increased damage against targets with HP < 50%

# Genetics Lab Projects (Not implemented yet)
# Neural Dampening      - Confers +20 Will when defending against psi attacks, and immunity to panic. If the soldier is Mind Controlled, the control is cancelled, and the soldier is stunned for 1 turn instead.
# Neural Feedback       - Causes damage to psi attackers and puts all of their psi attacks on cooldown. Does not reduce the attacker's chance of success.
# Hyper Reactive Pupils - Confers +10 Aim to any shot after a miss.
# Secondary Heart       - Causes soldiers to bleed out instead of dying the first time they go to zero health during a mission. The bleed out timer is extended for 2 turns. Prevents loss of will from critical wounds.
# Adrenal Neurosymathy  - Overloads the soldiers adrenal glands: when a kill is confirmed the soldier emits pheromones that grant offensive benefits to all nearby squad mates. Cannot occur more than once on every 5 turns.
# Adaptive Bone Marrow  - Soldier regenerates 2 HP per turn up to the HP max without armor.
# Iron Skin             - All damage taken is reduced by 25%.
# Adrenaline Surge      - Confers +10 Aim and +10% critical chance. Activated on getting wounded.

# == Possible Item Skills (Not implemented yet)
# === Shotguns
# Rapid Fire       - Fire twice in a row at an enemy. Each shot suffers an Aim penalty of -15. There is no cooldown on this ability.
# === Rocket Launchers
# Shredder Rocket  - Fire a rocket that causes all enemies hit to take +33% damage from all sources for the next 4 turns. The rocket's blast is weaker than a standard rocket's. (4 Damage)
# === Sniper Rifles
# Deadeye          - Take a shot with a small aim penalty for a significant damage boost. 2 turn cooldown.
# Precision Shot   - Take a special shot with +30 bonus to critical chance and 33% bonus critical damage. Three-turn cooldown.
# === Machine Guns
# Demolition       - Unleash a volley of bullets at your target's cover, significantly damaging or destroying it. Deals no damage to your target. Uses 2 ammo. 3-turn cooldown.
# === Ammo
# Venom Rounds	   - increased damage, chance to poison the target
# Talon Rounds	   - +20% critical chance, increased critical damage
# Dragon Rounds	   - increased damage, chance to inflict burning
# === Utility
# Mimic Beacon     - Conjures a holographic decoy soldier for the enemy to shoot at.

# Possible Item effects:
# Chance to inflict burning/poison/acid/etc. and stasis/stun/exhausted/rupture/etc.
# Critical chance/damage
# Shred armor (via rules)
# Destroy environment
# Boost damage for specific shot type (snap/auto/aimed/etc.)
# Body part targeting
# Vampiric

fixedUserOptions:
  weaponSelfDestruction: true
  strafe: true
  battleUFOExtenderAccuracy: true
  battleInstantGrenade: true
  alienBleeding: true
  allowBuildingQueue: true
  retainCorpses: true
  anytimePsiTraining: true

  canTransferCraftsWhileAirborne: true
#  customInitialBase: true

statisticalBulletConservation: true
tuRecoveryWakeUpNewTurn: 55

enableUnitResponseSounds: true
unitResponseSoundsFrequency: [50, 50, 50, 20]

# CQC
enableCloseQuartersCombat: 1       # default is 0 to disable this new code, 1 enables it
closeQuartersAccuracyGlobal: 65    # default 100, this sets the default weapon close quarters combat
closeQuartersTuCostGlobal: 12      # TUs required to attempt CQC; unsuccessful attempt doesn't spend the TUs, successful does
closeQuartersEnergyCostGlobal: 8   # Energy required to attempt CQC; unsuccessful attempt doesn't spend the Energy, successful does

# Mana / Battle Focus
mana:
  enabled: true
  battleUI: true
  trainingPrimary: false
  trainingSecondary: false
  replenishAfterMission: true

commendations:
  - type: STR_SOLDIER_EXPERIENCE
    description: STR_SOLDIER_EXPERIENCE_DESCRIPTION
    sprite: 1
    criteria:
      totalKills: [2, 4, 4, 4, 6, 6, 6, 10, 10, 10]
      totalMissions: [4, 8, 8, 8, 12, 12, 12, 16, 16, 16]

soldierBonuses:
  - name: STR_ORIGINAL8_BONUS
  - name: STR_RANGER_ADVANCED_BONUS
    tags:
      PHANTOM: 5              #X distance threshold for stealth, 5 means enemies can only see you in a 5 tile range
      SHADOWSTRIKE: 10        #X (1-xxx) bonus to crit chance in percent
    recovery:
      energy:
        flatOne: 20
  - name: STR_RANGER_ELITE_BONUS
    tags:
      UNTOUCHABLE: 2          #X (0-n) number of attacks which are deflected after a kill
      REAPER: 1               #X (1/0) 1 = on, 0 = off, TU refund after kill, once per mission
  - name: STR_GRENADIER_ADVANCED_BONUS
    tags:
      BLAST_PADDING: 60       #X (0-100) amount of damage reduction in percent for HE and Incendiary
      MAYHEM: 20              #X (1-xxx) additional power, in percent, of auto shot, he and incendiary attacks
  - name: STR_GRENADIER_ELITE_BONUS
    tags:
      STING_GRENADES: 50      #X (1-xxx) chance to stun enemies when using flashbang, in percent
      RUPTURE: 1              #X (1/0) on/off enables use rupture skill with compatible weapons, (aimed / auto only)
    recovery:
      health:
        flatOne: 1
  - name: STR_SNIPER_ADVANCED_BONUS
    tags:
      AIM: 1                  #X (1/0) enables 30% bonus accuracy when kneeling on the position you were kneeling on the start of the turn
      CENTER_MASS: 20         #X (1-XXX) additional damage in percent with Standard Rifles & Sniper Rifles
  - name: STR_SNIPER_ELITE_BONUS
    tags:
      ALPHA_MIKE_FOXTROT: 20  #X (1-XXX) additional power for all sniper rifle attacks and half of that as additional crit damage
      SERIAL: 1               #X (1/0) enables serial kills with sniper rifles, each kill refunds all TU, once per mission
  - name: STR_SPECIALIST_ADVANCED_BONUS
    tags:
      STEADFAST: 50           #X (1-XXX) bonus to bravery and psiDefence
      FIELD_SURGEON: 30       #X (1-XXX) percent reduction in recovery time if healed by field surgeon
      ADVANCED_COMBAT_INFORMATION: 1
    stats:
      bravery: 50
  - name: STR_SPECIALIST_ELITE_BONUS
    tags:
      SAVIOR: 10              #X (1-XXX) flat amount of health restored when using heal
      EVER_VIGILANT: 1        #X (1/0) restores all TU on beginning of enemy turn 
  - name: STR_PSI_OPERATIVE_ADVANCED_BONUS
  - name: STR_PSI_OPERATIVE_ELITE_BONUS

items:
  - type: STR_MEDI_KIT
    medikitTargetMatrix: 15
    medikitTargetSelf: true
  - type: STR_HEAVY_ROCKET_SKILL # USED BY GRENADIER AS SPECIAL WEAPON
    tags:
      CLASS_SKILL_ACTIVATION: 1
      SKILL_POWER_ITEM: 1
      SHREDDER_DAMAGE: 10
    bigSprite: 15
    floorSprite: 15
    handSprite: 72
    bulletSprite: 0
    fireSound: 52
    clipSize: 2  # max number of uses per mission
    accuracyAimed: 115
    accuracySnap: 115
    costAimed:
      time: 5
      mana: 12
    costSnap:
      time: 5
      mana: 12
    confAimed:
      shots: 1
      ammoSlot: -1
      arcing: false
    confSnap:
      shots: 1
      ammoSlot: -1
      arcing: false
    flatRate: true
    tuThrow: 0
    battleType: 1
    twoHanded: false
    invWidth: 2
    invHeight: 3
    hitSound: 0
    hitAnimation: 0
    power: 75
    hidePower: true
    damageType: 3
  - type: STR_SKILL_AMP          # USED BY SPECIALIST AS SPECIAL WEAPON
    tags:
      CLASS_SKILL_ACTIVATION: 1
      SKILL_POWER_ITEM: 1
    power: 100
    hidePower: true
    damageAlter:
      RandomType: 3
      ArmorEffectiveness: 0
    size: 0.1
    costBuy: 0
    costSell: 194700
    weight: 10
    bigSprite: 33
    floorSprite: 32
    handSprite: 88
    hitSound: 36
    hitAnimation: 57
    battleType: 9
    twoHanded: false
    psiRequired: false
    invWidth: 1
    invHeight: 3
    flatRate: true
    costUse:
      time: 1
      mana: 12
    tuPanic: 0
    tuMindControl: 0
    psiTargetMatrix: 7

soldierTransformation:
  - name: STR_RANGER_ADVANCED_TRAINING
    forbiddenPreviousTransformations: [STR_RANGER_ADVANCED_TRAINING]
    requiredCommendations:
      STR_SOLDIER_EXPERIENCE: 1 # decoration level
    soldierBonusType: STR_RANGER_ADVANCED_BONUS
    keepSoldierArmor: true
    createsClone: false
    needsCorpseRecovered: false
    allowsDeadSoldiers: false 
    allowsLiveSoldiers: true
    allowedSoldierTypes:
      - STR_RANGER
    cost: 50000               #				The cost of the project in dollars
    transferTime: 72          #				Soldiers can be put in a transfer back to the base where they started if this parameter is greater than the default of 0 hours. New clones or resurrected soldiers are automatically given a transfer to the base with a default of 24 hours.
    recoveryTime: 3           #				The amount of wound recovery time a soldier is given after this project completes and the transfer, if any, is completed. The default value is 0 days.
    percentOverallStatChange: #			  A percent change to the soldier's overall stats when undergoing this project, can be positive or negative - tu: 5 means the soldier will gain an extra 5% of their max time units, while tu: -5 means the soldier will lose 5% of their max time units. The default of 0 means no change.
      tu: 5
      stamina: 5
  - name: STR_GRENADIER_ADVANCED_TRAINING
    forbiddenPreviousTransformations: [STR_GRENADIER_ADVANCED_TRAINING]
    requiredCommendations:
      STR_SOLDIER_EXPERIENCE: 1 # decoration level
    soldierBonusType: STR_GRENADIER_ADVANCED_BONUS
    keepSoldierArmor: true
    createsClone: false
    needsCorpseRecovered: false
    allowsDeadSoldiers: false 
    allowsLiveSoldiers: true
    allowedSoldierTypes:
      - STR_GRENADIER
    cost: 50000               #				The cost of the project in dollars
    transferTime: 72          #				Soldiers can be put in a transfer back to the base where they started if this parameter is greater than the default of 0 hours. New clones or resurrected soldiers are automatically given a transfer to the base with a default of 24 hours.
    recoveryTime: 3           #				The amount of wound recovery time a soldier is given after this project completes and the transfer, if any, is completed. The default value is 0 days.
    percentOverallStatChange: #			  A percent change to the soldier's overall stats when undergoing this project, can be positive or negative - tu: 5 means the soldier will gain an extra 5% of their max time units, while tu: -5 means the soldier will lose 5% of their max time units. The default of 0 means no change.
      health: 5
      strength: 5
  - name: STR_SNIPER_ADVANCED_TRAINING
    forbiddenPreviousTransformations: [STR_SNIPER_ADVANCED_TRAINING]
    requiredCommendations:
      STR_SOLDIER_EXPERIENCE: 1 # decoration level
    soldierBonusType: STR_SNIPER_ADVANCED_BONUS
    keepSoldierArmor: true
    createsClone: false
    needsCorpseRecovered: false
    allowsDeadSoldiers: false 
    allowsLiveSoldiers: true
    allowedSoldierTypes:
      - STR_SNIPER
    cost: 50000               #				The cost of the project in dollars
    transferTime: 72          #				Soldiers can be put in a transfer back to the base where they started if this parameter is greater than the default of 0 hours. New clones or resurrected soldiers are automatically given a transfer to the base with a default of 24 hours.
    recoveryTime: 3           #				The amount of wound recovery time a soldier is given after this project completes and the transfer, if any, is completed. The default value is 0 days.
    percentOverallStatChange: #			  A percent change to the soldier's overall stats when undergoing this project, can be positive or negative - tu: 5 means the soldier will gain an extra 5% of their max time units, while tu: -5 means the soldier will lose 5% of their max time units. The default of 0 means no change.
      firing: 5
  - name: STR_SPECIALIST_ADVANCED_TRAINING
    forbiddenPreviousTransformations: [STR_SPECIALIST_ADVANCED_TRAINING]
    requiredCommendations:
      STR_SOLDIER_EXPERIENCE: 1 # decoration level
    soldierBonusType: STR_SPECIALIST_ADVANCED_BONUS
    keepSoldierArmor: true
    createsClone: false
    needsCorpseRecovered: false
    allowsDeadSoldiers: false 
    allowsLiveSoldiers: true
    allowedSoldierTypes:
      - STR_SPECIALIST
    cost: 50000               #				The cost of the project in dollars
    transferTime: 72          #				Soldiers can be put in a transfer back to the base where they started if this parameter is greater than the default of 0 hours. New clones or resurrected soldiers are automatically given a transfer to the base with a default of 24 hours.
    recoveryTime: 3           #				The amount of wound recovery time a soldier is given after this project completes and the transfer, if any, is completed. The default value is 0 days.
    percentOverallStatChange: #			  A percent change to the soldier's overall stats when undergoing this project, can be positive or negative - tu: 5 means the soldier will gain an extra 5% of their max time units, while tu: -5 means the soldier will lose 5% of their max time units. The default of 0 means no change.
      bravery: 5
      stamina: 5
  - name: STR_RANGER_ELITE_TRAINING
    requiredPreviousTransformations:
      - STR_RANGER_ADVANCED_TRAINING
    forbiddenPreviousTransformations: [STR_RANGER_ELITE_TRAINING]
    requiredCommendations:
      STR_SOLDIER_EXPERIENCE: 3 # decoration level
    soldierBonusType: STR_RANGER_ELITE_BONUS
    keepSoldierArmor: true
    createsClone: false
    needsCorpseRecovered: false
    allowsDeadSoldiers: false 
    allowsLiveSoldiers: true
    allowedSoldierTypes:
      - STR_RANGER
    cost: 50000               #				The cost of the project in dollars
    transferTime: 72          #				Soldiers can be put in a transfer back to the base where they started if this parameter is greater than the default of 0 hours. New clones or resurrected soldiers are automatically given a transfer to the base with a default of 24 hours.
    recoveryTime: 3           #				The amount of wound recovery time a soldier is given after this project completes and the transfer, if any, is completed. The default value is 0 days.
    percentOverallStatChange: #			  A percent change to the soldier's overall stats when undergoing this project, can be positive or negative - tu: 5 means the soldier will gain an extra 5% of their max time units, while tu: -5 means the soldier will lose 5% of their max time units. The default of 0 means no change.
      tu: 5
      stamina: 5
  - name: STR_GRENADIER_ELITE_TRAINING
    requiredPreviousTransformations:
      - STR_GRENADIER_ADVANCED_TRAINING
    forbiddenPreviousTransformations: [STR_GRENADIER_ELITE_TRAINING]
    requiredCommendations:
      STR_SOLDIER_EXPERIENCE: 3 # decoration level
    soldierBonusType: STR_GRENADIER_ELITE_BONUS
    keepSoldierArmor: true
    createsClone: false
    needsCorpseRecovered: false
    allowsDeadSoldiers: false 
    allowsLiveSoldiers: true
    allowedSoldierTypes:
      - STR_GRENADIER
    cost: 50000               #				The cost of the project in dollars
    transferTime: 72          #				Soldiers can be put in a transfer back to the base where they started if this parameter is greater than the default of 0 hours. New clones or resurrected soldiers are automatically given a transfer to the base with a default of 24 hours.
    recoveryTime: 3           #				The amount of wound recovery time a soldier is given after this project completes and the transfer, if any, is completed. The default value is 0 days.
    percentOverallStatChange: #			  A percent change to the soldier's overall stats when undergoing this project, can be positive or negative - tu: 5 means the soldier will gain an extra 5% of their max time units, while tu: -5 means the soldier will lose 5% of their max time units. The default of 0 means no change.
      health: 5
      strength: 5
  - name: STR_SNIPER_ELITE_TRAINING
    requiredPreviousTransformations:
      - STR_SNIPER_ADVANCED_TRAINING
    forbiddenPreviousTransformations: [STR_SNIPER_ELITE_TRAINING]
    requiredCommendations:
      STR_SOLDIER_EXPERIENCE: 3 # decoration level 
    soldierBonusType: STR_SNIPER_ELITE_BONUS
    keepSoldierArmor: true
    createsClone: false
    needsCorpseRecovered: false
    allowsDeadSoldiers: false 
    allowsLiveSoldiers: true
    allowedSoldierTypes:
      - STR_SNIPER
    cost: 50000               #				The cost of the project in dollars
    transferTime: 72          #				Soldiers can be put in a transfer back to the base where they started if this parameter is greater than the default of 0 hours. New clones or resurrected soldiers are automatically given a transfer to the base with a default of 24 hours.
    recoveryTime: 3           #				The amount of wound recovery time a soldier is given after this project completes and the transfer, if any, is completed. The default value is 0 days.
    percentOverallStatChange: #			  A percent change to the soldier's overall stats when undergoing this project, can be positive or negative - tu: 5 means the soldier will gain an extra 5% of their max time units, while tu: -5 means the soldier will lose 5% of their max time units. The default of 0 means no change.
      firing: 5
  - name: STR_SPECIALIST_ELITE_TRAINING
    requiredPreviousTransformations:
      - STR_SPECIALIST_ADVANCED_TRAINING
    forbiddenPreviousTransformations: [STR_SPECIALIST_ELITE_TRAINING]
    requiredCommendations:
      STR_SOLDIER_EXPERIENCE: 3 # decoration level 
    soldierBonusType: STR_SPECIALIST_ELITE_BONUS
    keepSoldierArmor: true
    createsClone: false
    needsCorpseRecovered: false
    allowsDeadSoldiers: false 
    allowsLiveSoldiers: true
    allowedSoldierTypes:
      - STR_SPECIALIST
    cost: 50000               #				The cost of the project in dollars
    transferTime: 72          #				Soldiers can be put in a transfer back to the base where they started if this parameter is greater than the default of 0 hours. New clones or resurrected soldiers are automatically given a transfer to the base with a default of 24 hours.
    recoveryTime: 3           #				The amount of wound recovery time a soldier is given after this project completes and the transfer, if any, is completed. The default value is 0 days.
    percentOverallStatChange: #			  A percent change to the soldier's overall stats when undergoing this project, can be positive or negative - tu: 5 means the soldier will gain an extra 5% of their max time units, while tu: -5 means the soldier will lose 5% of their max time units. The default of 0 means no change.
      bravery: 5
      stamina: 5

# targeting modes:
# 0   = No target needed (Just activation, script takes over) - BA_NONE
#       Default Action: no-op
# 10  = Melee Range Targeted (1 Tile) - BA_HIT
#       Default Action: Melee with equipped weapon, weapon overridable
# mul = Firearm (Default firarm targeting) - SNAP = 8, AUTO = 7, AIMED = 9
#       Default Action: Snapshot with equipped weapon, weapon overridable
# mul = Psi Targeting (Default PSI Targeting, with or without LOS) - BA_USE = 11, BA_MINDCONTROL = 13, BA_PANIC = 14
#       Default Action: Use action with equipped Psi Amp, weapon overridable
# 6   = Thrown Targeting (Default Thrown targeting, uses throwing arc) - BA_THROW
#       Default Action: Throw equipped throwable item, weapon overridable
# 12  = Waypoint Targeting (Default blaster launcher targeting) - BA_LAUNCH
#       Default Action: Launch with equipped weapon, weapon overridable

skills:
  - type: STR_RUN_AND_GUN
    tags:
      SKILL_ID: 10
    costUse:
      time: 0
      mana: 12
    flatUse:
      mana: true
  - type: STR_SLASH
    tags:
      SKILL_ID: 11
    costUse:
      time: 0
      mana: 6
    flatUse:
      mana: true
    targetMode: 10
    compatibleWeapons: [STR_SWORD, STR_LASER_SWORD, STR_PLASMA_SWORD]
  - type: STR_CONCEAL
    tags:
      SKILL_ID: 12
    requiredBonuses: [STR_RANGER_ADVANCED_BONUS]
    costUse:
      time: 5
      mana: 12
    flatUse:
      mana: true
      time: true
  - type: STR_RAPID_FIRE
    tags:
      SKILL_ID: 13
    requiredBonuses: [STR_RANGER_ADVANCED_BONUS]
    costUse:
      time: 50
      mana: 5
    flatUse:
      mana: true
      time: false
    targetMode: 7 # auto
    compatibleWeapons: [STR_SHOTGUN, STR_LASER_SHOTGUN, STR_PLASMA_SHOTGUN]
  - type: STR_REAPER
    tags:
      SKILL_ID: 14
    requiredBonuses: [STR_RANGER_ELITE_BONUS]
    costUse:
      time: 0
      mana: 12
    flatUse:
      mana: true
  - type: STR_HEAVY_ROCKET
    tags:
      SKILL_ID: 20
    costUse:
      time: 20
      mana: 12
    flatUse:
      mana: true
      time: true
    compatibleWeapons: [STR_HEAVY_ROCKET_SKILL]
    checkHandsOnly: false
    targetMode: 8 # snap
  - type: STR_RAPID_DEPLOYMENT
    tags:
      SKILL_ID: 21
    costUse:
      time: 5
      mana: 5
    flatUse:
      mana: true
      time: true
    targetMode: 6 # throw
    checkHandsOnly: false
    compatibleWeapons: [STR_GRENADE, STR_SMOKE_GRENADE, STR_PROXIMITY_GRENADE]
  - type: STR_WAR_CRY
    tags:
      SKILL_ID: 22
    requiredBonuses: [STR_GRENADIER_ADVANCED_BONUS]
    costUse:
      time: 10
      mana: 8
    flatUse:
      mana: true
      time: true
  - type: STR_RAGE_BURST
    tags:
      SKILL_ID: 23
    requiredBonuses: [STR_GRENADIER_ADVANCED_BONUS]
    costUse:
      time: 50
      mana: 12
    flatUse:
      mana: true
      time: false
    flatUse:
      time: false
    targetMode: 7 # auto
    compatibleWeapons: [STR_HEAVY_CANNON, STR_XCOM_HEAVY_LASER, STR_XCOM_HEAVY_PLASMA]
  - type: STR_RUPTURE
    tags:
      SKILL_ID: 24
    requiredBonuses: [STR_GRENADIER_ELITE_BONUS]
    costUse:
      time: 0
      mana: 12
    flatUse:
      mana: true
    compatibleWeapons: [STR_HEAVY_CANNON, STR_XCOM_HEAVY_LASER, STR_XCOM_HEAVY_PLASMA]
  - type: STR_HEADSHOT       # default, increased crit chance + crit damage
    tags:
      SKILL_ID: 30
    costUse:
      time: 85
      mana: 4
    flatUse:
      mana: true
      time: false
    targetMode: 8 # snap
    compatibleWeapons: [STR_SNIPER_RIFLE, STR_LASER_SNIPER_RIFLE, STR_PLASMA_SNIPER_RIFLE]
  - type: STR_QUICK_AIM     # X reduce cost / increase aim
    tags:
      SKILL_ID: 31
    costUse:
      time: 50
      mana: 6
    flatUse:
      mana: true
      time: false
    targetMode: 9 # aimed
    compatibleWeapons: [STR_SNIPER_RIFLE, STR_LASER_SNIPER_RIFLE, STR_PLASMA_SNIPER_RIFLE]
  - type: STR_DISABLING_SHOT  # default, no damage, disable weapon of target
    tags:
      SKILL_ID: 32
    requiredBonuses: [STR_SNIPER_ADVANCED_BONUS]
    costUse:
      time: 85
      mana: 4
    flatUse:
      mana: true
      time: false
    targetMode: 8 # snap
    compatibleWeapons: [STR_SNIPER_RIFLE, STR_LASER_SNIPER_RIFLE, STR_PLASMA_SNIPER_RIFLE]
  - type: STR_DOUBLE_TAP     # X default, fire two shots
    tags:
      SKILL_ID: 33
    requiredBonuses: [STR_SNIPER_ADVANCED_BONUS]
    costUse:
      time: 85
      mana: 8
    flatUse:
      mana: true
      time: false
    targetMode: 7 # auto
    compatibleWeapons: [STR_SNIPER_RIFLE, STR_LASER_SNIPER_RIFLE, STR_PLASMA_SNIPER_RIFLE]
  - type: STR_SERIAL
    tags:
      SKILL_ID: 34
    requiredBonuses: [STR_SNIPER_ELITE_BONUS]
    costUse:
      time: 0
      mana: 12
    flatUse:
      mana: true
  - type: STR_PARAMEDIC
    tags:
      SKILL_ID: 40
    costUse:
      time: 2
      mana: 2
    flatUse:
      mana: true
      time: true
    targetMode: 11 # use
    checkHandsOnly: false
    compatibleWeapons: [STR_MEDI_KIT]
  - type: STR_AID_PROTOCOL
    tags:
      SKILL_ID: 41
    costUse:
      time: 50
      mana: 6
    flatUse:
      mana: true
      time: false
    targetMode: 11 # use
    checkHandsOnly: false
    compatibleWeapons: [STR_SKILL_AMP]
  - type: STR_COMBAT_PROTOCOL
    tags:
      SKILL_ID: 42
    requiredBonuses: [STR_SPECIALIST_ADVANCED_BONUS]
    costUse:
      time: 50
      mana: 6
    flatUse:
      mana: true
      time: false
    targetMode: 11 # use
    checkHandsOnly: false
    compatibleWeapons: [STR_SKILL_AMP]
  - type: STR_INTERFERENCE
    tags:
      SKILL_ID: 43
    requiredBonuses: [STR_SPECIALIST_ADVANCED_BONUS]
    costUse:
      time: 65
      mana: 8
    flatUse:
      mana: true
      time: false
    targetMode: 11 # use
    checkHandsOnly: false
    compatibleWeapons: [STR_SKILL_AMP]
  - type: STR_ELECTRIC_REINFORCEMENT
    tags:
      SKILL_ID: 44
    requiredBonuses: [STR_SPECIALIST_ELITE_BONUS]
    costUse:
      time: 55
      mana: 12
    flatUse:
      mana: true
      time: false
  - type: STR_SOUL_STEAL
    tags:
      SKILL_ID: 50
    requiredBonuses: [STR_PSI_OPERATIVE_ADVANCED_BONUS]
    costUse:
      time: 45
      mana: 3
    flatUse:
      mana: true
      time: false
    targetMode: 11 # use
    compatibleWeapons: [STR_PSI_AMP, STR_ALIEN_PSI_AMP]
    isPsiRequired: true
    checkHandsOnly: false
  - type: STR_INSPIRE
    tags:
      SKILL_ID: 51
    requiredBonuses: [STR_PSI_OPERATIVE_ADVANCED_BONUS]
    costUse:
      time: 45
      mana: 12
    flatUse:
      mana: true
      time: false
    targetMode: 11 # use
    compatibleWeapons: [STR_PSI_AMP, STR_ALIEN_PSI_AMP]
    isPsiRequired: true
    checkHandsOnly: false
  - type: STR_STASIS
    tags:
      SKILL_ID: 52
    requiredBonuses: [STR_PSI_OPERATIVE_ELITE_BONUS]
    costUse:
      time: 45
      mana: 8
    flatUse:
      mana: true
      time: false
    targetMode: 11 # use
    compatibleWeapons: [STR_ALIEN_PSI_AMP]
    isPsiRequired: true
    checkHandsOnly: false
  - type: STR_MIND_CONTROL
    tags:
      SKILL_ID: 53
    requiredBonuses: [STR_PSI_OPERATIVE_ELITE_BONUS]
    costUse:
      time: 45
      mana: 12
    flatUse:
      mana: true
      time: false
    targetMode: 13 # mindcontrol
    compatibleWeapons: [STR_ALIEN_PSI_AMP]
    isPsiRequired: true
    checkHandsOnly: false

soldiers:
  - delete: STR_SOLDIER
  - type: STR_RANGER
    showTypeInInventory: true
    tags:
      CLASS: 1
      BLADEMASTER: 20         #X (1-xxx) flat bonus to power (for attacks with sword)
    skillIconSprite: 2
    skills:
      - STR_RUN_AND_GUN
      - STR_SLASH
      - STR_CONCEAL
      - STR_RAPID_FIRE
      - STR_REAPER
    costBuy: 400
    costSalary: 200
    value: 30
    minStats:
      tu: 50
      stamina: 60
      health: 35
      bravery: 50
      reactions: 50
      firing: 40
      throwing: 20
      strength: 30
      psiStrength: 50
      psiSkill: 0
      melee: 40
      mana: 12
    maxStats:
      tu: 65
      stamina: 60
      health: 45
      bravery: 70
      reactions: 70
      firing: 70
      throwing: 80
      strength: 50
      psiStrength: 100
      psiSkill: 0
      melee: 80
      mana: 12
    statCaps:
      tu: 95
      stamina: 95
      health: 90
      bravery: 100
      reactions: 100
      firing: 100
      throwing: 100
      strength: 90
      psiStrength: 100
      psiSkill: 60
      melee: 120
      mana: 12
    standHeight: 22
    kneelHeight: 14
    femaleFrequency: 50
    allowPromotion: true
    nameInTitles: "{NAME}"
    nameInTitlesLong: "{NAME} aka {CALLSIGN}"
    nameInLists: "{NAME}"
    nameInListsLong: "{NAME}{STATSTRING}"
    nameInPilotLists: "{NAME}"
    nameInBattleScape: "{CALLSIGN}{TAGSTRING}"
    nameInBattleScapeAlternate: "{NAME}{STATSTRING}"
    nameStatStringSeparator: "/"
    nameTagStatStringSeparator: ">"
    soldierNames:               # extended *.nam file format allows for male & female callsigns
      - delete
      - SoldierNames/RangerNames/
    deathFemale: [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68]
    startMovingFemale: [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153]
    panicFemale: [154, 155, 156, 157, 158, 159, 160]
    berserkFemale: [161, 162, 163, 164, 165, 166, 167, 168, 169]
    deathMale: [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183]
    startMovingMale: [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268]
    panicMale: [269, 270, 271, 272, 273, 274, 275]
    berserkMale: [276, 277, 278, 279, 280, 281, 282, 283, 284]
    rankStrings:
      - STR_ROOKIE_RANGER_RANK
      - STR_SQUADDIE_RANGER_RANK
      - STR_SERGEANT_RANGER_RANK
      - STR_CAPTAIN_RANGER_RANK
      - STR_COLONEL_RANGER_RANK
      - STR_COMMANDER_RANGER_RANK
    armor: STR_NONE_UC
  - type: STR_GRENADIER
    showTypeInInventory: true
    tags:
      CLASS: 2
      SHREDDER: 1             #X (1/0) on/off, while using autoshot and shredder enabled weapons, remove additional armor from enemies
    specialWeapon: STR_HEAVY_ROCKET_SKILL
    skillIconSprite: 3
    skills:
      - STR_HEAVY_ROCKET
      - STR_RAPID_DEPLOYMENT
      - STR_WAR_CRY
      - STR_RAGE_BURST
      - STR_RUPTURE
    costBuy: 400
    costSalary: 200
    value: 30
    minStats:
      tu: 45
      stamina: 60
      health: 40
      bravery: 50
      reactions: 0
      firing: 40
      throwing: 20
      strength: 40
      psiStrength: 40
      psiSkill: 0
      melee: 10
      mana: 12
    maxStats:
      tu: 55
      stamina: 70
      health: 45
      bravery: 70
      reactions: 10
      firing: 70
      throwing: 80
      strength: 60
      psiStrength: 100
      psiSkill: 0
      melee: 40
      mana: 12
    statCaps:
      tu: 70
      stamina: 100
      health: 95
      bravery: 100
      reactions: 50
      firing: 100
      throwing: 70
      strength: 110
      psiStrength: 100
      psiSkill: 50
      melee: 60
      mana: 12
    standHeight: 22
    kneelHeight: 14
    femaleFrequency: 50
    allowPromotion: true
    nameInTitles: "{NAME}"
    nameInTitlesLong: "{NAME} aka {CALLSIGN}"
    nameInLists: "{NAME}"
    nameInListsLong: "{NAME}{STATSTRING}"
    nameInPilotLists: "{NAME}"
    nameInBattleScape: "{CALLSIGN}{TAGSTRING}"
    nameInBattleScapeAlternate: "{NAME}{STATSTRING}"
    nameStatStringSeparator: "/"
    nameTagStatStringSeparator: ">"
    soldierNames:               # extended *.nam file format allows for male & female callsigns
      - delete
      - SoldierNames/GrenadierNames/
    deathFemale: [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68]
    startMovingFemale: [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153]
    panicFemale: [154, 155, 156, 157, 158, 159, 160]
    berserkFemale: [161, 162, 163, 164, 165, 166, 167, 168, 169]
    deathMale: [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183]
    startMovingMale: [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268]
    panicMale: [269, 270, 271, 272, 273, 274, 275]
    berserkMale: [276, 277, 278, 279, 280, 281, 282, 283, 284]
    rankStrings:
      - STR_ROOKIE_GRENADIER_RANK
      - STR_SQUADDIE_GRENADIER_RANK
      - STR_SERGEANT_GRENADIER_RANK
      - STR_CAPTAIN_GRENADIER_RANK
      - STR_COLONEL_GRENADIER_RANK
      - STR_COMMANDER_GRENADIER_RANK
    armor: STR_NONE_UC
  - type: STR_SNIPER
    showTypeInInventory: true
    tags:
      CLASS: 3
      DEATH_FROM_ABOVE: 1     #X (1/0) on/off enables refund of TU when killing from above, once per turn 
    skillIconSprite: 4
    skills:
      - STR_QUICK_AIM     # X reduce cost / increase aim
      - STR_HEADSHOT       # default, increased crit chance + crit damage
      - STR_DISABLING_SHOT  # default, no damage, disable weapon of target
      - STR_DOUBLE_TAP     # X default, fire two shots
      - STR_SERIAL
    costBuy: 400
    costSalary: 200
    value: 30
    minStats:
      tu: 50
      stamina: 50
      health: 30
      bravery: 30
      reactions: 50
      firing: 60
      throwing: 20
      strength: 10
      psiStrength: 50
      psiSkill: 0
      melee: 0
      mana: 12
    maxStats:
      tu: 60
      stamina: 70
      health: 45
      bravery: 50
      reactions: 70
      firing: 70
      throwing: 80
      strength: 30
      psiStrength: 100
      psiSkill: 0
      melee: 10
      mana: 12
    statCaps:
      tu: 80
      stamina: 100
      health: 80
      bravery: 100
      reactions: 100
      firing: 150
      throwing: 120
      strength: 50
      psiStrength: 100
      psiSkill: 60
      melee: 20
      mana: 12
    standHeight: 22
    kneelHeight: 14
    femaleFrequency: 50
    allowPromotion: true
    soldierNames:               # extended *.nam file format allows for male & female callsigns
      - delete
      - SoldierNames/SniperNames/
    deathFemale: [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68]
    startMovingFemale: [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153]
    panicFemale: [154, 155, 156, 157, 158, 159, 160]
    berserkFemale: [161, 162, 163, 164, 165, 166, 167, 168, 169]
    deathMale: [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183]
    startMovingMale: [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268]
    panicMale: [269, 270, 271, 272, 273, 274, 275]
    berserkMale: [276, 277, 278, 279, 280, 281, 282, 283, 284]
    rankStrings:
      - STR_ROOKIE_SNIPER_RANK
      - STR_SQUADDIE_SNIPER_RANK
      - STR_SERGEANT_SNIPER_RANK
      - STR_CAPTAIN_SNIPER_RANK
      - STR_COLONEL_SNIPER_RANK
      - STR_COMMANDER_SNIPER_RANK
    armor: STR_NONE_UC
  - type: STR_SPECIALIST
    showTypeInInventory: true
    tags:
      CLASS: 4
      GUARDIAN: 1             #X (1/0) a 50% chance that TU on reaction fire get refunded
      BASIC_COMBAT_INFORMATION: 1
    specialWeapon: STR_SKILL_AMP
    skillIconSprite: 5
    skills:
      - STR_PARAMEDIC
      - STR_AID_PROTOCOL
      - STR_COMBAT_PROTOCOL
      - STR_INTERFERENCE
      - STR_ELECTRIC_REINFORCEMENT
    costBuy: 400
    costSalary: 200
    value: 30
    minStats:
      tu: 50
      stamina: 45
      health: 30
      bravery: 50
      reactions: 40
      firing: 40
      throwing: 20
      strength: 20
      psiStrength: 50
      psiSkill: 0
      melee: 0
      mana: 12
    maxStats:
      tu: 60
      stamina: 80
      health: 45
      bravery: 80
      reactions: 70
      firing: 70
      throwing: 40
      strength: 50
      psiStrength: 100
      psiSkill: 0
      melee: 20
      mana: 12
    statCaps:
      tu: 85
      stamina: 100
      health: 90
      bravery: 120
      reactions: 120
      firing: 100
      throwing: 65
      strength: 70
      psiStrength: 100
      psiSkill: 60
      melee: 70
      mana: 12
    standHeight: 22
    kneelHeight: 14
    femaleFrequency: 50
    allowPromotion: true
    soldierNames:               # extended *.nam file format allows for male & female callsigns
      - delete
      - SoldierNames/SpecialistNames/
    deathFemale: [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68]
    startMovingFemale: [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153]
    panicFemale: [154, 155, 156, 157, 158, 159, 160]
    berserkFemale: [161, 162, 163, 164, 165, 166, 167, 168, 169]
    deathMale: [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183]
    startMovingMale: [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268]
    panicMale: [269, 270, 271, 272, 273, 274, 275]
    berserkMale: [276, 277, 278, 279, 280, 281, 282, 283, 284]
    rankStrings:
      - STR_ROOKIE_SPECIALIST_RANK
      - STR_SQUADDIE_SPECIALIST_RANK
      - STR_SERGEANT_SPECIALIST_RANK
      - STR_CAPTAIN_SPECIALIST_RANK
      - STR_COLONEL_SPECIALIST_RANK
      - STR_COMMANDER_SPECIALIST_RANK
    armor: STR_NONE_UC
  - type: STR_PSI_OPERATIVE
    showTypeInInventory: true
    skillIconSprite: 6
    skills:
      - STR_SOUL_STEAL
      - STR_INSPIRE
      - STR_STASIS
      - STR_MIND_CONTROL
    requiresBuyBaseFunc:
      - STR_PSI_LAB
    tags:
      CLASS: 5
    costBuy: 400
    costSalary: 200
    value: 30
    minStats:
      tu: 45
      stamina: 40
      health: 30
      bravery: 30
      reactions: 20
      firing: 20
      throwing: 20
      strength: 10
      psiStrength: 70
      psiSkill: 16
      melee: 0
      mana: 12
    maxStats:
      tu: 65
      stamina: 70
      health: 45
      bravery: 50
      reactions: 50
      firing: 40
      throwing: 40
      strength: 30
      psiStrength: 100
      psiSkill: 50
      melee: 10
      mana: 12
    statCaps:
      tu: 80
      stamina: 100
      health: 90
      bravery: 100
      reactions: 100
      firing: 150
      throwing: 120
      strength: 50
      psiStrength: 100
      psiSkill: 60
      melee: 20
      mana: 12
    standHeight: 22
    kneelHeight: 14
    femaleFrequency: 50
    allowPromotion: true
    soldierNames:               # extended *.nam file format allows for male & female callsigns
      - delete
      - SoldierNames/PsiOpNames/
    deathFemale: [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68]
    startMovingFemale: [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153]
    panicFemale: [154, 155, 156, 157, 158, 159, 160]
    berserkFemale: [161, 162, 163, 164, 165, 166, 167, 168, 169]
    deathMale: [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183]
    startMovingMale: [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268]
    panicMale: [269, 270, 271, 272, 273, 274, 275]
    berserkMale: [276, 277, 278, 279, 280, 281, 282, 283, 284]
    rankStrings:
      - STR_ROOKIE_PSI_OPERATIVE_RANK
      - STR_SQUADDIE_PSI_OPERATIVE_RANK
      - STR_SERGEANT_PSI_OPERATIVE_RANK
      - STR_CAPTAIN_PSI_OPERATIVE_RANK
      - STR_COLONEL_PSI_OPERATIVE_RANK
      - STR_COMMANDER_PSI_OPERATIVE_RANK
    armor: STR_NONE_UC

extended:
  tags:
    RuleSkill:
      SKILL_ID: int
    RuleSoldier:
      CLASS: int            # 0 = no class, 1 = Ranger, 2 = Grenadier, 3 = Sniper, 4 = Specialist, 5 = Psi
      BLADEMASTER: int
      SHREDDER: int
      GUARDIAN: int
      DEATH_FROM_ABOVE: int  
      BASIC_COMBAT_INFORMATION: int
    BattleGame:
      COMBAT_INFORMATION_LEVEL: int
      BATTLE_CRY_ACTIVATED: int # 0 = not activated, 1 = active this turn, 2 = disabled
      BATTLE_CRY_X: int     # x position where battle cry was activated
      BATTLE_CRY_Y: int     # y position where battle cry was activated
      ELECTRIC_REINFORCEMENT_ACTIVATED: int
    BattleUnit:
      LIGHTNING_REFLEXES_STATE: int
      UNTOUCHABLE_COUNTER: int
      UNTOUCHABLE_STATE: int
      REAPER_STATE: int  # 0 = not available, 1 = not activated yet, available 2 = active in this turn
      DEATH_FROM_ABOVE_STATE: int
      BLAST_PADDING_STATE: int
      PHANTOM_STATE: int
      PHANTOM_STATE_ORIGINAL: int
      STASIS_STATE: int  # 0 = no stasis, 1 = stasis active until next alien turn, 2 = stasis active until next xcom turn
      SUSTAIN_STATE: int
      EXECUTIONER_STATE: int
      THREAT_ASSESSMENT_STATE: int
      BACKSTAB_STATE: int
      BLADEMASTER_STATE: int
      FIELD_SPECIALIST_STATE: int
      RUPTURE_STATE: int # 0 = no effect, 1 = active on next hit, 2 = unit is ruptured (takes increased damage)
      SHREDDER_STATE: int
      PARRY_STATE: int
      MELEE_DEFENSE_STATE: int
      SLAYER_STATE: int
      RUN_AND_GUN_STATE: int
      HEADSHOT_STATE: int
      SHADOWSTRIKE_STATE: int
      AIM_STATE: int
      ALPHA_MIKE_FOXTROT_STATE: int
      SERIAL_STATE: int
      SAVIOR_STATE: int
      MAYHEM_STATE: int
      STEADFAST_STATE: int
      EVER_VIGILANT_STATE: int
      GUARDIAN_STATE: int
      STING_GRENADES_STATE: int
      CENTER_MASS_STATE: int
      FIELD_SURGEON_STATE: int
      HEALED_BY_FIELD_SURGEON: int
      STUNNED: int
      AIM_X: int
      AIM_Y: int
      AIM_Z: int
      WEAPON_DISABLED: int
      REINFORCED: int
      TEST_COUNTER: int
      VIS_EFFECT: int
      VIS_COLOR: int
      VIS_DELAY: int
      VIS_REPLACE_COLOR: int
      LAST_FLASH_FRAME: int
      AID_PROTOCOL_STATE: int
      ELECTRIC_REINFORCEMENT_STATE: int
    RuleSoldierBonus:
      LIGHTNING_REFLEXES: int
      UNTOUCHABLE: int
      REAPER: int
      BLAST_PADDING: int
      SUSTAIN: int
      EXECUTIONER: int
      THREAT_ASSESSMENT: int
      BACKSTAB: int
      FIELD_SPECIALIST: int
      PHANTOM: int
      SHADOWSTRIKE: int
      MAYHEM: int
      STING_GRENADES: int
      RUPTURE: int
      AIM: int
      CENTER_MASS: int
      ALPHA_MIKE_FOXTROT: int
      SERIAL: int
      STEADFAST: int
      REVIVE: int
      SAVIOR: int
      ELECTRIC_REINFORCEMENT: int
      FIELD_SURGEON: int
      EVER_VIGILANT: int
      ADVANCED_COMBAT_INFORMATION: int
    RuleItem:
      SKILL_POWER_ITEM: int
      CLASS_SKILL_ACTIVATION: int
      SWORD_TYPE: int
      GUN_TYPE: int
      RUPTURE_DAMAGE: int
      SHREDDER_DAMAGE: int
      INFLICT_DISORIENT: int
  scripts:
    skillUseUnit:
      - offset: 23
        code: |
          var int unit_class;
          var int temp;
          var ptr RuleItem item_rule;
          var ptr RuleSoldier soldier_rule;
          var ptr RuleArmor armor_rule;
          var int run_and_gun;
          var int max;
          var int cur;
          var int result;
          var int skill_id;

          skill.getTag skill_id Tag.SKILL_ID;

          debug_log "SkillUse triggered" skill_id have_tu;

          if eq have_tu 0;
            debug_log "No Resources. Aborted.";
            set continue_action 0;
            return;
          end;

          if eq skill_id 10;    # Run & Gun
            debug_log "Skill activation (Run & Gun)";

            actor.getTimeUnitsMax max;
            actor.getTimeUnits cur;
            add cur max;
            actor.setTimeUnits cur;

            actor.getEnergyMax max;
            actor.getEnergy cur;
            add cur max;
            actor.setEnergy cur;

            set spend_tu 1; # spend the mana for skill use
          else eq skill_id 12;    # Conceal
            debug_log "Skill activation (Conceal)";
            battle_game.tryConcealUnit actor result;
            if gt result 0;
              actor.getTag temp Tag.PHANTOM_STATE_ORIGINAL;
              actor.setTag Tag.PHANTOM_STATE temp;
              set spend_tu 1;
            else;
              battle_game.flashMessage "Failed. You have been spotted.";
            end;
          else eq skill_id 14;    # Reaper
            actor.getTag temp Tag.REAPER_STATE;
            if eq temp 1; # not yet activated in this mission, activate now
              battle_game.flashMessage "REAPER Activated";
              actor.setTag Tag.REAPER_STATE 2;
              set spend_tu 1;
            else;
              battle_game.flashMessage "STR_NO_USES_LEFT";
            end;
          else eq skill_id 22;    # War Cry
            battle_game.getTurn temp;
            battle_game.setTag Tag.BATTLE_CRY_ACTIVATED temp;
            actor.getPosition.getX temp;
            battle_game.setTag Tag.BATTLE_CRY_X temp;
            actor.getPosition.getY temp;
            battle_game.setTag Tag.BATTLE_CRY_Y temp;
            battle_game.flashMessage "WAR CRY Activated";
            set spend_tu 1;
          else eq skill_id 24;    # Rupture
            battle_game.flashMessage "RUPTURE Activated";
            actor.setTag Tag.RUPTURE_STATE 1;
            actor.setTag Tag.CRIT_CHANCE_THIS_TURN 100;
            set spend_tu 1;
          else eq skill_id 34;    # Serial
            actor.getTag temp Tag.SERIAL_STATE;
            if eq temp 1; # not yet activated in this mission, activate now
              battle_game.flashMessage "SERIAL Activated";
              actor.setTag Tag.SERIAL_STATE 2;
              set spend_tu 1;
            else;
              battle_game.flashMessage "STR_NO_USES_LEFT";
            end;
          else eq skill_id 44;    # Electric Reinforcement
            actor.getTag temp Tag.ELECTRIC_REINFORCEMENT_STATE;
            if eq temp 1; # not yet activated in this mission, activate now
              battle_game.getTurn temp;
              battle_game.flashMessage "ELECTRIC REINFORCEMENT Activated";
              debug_log "Electric Reinforcement on turn" temp;
              battle_game.setTag Tag.ELECTRIC_REINFORCEMENT_ACTIVATED temp;
              actor.setTag Tag.ELECTRIC_REINFORCEMENT_STATE 2;
              set spend_tu 1;
            else;
              battle_game.flashMessage "STR_NO_USES_LEFT";
            end;
          end;
          return;
    reactionUnitAction: 
      - offset: 23   # for lightning reflexes
        code: |
          var int reflexes;
          var int action_id;
          var int reaction_id;

          action_unit.getId action_id;
          reaction_unit.getId reaction_id;

          action_unit.getTag reflexes Tag.LIGHTNING_REFLEXES_STATE;
          
          if gt reflexes 0;
            debug_log "Reaction chance before LR activation:" reaction_chance;
            set reaction_chance 100;
            sub reaction_chance reflexes;
            debug_log "Lightning Reflexes Activated! RC now:" reaction_chance;
          end;
          return reaction_chance;
    newTurnUnit:
      - offset: 24   # for phantom
        code: |
          var int turns_since_spotted;
          var int phantom;

          unit.getTurnsSinceSpotted turns_since_spotted;
          
          if and neq turns_since_spotted 255 gt turns_since_spotted -1;
            unit.getTag phantom Tag.PHANTOM_STATE;
            if gt phantom 0;
              unit.setTag Tag.PHANTOM_STATE 0;
              debug_log "You have been spotted! Concealmeant disabled.";
            end;
          end;
          return;
      - offset: 25   # for untouchable
        code: |
          var int untouchable;
          var int unit_id;
          var int counter;

          if eq side 0; # xcom turns
            unit.getId unit_id;
            
            unit.getTag untouchable Tag.UNTOUCHABLE_STATE;

            if gt untouchable 0;
              debug_log "New turn for untouchable unit:" unit_id;
              unit.getTag counter Tag.UNTOUCHABLE_COUNTER;
              if gt counter 0;
                debug_log "Untouchable reset!";
                unit.setTag Tag.UNTOUCHABLE_COUNTER 0;
              end;
            end;
          end;
          return;
      - offset: 26   # for reaper
        code: |
          var int reaper_state;
          var int unit_id;
          if eq side 0; # xcom turns
            unit.getId unit_id;
            unit.getTag reaper_state Tag.REAPER_STATE;

            if gt reaper_state 1;
              debug_log "Reaper was active last turn for:" unit_id;
              debug_log "Reaper deactivated for this unit.";
              unit.setTag Tag.REAPER_STATE 0;
            end;
          end;
          return;
      - offset: 27   # for stasis
        code: |
          var int stasis_state;
          var int unit_id;

          unit.getTag stasis_state Tag.STASIS_STATE;
          if gt stasis_state 0;
            if and eq stasis_state 2 eq side 1; # end on alien turn
              unit.getId unit_id;
              debug_log "Stasis was active last turn for:" unit_id;
              debug_log "Stasis deactivated for this unit.";
              unit.setTag Tag.STASIS_STATE 0;
              unit.setTag Tag.VIS_EFFECT 0;
            else and eq stasis_state 1 eq side 0; # end on xcom turn
              unit.getId unit_id;
              debug_log "Stasis was active last turn for:" unit_id;
              debug_log "Stasis deactivated for this unit.";
              unit.setTag Tag.STASIS_STATE 0;
              unit.setTag Tag.VIS_EFFECT 0;
            else; # still in stasis
              unit.setTimeUnits 0;
            end;
          end;
          return;
      - offset: 28   # for war cry
        code: |
          var int battle_cry;
          var int activation_dist_sq;
          var int temp;
          var int two_dee_distance_sq;
          var int source_x;
          var int source_y;
          var int unit_x;
          var int unit_y;
          var int turns_since_activation;
          var int unit_faction;

          battle_game.getTurn turns_since_activation;

          set activation_dist_sq 10;
          battle_game.getTag battle_cry Tag.BATTLE_CRY_ACTIVATED;
          sub turns_since_activation battle_cry;

          unit.getFaction unit_faction;
          if and eq side 1 eq unit_faction 1; # aliens only
            if and gt battle_cry 0 le turns_since_activation 1; # battle cry was activated
              debug_log "Checking battle cry buff for" unit;
              debug_log "  - during (side), of faction" side unit_faction;
              debug_log "  - BattleCry state, turns since act." battle_cry turns_since_activation;
          
              set two_dee_distance_sq 0;
              mul activation_dist_sq activation_dist_sq;

              battle_game.getTag source_x Tag.BATTLE_CRY_X;
              battle_game.getTag source_y Tag.BATTLE_CRY_Y;

              unit.getPosition.getX unit_x;
              unit.getPosition.getY unit_y;
              
              sub source_x unit_x;
              sub source_y unit_y;

              mul source_x source_x;
              mul source_y source_y;

              add two_dee_distance_sq source_x;
              add two_dee_distance_sq source_y;
              
              debug_log "Battle cry distance (sq)" activation_dist_sq;
              debug_log "Unit dist from source (sq)" two_dee_distance_sq;

              if gt two_dee_distance_sq activation_dist_sq;
                debug_log "Too far away. No effect.";
              else;
                debug_log "Unit is under effect of battle cry:" unit;
                unit.setTag Tag.VIS_EFFECT 6;  # pseudo-random pixels on armor
                unit.setTag Tag.VIS_COLOR COLOR_X1_YELLOW;
                battle_game.randomRange temp 1 100;
                unit.setTag Tag.VIS_DELAY temp; # prng offset
                unit.setTag Tag.VIS_REGION 1;

                unit.getTimeUnits temp;
                div temp 2;
                unit.setTimeUnits temp;

                unit.getMorale temp;
                sub temp 5;
                unit.setMorale temp;
              end;
            else and gt battle_cry 0 eq turns_since_activation 2; # last turn is used for deactivation
              unit.setTag Tag.VIS_EFFECT 0;
            end;
          end;

          return;
      - offset: 29   # for stun / sting grenades
        code: |
          var int stunned;
          if eq side 0; # xcom turns
            unit.getTag stunned Tag.STUNNED;
            if gt stunned 0;
              sub stunned 1;
              if eq stunned 0;
                unit.setTag Tag.VIS_EFFECT 0;
              else;
                unit.setTag Tag.STUNNED stunned;            
                unit.setTimeUnits 0;
                debug_log unit "is still stunned.";
              end;
            end;
          end;
          return;
      - offset: 30   # for death from above
        code: |
          var int death_from_above;
          if eq side 0; # xcom turns
            unit.getTag death_from_above Tag.DEATH_FROM_ABOVE_STATE;
            if eq death_from_above 2;
              unit.setTag Tag.DEATH_FROM_ABOVE_STATE 1;
              debug_log unit " - Death from above reset.";
            end;
          end;
          return;
      - offset: 31   # for aim
        code: |
          var int is_kneeling;
          var int pos_x;
          var int pos_y;
          var int pos_z;
          var int aim;
          var int kneeling;
          if eq side 0; # xcom turns
            unit.getTag aim Tag.AIM_STATE;
            unit.isKneeled kneeling;

            if and gt aim 0 gt kneeling 0;
              unit.getPosition.getX pos_x;
              unit.getPosition.getY pos_y;
              unit.getPosition.getZ pos_z;

              unit.setTag Tag.AIM_STATE 2; # was kneeling at the beginning of the turn
              
              unit.setTag Tag.AIM_X pos_x;
              unit.setTag Tag.AIM_Y pos_y;
              unit.setTag Tag.AIM_Z pos_z;
            end;
          end;
          return;
      - offset: 32   # for ever vigilant
        code: |
          var int vigilant;
          var int tu_max;
          unit.getTag vigilant Tag.EVER_VIGILANT_STATE;
          
          if and eq side 1 gt vigilant 0; # ever vigilant only triggers on enemy turns
            debug_log unit " - Ever vigilant activated. All TU refunded for beginng of enemy turn.";
            unit.getTimeUnitsMax tu_max;
            unit.setTimeUnits tu_max;
          end;
          return;
      - offset: 33   # for serial
        code: |
          var int serial_state;
          var int unit_id;
          if eq side 0; # xcom turns
            unit.getId unit_id;
            unit.getTag serial_state Tag.SERIAL_STATE;

            if gt serial_state 1;
              debug_log "Serial was active last turn for:" unit_id;
              debug_log "Serial deactivated for this unit.";
              unit.setTag Tag.SERIAL_STATE 0;
            end;
          end;
          return;
      - offset: 34   # for aid protocol
        code: |
          var int aid_protocol_state;
          unit.getTag aid_protocol_state Tag.AID_PROTOCOL_STATE;
          if and eq side 0 gt aid_protocol_state 0; # xcom turns
            unit.setTag Tag.AID_PROTOCOL_STATE 0;
            debug_log "Aid Protocol was active last turn for:" unit;
            debug_log "Aid Protocol deactivated for this unit.";
            unit.setTag Tag.VIS_EFFECT 0;
          end;
          return;
      - offset: 35   # for electric reinforcement
        code: |
          var int electric_reinforcement_activated;
          var int health;
          var int min_health;
          var int turns_since_activation;
          var int temp;
          var int faction;

          battle_game.getTurn turns_since_activation;
          battle_game.getTag electric_reinforcement_activated Tag.ELECTRIC_REINFORCEMENT_ACTIVATED;
          sub turns_since_activation electric_reinforcement_activated;
          unit.getFaction faction;
          if eq faction 0; # x-com only
            if and gt electric_reinforcement_activated 0 le turns_since_activation 1; # reinforcement was activated
              debug_log "Electric reinforcement effect for:" unit;
              unit.setTag Tag.REINFORCED 20;
              unit.setTag Tag.VIS_EFFECT 6;  # pseudo-random pixels on armor
              unit.setTag Tag.VIS_COLOR COLOR_X1_BLUE1;
              battle_game.randomRange temp 1 100;
              unit.setTag Tag.VIS_DELAY temp; # prng offset
              unit.setTag Tag.VIS_REGION 1;
            else and gt electric_reinforcement_activated 0 eq turns_since_activation 2; # last turn is used for deactivation
              unit.setTag Tag.REINFORCED 0;
              unit.setTag Tag.VIS_EFFECT 0;
            end;
          end;
          return;
      - offset: 36   # for Combat Information
        code: |
          var int has_basic_combat_information;
          var ptr RuleSoldier soldier_rule;
          var int has_advanced_combat_information;
          var int current_info_level;

          unit.getRuleSoldier soldier_rule;

          soldier_rule.getTag has_basic_combat_information Tag.BASIC_COMBAT_INFORMATION;
          battle_game.getTag current_info_level Tag.COMBAT_INFORMATION_LEVEL;

          if and gt has_basic_combat_information 0 lt current_info_level 1;
            battle_game.setTag Tag.COMBAT_INFORMATION_LEVEL 1;
          end;
          return;
    hitUnit:
      - offset: 23   # for disabling shot
        code: |
          var ptr RuleSoldier soldier_rule;
          var int skill_id;
          var int temp;
          # check attacker class
          # check skill id

          attacker.getRuleSoldier soldier_rule;
          if and neq skill null neq soldier_rule null;
            skill.getTag skill_id Tag.SKILL_ID;
            if eq skill_id 32;  # Disabling Shot
              debug_log "Unit hit with disabling shot:" unit;
              battle_game.flashMessage "DISABLED!";
              div power 20;
              unit.setTag Tag.WEAPON_DISABLED 1;
              unit.setTag Tag.VIS_EFFECT 6;  # pseudo-random pixels on armor
              unit.setTag Tag.VIS_COLOR COLOR_X1_BLUE2;
              battle_game.randomRange temp 1 100;
              unit.setTag Tag.VIS_DELAY temp; # prng offset
              unit.setTag Tag.VIS_REGION 3;
            end;
          end;
          return power part side;
      - offset: 24   # for blademaster
        code: |
          var int blademaster;
          var int sword;
          var ptr RuleItem item_rule;

          attacker.getTag blademaster Tag.BLADEMASTER_STATE;
          
          if and neq blademaster 0 eq battle_action battle_action_hit;
            debug_log "Blademaster is doing melee attack";
            damaging_item.getRuleItem item_rule;
            item_rule.getTag sword Tag.SWORD_TYPE;
            if gt sword 0;
              add power blademaster;
              debug_log " - power increased by:" blademaster;
            end;
          end;
          return power part side;
      - offset: 25   # for untouchable
        code: |
          var int unit_id;
          var int untouchable;
          var int counter;

          unit.getId unit_id;

          unit.getTag untouchable Tag.UNTOUCHABLE_STATE;

          if gt untouchable 0;
            debug_log "Hit against untouchable unit" unit_id;
            unit.getTag counter Tag.UNTOUCHABLE_COUNTER;
            if gt counter 0;
              debug_log " - with counter " counter;
              set power 0;
              debug_log " - DEFLECTED!";
              sub counter 1;
              unit.setTag Tag.UNTOUCHABLE_COUNTER counter;
              battle_game.flashMessage "UNTOUCHABLE!";
            end;
          end;
          return power part side;
      - offset: 26   # for stasis
        code: |
          var int stasis_state;

          unit.getTag stasis_state Tag.STASIS_STATE;

          if gt stasis_state 0;
            debug_log "Unit in stasis was hit. Power reduced to zero.";
            set power 0;
          end;
          return power part side;
      - offset: 27   # for blast padding
        code: |
          var int blast_padding;

          unit.getTag blast_padding Tag.BLAST_PADDING_STATE;

          if gt blast_padding 0;
            sub power 5;  # additional armor layer
            if or eq damaging_type 2 eq damaging_type 3;
              debug_log "Blast padding against damageType Incendiary / HE. Power" power;
              muldiv power blast_padding 100;
              debug_log " - Power reduced to" power;
            end;
          end;
          return power part side;
      - offset: 28   # for threat assessment
        code: |
          var int threat_assessment;
          var int current_time_units;
          var int half_max_time_units;

          unit.getTag threat_assessment Tag.THREAT_ASSESSMENT_STATE;
          unit.getTimeUnits current_time_units;
          unit.getTimeUnitsMax half_max_time_units;
          div half_max_time_units 2;

          if gt threat_assessment 0;
            if gt current_time_units half_max_time_units;
              debug_log "Threat assessment activated. Power" power;
              muldiv power threat_assessment 100;
              debug_log " - Power reduced to" power;
            end;
          end;
          return power part side;
      - offset: 29   # for backstab
        code: |
          var int backstab;
          var ptr RuleArmor armor_rule;
          
          attacker.getTag backstab Tag.BACKSTAB_STATE;

          if gt backstab 0;
            if eq side 2;
              debug_log "Backstab activated with power" power;
              muldiv power backstab 100; # 150 = 150% power increase
              debug_log "  - power adjusted to" power;
            end;
          end;
          unit.getRuleArmor armor_rule;
          debug_log "HIT unit:" unit;
          debug_log " with armor:" armor_rule;
          debug_log " Power:" power; # debug
          return power part side;
      - offset: 30   # for parry
        code: |
          var int unit_id;
          var int parry;
          var int parry_chance;
          var int attacker_x;
          var int attacker_y;
          var int target_x;
          var int target_y;
          var int two_dee_distance_sq;
          var int parry_distance_sq;

          unit.getId unit_id;

          set parry_distance_sq 2; # distance in tiles from which an attack can be parried

          unit.getTag parry Tag.PARRY_STATE;  # hit unit has parry skill?
          set parry_chance parry;  # 40 = 40% chance to parry an attack, can be set on the tag

          if gt parry 0;
            debug_log "Hit against parrying unit" unit_id;

            set two_dee_distance_sq 0;
            mul parry_distance_sq parry_distance_sq;

            attacker.getPosition.getX attacker_x;
            attacker.getPosition.getY attacker_y;

            unit.getPosition.getX target_x;
            unit.getPosition.getY target_y;
            
            sub attacker_x target_x;
            sub attacker_y target_y;

            mul attacker_x attacker_x;
            mul attacker_y attacker_y;

            add two_dee_distance_sq attacker_x;
            add two_dee_distance_sq attacker_y;
            
            debug_log "Parry distance (sq)" parry_distance_sq;
            debug_log "Parry unit attacked from dist (sq)" two_dee_distance_sq;

            if gt two_dee_distance_sq parry_distance_sq;
              debug_log "Too far. No parry possible.";
            else;
              battle_game.randomChance parry_chance;
              if eq parry_chance 1;
                debug_log "PARRY activated, attack negated.";
                set power 0;
              end;
            end;
          end;
          return power part side;
      - offset: 31   # for melee defense
        code: |
          var int unit_id;
          var int melee_defense;

          unit.getId unit_id;
          unit.getTag melee_defense Tag.MELEE_DEFENSE_STATE;  # hit unit has melee defense skill?

          if gt melee_defense 0;
            if eq battle_action battle_action_hit;
              debug_log "Melee hit against melee defense unit" unit_id power;
              muldiv power melee_defense 100; # 50 = 50% damage reduction to health
              debug_log " - Power reduced to" power;
            end;
          end;
          return power part side;
      - offset: 32   # for shadowstrike
        code: |
          var int camo_state;
          var int shadowstrike_state;
          var int turns_since_spotted;
          var int temp;

          attacker.getTag camo_state Tag.PHANTOM_STATE;
          attacker.getTag shadowstrike_state Tag.SHADOWSTRIKE_STATE;
          if and gt shadowstrike_state 0 gt camo_state 0;
            attacker.getTurnsSinceSpotted turns_since_spotted;
            if or eq turns_since_spotted 255 le turns_since_spotted -1;
              # shadowstrike activate
              battle_game.flashMessage "SHADOWSTRIKE!";
              attacker.getTag temp Tag.CRIT_CHANCE_NEXT_HIT;
              add temp shadowstrike_state;
              attacker.setTag Tag.CRIT_CHANCE_NEXT_HIT temp;
            end;
          end;
          return power part side;
      - offset: 33   # for mayhem
        code: |
          var int mayhem;
          var int gun_type;
          var ptr RuleItem item_rule;
          weapon_item.getRuleItem item_rule;
          item_rule.getTag gun_type Tag.GUN_TYPE;

          attacker.getTag mayhem Tag.MAYHEM_STATE;
          
          if gt mayhem 0;
            if or eq damaging_type 2 eq damaging_type 3 eq gun_type 5;
              debug_log "Mayhem triggered (power):" power;
              # EXPLOSIVE / FIRE / HEAVY GUN
              add mayhem 100;
              muldiv power mayhem 100;
              debug_log " - power increased to:" power;
            end;
          end;
          return power part side;
      - offset: 34   # for sting grenades
        code: |
          var int disorient;
          var int stun;
          var int sting_grenades;
          var ptr RuleItem item_rule;

          attacker.getTag sting_grenades Tag.STING_GRENADES_STATE;

          damaging_item.getRuleItem item_rule;
          item_rule.getTag disorient Tag.INFLICT_EFFECT;

          if and gt sting_grenades 0 eq disorient 1;
            set stun sting_grenades; # = 50% stun chance
            battle_game.randomChance stun;
            if gt stun 0;
              unit.setTag Tag.STUNNED 2;
              unit.setTimeUnits 0;
              debug_log unit "is stunned now!";
              unit.setTag Tag.VIS_EFFECT 4;  # interval flashing
              unit.setTag Tag.VIS_COLOR COLOR_X1_SPECIAL;
              unit.setTag Tag.VIS_DELAY 40; # in frames
            end;
          end;
          return power part side;
      - offset: 35   # for center mass
        code: |
          var int center_mass;
          var int gun_type;
          var ptr RuleItem item_rule;

          weapon_item.getRuleItem item_rule;

          attacker.getTag center_mass Tag.CENTER_MASS_STATE;
          
          if gt center_mass 0;
            item_rule.getTag gun_type Tag.GUN_TYPE;
            if or eq gun_type 2 eq gun_type 3;
              debug_log "Center mass triggered (power):" power;
              # Standard Rifles / Sniper Rifles
              add center_mass 100;
              muldiv power center_mass 100;
              debug_log " - power increased to:" power;
            end;
          end;
          return power part side;
      - offset: 36   # for alpha mike foxtrot
        code: |
          var int amf_state;
          var int temp;
          var int gun_type;
          var ptr RuleItem item_rule;

          weapon_item.getRuleItem item_rule;

          item_rule.getTag gun_type Tag.GUN_TYPE;
          attacker.getTag amf_state Tag.ALPHA_MIKE_FOXTROT_STATE;
          if and gt amf_state 0 eq gun_type 3; # sniper rifles only
            # amf activate
            debug_log "AMF Damage + Crit Damage (inc./power):" amf_state power;
            add power amf_state;

            div amf_state 2;

            attacker.getTag temp Tag.CRIT_DAMAGE_NEXT_HIT;
            add temp amf_state;
            attacker.setTag Tag.CRIT_DAMAGE_NEXT_HIT temp;
          end;
          return power part side;
      - offset: 37   # for guardian
        code: |
          var int guardian;
          var int activation_chance;
          var int turn_side;
          var int action_time_units;
          var int current_time_units;

          set activation_chance 50;
          battle_game.getTurnSide turn_side;

          attacker.getTag guardian Tag.GUARDIAN_STATE;

          if and gt guardian 0 eq turn_side 1; # guardian only activates on enemy turn
            battle_game.randomChance activation_chance;
            if gt activation_chance 0;
              damaging_item.getActionCost.getTimeUnits action_time_units attacker battle_action;
              attacker.getTimeUnits current_time_units;
              add current_time_units action_time_units;

              attacker.setTimeUnits current_time_units;
              debug_log "Guardian Activated! Reaction TU refunded.";
            end;
          end;
                
          return power part side;
      - offset: 38   # for aim
        code: |
          var int aim;
          attacker.getTag aim Tag.AIM_STATE;

          if eq aim 2; # was aiming at the beginning of the turn
            unit.setTag Tag.AIM_STATE 1;  # reset aim bonus after first hit
            debug_log "Aim bonus reset for" unit;
          end;
          return power part side;
      - offset: 39   # for aid protocol
        code: |
          var int defense_bonus;
          var int old_power;

          set old_power power;
          unit.getTag defense_bonus Tag.AID_PROTOCOL_STATE;
          if gt defense_bonus 0;
            sub power defense_bonus;
            debug_log "Aid protocol: Hit to" unit "reduced from" old_power "to" power;
          end;
          return power part side;
      - offset: 40   # for headshot
        code: |
          var ptr RuleSoldier soldier_rule;
          var int skill_id;
          var int temp;

          attacker.getRuleSoldier soldier_rule;
          if and neq skill null neq soldier_rule null;
            skill.getTag skill_id Tag.SKILL_ID;
            if eq skill_id 30;
              attacker.getTag temp Tag.CRIT_CHANCE_NEXT_HIT;
              add temp 30;
              attacker.setTag Tag.CRIT_CHANCE_NEXT_HIT temp; # increase hit chance by 30% for next hit
              
              attacker.getTag temp Tag.CRIT_DAMAGE_NEXT_HIT;
              add temp 20;
              attacker.setTag Tag.CRIT_DAMAGE_NEXT_HIT 20; # increase hit damage by 20% for next hit
            end;
          end;            
          return power part side;
      - offset: 41   # for electric reinforcement
        code: |
          var int reinforced;
          unit.getTag reinforced Tag.REINFORCED;
          if gt reinforced 0;
            debug_log "Hit against reinforced unit (power, reinforcement)" unit power reinforced;
            sub power reinforced;
            limit_lower power 0;
          end;
          return power part side;
      - offset: 42   # for Mind Merge, Soul Steal & Inspire
        code: |
          var ptr RuleItem item_rule;
          var int psi_amp_type;
          var int temp;
          var int skill_id;
          var int soul_steal_power;

          set soul_steal_power 15;
          weapon_item.getRuleItem item_rule;
          item_rule.getTag psi_amp_type Tag.PSI_AMP_TYPE;

          if and eq psi_amp_type 1 eq battle_action battle_action_use; # scripted psi amp
            set power 0;
            if eq skill null;
              # mind merge
              # crit chance +25%
              # bonus morale
              # additional health
              unit.getTag temp Tag.CRIT_CHANCE_THIS_TURN;
              add temp 25;
              unit.setTag Tag.CRIT_CHANCE_THIS_TURN temp;
              unit.getMorale temp;
              add temp 30;
              unit.setMorale temp;
              unit.getHealth temp;
              add temp 20;
              unit.setHealth temp;
              battle_game.flashMessage "MIND MERGE!";
            else;
              skill.getTag skill_id Tag.SKILL_ID;
              if eq skill_id 50; # soul steal
                unit.getHealth temp;
                sub temp soul_steal_power;
                unit.setHealth temp;
                battle_game.flashMessage "STR_SOUL_STEAL_HIT_MESSAGE" soul_steal_power temp;
                attacker.getHealth temp;
                add temp soul_steal_power;
                attacker.setHealth temp;
              else eq skill_id 51; # inspire
                unit.getTimeUnitsMax temp;
                unit.setTimeUnits temp;
                battle_game.flashMessage "INSPIRED!";
              end;
            end;
          end;
          return power part side;
      - offset: 42   # for Stasis
        code: |
          var ptr RuleItem item_rule;
          var int psi_amp_type;
          var int temp;
          var int skill_id;

          weapon_item.getRuleItem item_rule;
          item_rule.getTag psi_amp_type Tag.PSI_AMP_TYPE;
          debug_log "HitUnit of Stasis:" skill psi_amp_type battle_action;
          if and neq skill null eq psi_amp_type 2 eq battle_action battle_action_use; # scripted psi amp
            set power 0;
            skill.getTag skill_id Tag.SKILL_ID;
            if eq skill_id 52;
              unit.getFaction temp;
              add temp 1;
              unit.setTag Tag.STASIS_STATE temp;
              unit.setTimeUnits 0;
              battle_game.flashMessage "STASIS!";
              unit.setTag Tag.VIS_EFFECT 1;  # simple complete recolor
              unit.setTag Tag.VIS_COLOR COLOR_X1_PURPLE1;
            end;
          end;
          return power part side;
      - offset: 70   # for Skill Amp Hits (Aid Protocol, Combat Protocol, Interference)
        code: |
          var int battle_type;
          var ptr RuleItem item_rule;
          var int is_skill_amp;
          var int energy_max;
          var int skill_id;

          weapon_item.getRuleItem item_rule;

          item_rule.getBattleType battle_type;
          item_rule.getTag is_skill_amp Tag.CLASS_SKILL_ACTIVATION;
          debug_log "HITUNIT:" skill battle_type is_skill_amp;
          if and neq skill null eq battle_type 9 gt is_skill_amp 0; # scripted psi amp
            debug_log "Unit hit with scripted psi amp:" unit;
            # scripted item, mind control or panic
            # TODO: add visualisation
            skill.getTag skill_id Tag.SKILL_ID;

            if eq skill_id 41;   # Aid protocol
              unit.setTag Tag.AID_PROTOCOL_STATE 15;
              unit.setTag Tag.VIS_EFFECT 4;  # interval flashing
              unit.setTag Tag.VIS_COLOR COLOR_X1_BLUE1;
              unit.setTag Tag.VIS_DELAY 35; # in frames
              set power 0;
            else eq skill_id 42; # Combat protocol
              set power 0;
            else eq skill_id 43; # Interference
              unit.setTimeUnits 0;
              set power 0;
            end;
          end;
          return power part side;
    newTurnItem:
      - offset: 23   # for disabling shot
        code: |
          var ptre BattleUnit owner;
          var int weapon_disabled;
          var int temp;
          var int battle_type;
          var ptr RuleItem item_rule;

          item.getOwner owner;

          owner.getTag weapon_disabled Tag.WEAPON_DISABLED;

          if gt weapon_disabled 0;
            sub weapon_disabled 1;
            owner.setTag Tag.WEAPON_DISABLED weapon_disabled;

            item.getRuleItem item_rule;
            item_rule.getBattleType battle_type;
            item.getAmmoQuantity temp;
            debug_log "Dis.Wep. found:" battle_type temp;
            if gt temp 0;
              item.setAmmoQuantity 0;
              item.setFuseEnabled 1;
              item.setFuseTimer 0;
            end;
          end;
          return;
      - offset: 24   # for electric reinforcement (hack)
        code: |
          var int electric_reinforcement_activated;
          var int turns_since_activation;
          battle_game.getTurn turns_since_activation;
          battle_game.getTag electric_reinforcement_activated Tag.ELECTRIC_REINFORCEMENT_ACTIVATED;
          sub turns_since_activation electric_reinforcement_activated;
          if and gt electric_reinforcement_activated 0 eq turns_since_activation 2;
            battle_game.setTag Tag.ELECTRIC_REINFORCEMENT_ACTIVATED 0; # disable now
          end;
          return;
      - offset: 25   # for war cry (hack)
        code: |
          var int battle_cry_activated;
          var int turns_since_activation;
          battle_game.getTurn turns_since_activation;
          battle_game.getTag battle_cry_activated Tag.BATTLE_CRY_ACTIVATED;
          sub turns_since_activation battle_cry_activated;
          if and gt battle_cry_activated 0 eq turns_since_activation 2; # battle cry was activated
            battle_game.setTag Tag.BATTLE_CRY_ACTIVATED 0; # disable now
          end;
          return;
    tryPsiAttackUnit:
      - offset: 23   # for Scripted Items - Automatic Success
        code: |
          var int battle_type;
          var ptr RuleItem item_rule;
          var int is_skill_amp;
          var int psi_amp_type;
          var int victim_faction;
          var int attacker_faction;
          
          item.getRuleItem item_rule;

          item_rule.getBattleType battle_type;
          item_rule.getTag is_skill_amp Tag.CLASS_SKILL_ACTIVATION;
          item_rule.getTag psi_amp_type Tag.PSI_AMP_TYPE;
          if eq battle_type 9;
            if gt is_skill_amp 0; # scripted psi amp
              debug_log "PsiAttack with scripted item. Automatic success!";
              set psi_attack_success 1;
            else and gt psi_amp_type 0 eq victim_faction attacker_faction;
              debug_log "PsiAttack with X-Com PsiAmp on allies. Automatic Success.";
              set psi_attack_success 1;
            end;
          end;

          return psi_attack_success;
    accuracyMultiplierBonusStats:
      - offset: 23   # for shadowstrike
        code: |
          var int camo_state;
          var int shadowstrike_state;
          var int turns_since_spotted;

          unit.getTag camo_state Tag.PHANTOM_STATE;
          
          unit.getTag shadowstrike_state Tag.SHADOWSTRIKE_STATE;
          
          if and gt shadowstrike_state 0 gt camo_state 0;
            unit.getTurnsSinceSpotted turns_since_spotted;
            if or eq turns_since_spotted 255 le turns_since_spotted -1;
              # shadowstrike activate
              #debug_log "Shadowstrike Accuracy (org./add.):" bonus 30;
              add bonus 30;
            end;
          end;
          return bonus;
      - offset: 24   # for aim
        code: |
          var int pos_x;
          var int pos_y;
          var int pos_z;
          var int aim_x;
          var int aim_y;
          var int aim_z;
          var int aim;
          var int kneeling;

          unit.getTag aim Tag.AIM_STATE;

          if eq aim 2; # was aiming at the beginning of the turn
            # check pos and kneeling

            unit.isKneeled kneeling;
            if gt kneeling 0;
              unit.getPosition.getX pos_x;
              unit.getPosition.getY pos_y;
              unit.getPosition.getZ pos_z;

              unit.getTag aim_x Tag.AIM_X;
              unit.getTag aim_y Tag.AIM_Y;
              unit.getTag aim_z Tag.AIM_Z;

              if and eq pos_x aim_x eq pos_y aim_y eq pos_z aim_z;
                debug_log "Aim Accuracy (org./add.):" bonus 30;
                add bonus 30;
              end;
            end;
          end;
          return bonus;
    psiDefenceBonusStats:
      - offset: 23   # for steadfast
        code: |
          var int steadfast;

          unit.getTag steadfast Tag.STEADFAST_STATE;

          if gt steadfast 0;
            add bonus steadfast;
          end;
          return bonus;
    damageUnit:
      - offset: 23   # for untouchable
        code: |
          var int unit_health;
          var int untouchable;

          attacker.getTag untouchable Tag.UNTOUCHABLE_STATE;
        
          unit.getHealth unit_health;

          if gt untouchable 0;    # attacker has untouchable skill
            debug_log "Untouchable unit has attacked";
            if ge to_health unit_health;  # unit will be killed
              attacker.setTag Tag.UNTOUCHABLE_COUNTER untouchable;
              debug_log " ... and scored a Kill! Untouchable active.";
            end;
          end;
          return;
      - offset: 24   # for sustain
        code: |
          var int unit_health;
          var int sustain;
          var int id;

          unit.getTag sustain Tag.SUSTAIN_STATE;
        
          unit.getHealth unit_health;

          if gt sustain 0;    # attacked unit has sustain skill
            unit.getId id;
            debug_log "Sutained unit was attacked:" id;
            if ge to_wound 0; # a fatal wound would be inflicted
               mul to_wound 3; # 3 hp damage for every wound
               add to_health to_wound;
               debug_log " .. and a fatal wound would be inflicted. Channeled into HP damage:" to_health;
               set to_wound 0;
            end;
            if ge to_health unit_health;  # unit will be killed
              unit.setTag Tag.SUSTAIN_STATE 0; # deactivate, sustain for this unit, only once
              unit.setTimeUnits 0;
              unit.setEnergy 0;
              debug_log " .. and would be killed. Going to sleep instead. ZZZ..";
              set to_health unit_health;
              sub to_health 1;  # set HP to 1
            end;
          end;
          return;
      - offset: 25   # for death from above
        code: |
          var int unit_health;
          var int attacker_height_level;
          var int victim_height_level;
          var int has_death_from_above;
          var int current_time_units;
          var int action_time_units;

          attacker.getPosition.getZ attacker_height_level;
          unit.getPosition.getZ victim_height_level;

          unit.getHealth unit_health;
          attacker.getTag has_death_from_above Tag.DEATH_FROM_ABOVE_STATE;

          if eq has_death_from_above 1;
            if ge to_health unit_health;  # unit would be killed
              if gt attacker_height_level victim_height_level;
                weapon_item.getActionCost.getTimeUnits action_time_units attacker battle_action;
                attacker.getTimeUnits current_time_units;
                add current_time_units action_time_units;

                attacker.setTimeUnits current_time_units;
                attacker.setTag Tag.DEATH_FROM_ABOVE_STATE 2;
                battle_game.flashMessage "Death from above!";
              end;
            end;
          end;
          return;
      - offset: 26   # for executioner
        code: |
          var int unit_health;
          var int unit_half_max_health;
          var int executioner;

          unit.getHealth unit_health;
          unit.getHealthMax unit_half_max_health;
          div unit_half_max_health 2;

          attacker.getTag executioner Tag.EXECUTIONER_STATE;

          if gt executioner 0;
            if lt unit_health unit_half_max_health;
              
              debug_log "Executioner activated! " to_health;
              muldiv to_health executioner 100; # 150 = 150% damage to health
              debug_log " - Damaged increased to" to_health;

            end;
          end;
          return;
      - offset: 27   # for slayer
        code: |
          var int unit_health;
          var int unit_max_health;
          var int unit_half_max_health;
          var int slayer_chance;

          unit.getHealth unit_health;
          unit.getHealthMax unit_half_max_health;
          div unit_half_max_health 2;

          attacker.getTag slayer_chance Tag.SLAYER_STATE;

          if gt slayer_chance 0; # attacker must have slayer skill
            if eq battle_action battle_action_hit; # must be melee attack
              if lt unit_health unit_half_max_health; # attacked unit hp < 50%
                battle_game.randomChance slayer_chance;
                if eq slayer_chance 1;  # slayer chance check
                  debug_log "Slayer activated! " to_health;
                  set to_health unit_health;
                  debug_log " - Damaged increased to" to_health;
                end;
              end;  
            end;
          end;
          return;
      - offset: 28   # for reaper
        code: |
          var int unit_health;
          var int state; # 0 = not available, 1 = not activated yet, available 2 = active in this turn
          var int max_time_units;

          attacker.getTag state Tag.REAPER_STATE;

          unit.getHealth unit_health;

          if and eq state 2 eq battle_action battle_action_hit;
            if ge to_health unit_health;                 # would be a kill
              # TRIGGER conditions met
              if eq state 2; # we are active, so refund the action cost
                debug_log "REAPER triggered! Refunding TU.";
                battle_game.flashMessage "REAPER!";
                attacker.getTimeUnitsMax max_time_units;
                attacker.setTimeUnits max_time_units;    # set the new TU value
              end;
            end;
          end;
          return;
      - offset: 29   # for shredder
        code: |
          var int weapon_state;
          var int unit_state;
          var ptr RuleItem item_rule;

          weapon_item.getRuleItem item_rule;

          attacker.getTag unit_state Tag.SHREDDER_STATE;
          item_rule.getTag weapon_state Tag.SHREDDER_DAMAGE;

          if and gt weapon_state 0 gt unit_state 0;
            debug_log "Shredder activated (to_armor/unit/weapon):" unit_state weapon_state;
            add to_armor weapon_state;
            debug_log "Shredder adjustment done (to_armor): " to_armor;
          end;
          return;
      - offset: 30   # for rupture
        code: |
          var int rupture_damage;
          var int unit_state;
          var int attacker_state;
          var ptr RuleItem item_rule;
          var int increase_damage;
          set increase_damage 0;
          weapon_item.getRuleItem item_rule;

          unit.getTag unit_state Tag.RUPTURE_STATE;
          attacker.getTag attacker_state Tag.RUPTURE_STATE;
          item_rule.getTag rupture_damage Tag.RUPTURE_DAMAGE;

          if eq attacker_state 1;
            # tag unit and increase damage by rupture_state
            unit.setTag Tag.RUPTURE_STATE 2;
            attacker.setTag Tag.RUPTURE_STATE 0;
            set increase_damage 1;
            debug_log "RUPTURED:" unit;
          end;
          
          if eq unit_state 2;
            debug_log "RUPTURED unit was hit again:" unit;
            set increase_damage 1;
          end;
          
          if eq rupture_damage 0;
            set rupture_damage 2; # fallback minimum
          end;

          if eq increase_damage 1;
            debug_log " - Damage to health was:" to_health;
            if gt to_health 0; # must do damage
              add to_health rupture_damage;
            end;
            debug_log " - changed to:" to_health;
          end;
        
          return;
      - offset: 31   # for serial
        code: |
          var int unit_health;
          var int state; # 0 = not available, 1 = not activated yet, available 2 = active in this turn
          var int max_time_units;
          var int gun_type;
          var ptr RuleItem item_rule;

          attacker.getTag state Tag.SERIAL_STATE;

          unit.getHealth unit_health;
          weapon_item.getRuleItem item_rule;
          item_rule.getTag gun_type Tag.GUN_TYPE;

          if and eq state 2 eq gun_type 3; # serial & sniper rifle
            if ge to_health unit_health;               # would be a kill
              battle_game.flashMessage "SERIAL!";
              attacker.getTimeUnitsMax max_time_units;
              attacker.setTimeUnits max_time_units;    # set the new TU value
            end;
          end;
          return;    
      - offset: 32   # for combat protocol & interference
        code: |
          var int unit_state;
          var ptr RuleItem item_rule;
          var int battle_type;
          var int is_skill_amp;
          var int skill_id;

          weapon_item.getRuleItem item_rule;

          item_rule.getBattleType battle_type;
          item_rule.getTag is_skill_amp Tag.CLASS_SKILL_ACTIVATION;
          debug_log "DAMAGEUNIT:" skill battle_type is_skill_amp;
          if and neq skill null eq battle_type 9 gt is_skill_amp 0; # scripted psi amp
            # default = never do damage
            set to_health 0;
            set to_armor 0;
            set to_time 0;
            set to_wound 0;
            set to_stun 0;
            set to_energy 0;
            set to_armor 0;
            set to_transform 0;
            set to_morale 0;
            set to_mana 0;
            skill.getTag skill_id Tag.SKILL_ID;
            if eq skill_id 42;   # Combat protocol
              set to_health 10;
            end;
          end;
          return;    
    healUnit:
      - offset: 24   # for savior
        code: |
          var int savior;
          var int health_to_heal;

          actor.getTag savior Tag.SAVIOR_STATE;

          if gt savior 0;
            if eq medikit_action_type 1; # heal
              debug_log "Savior activated.";
              debug_log " - Health recovered (org.):" health_recovery;
              set health_recovery savior;
              debug_log " - Health recovered (adj.):" health_recovery;
            end;
          end;

          return;
      - offset: 25   # for field surgeon
        code: |
          var int field_surgeon;
          var int max_health;
          var int cur_health;

          actor.getTag field_surgeon Tag.FIELD_SURGEON_STATE;

          if gt field_surgeon 0;
            
            target.getHealthMax max_health;
            target.getHealth cur_health;

            if and eq medikit_action_type 1 gt max_health cur_health; # heal
              debug_log target "was healed by field surgeon.";
              target.setTag Tag.HEALED_BY_FIELD_SURGEON 1;
            end;
          end;

          return;    
    returnFromMissionUnit:
      - offset: 23   # for field surgeon
        code: |
          var int healed_by_field_surgeon;
          var int factor;

          unit.getTag healed_by_field_surgeon Tag.HEALED_BY_FIELD_SURGEON;

          if gt healed_by_field_surgeon 0;
            debug_log unit " is under Field Surgeon effect. Recovery time changed from" recovery_time;
            set factor 100;
            sub factor healed_by_field_surgeon;
            muldiv recovery_time factor 100;
            debug_log unit " - to" recovery_time;
          end;
          return;
    recolorUnitSprite:
      - offset: 24   # for phantom
        code: |
          var int camo_state;
          var int turns_since_spotted;
          var int temp;

          unit.getTag camo_state Tag.PHANTOM_STATE;        

          if gt camo_state 0;
            unit.getTurnsSinceSpotted turns_since_spotted;
            if and neq turns_since_spotted 255 gt turns_since_spotted -1;
              # just been spotted during own turn! blink!
              set temp anim_frame;
              wavegen_tri temp 8 16 15;
              mul temp -1;
              add temp 8;
              add_shade new_pixel temp;
            else;
              add_shade new_pixel 6; # PHANTOM working, darken the armor
            end;
          end;

          return new_pixel;
    recolorItemSprite:
      - offset: 24   # for disabled weapons
        code: |
          var int battle_type;
          var int fuse_state;
          var ptr RuleItem item_rule;
          var ptr BattleUnit owner;
          var int temp;
          var int temp2;
          var int id;

          item.getOwner owner;
          owner.getTag temp Tag.WEAPON_DISABLED;
          owner.getId id;

          item.getRuleItem item_rule;
          item.getFuseTimer fuse_state;
          item_rule.getBattleType battle_type;

          add fuse_state temp;

          if and eq battle_type 2 ge fuse_state 0;
            set temp anim_frame;
            wavegen_tri temp 30 16 15;
            set temp2 anim_frame;
            add temp2 new_pixel;
            add temp2 id;

            shl temp2 13;
            bit_xor temp temp2;
            set temp2 temp;

            shr temp2 7;
            bit_xor temp temp2;
            set temp2 temp;

            shl temp2 17;
            bit_xor temp temp2;

            mod temp 100;

            if lt temp 3;
              set_color new_pixel COLOR_X1_BLUE0; #flash color
            else lt temp 7;
              set_color new_pixel COLOR_X1_BLUE1; #flash color
            else lt temp 10;
              set_color new_pixel COLOR_X1_BLUE2; #flash color
            end;
          end;
          return new_pixel;
    visibilityUnit:
      - offset: 23   # for phantom
        code: |
          var int observer_x;
          var int observer_y;
          var int target_x;
          var int target_y;
          var int two_dee_distance_sq;
          var int camo_distance_sq;

          target_unit.getTag camo_distance_sq Tag.PHANTOM_STATE;

          if neq camo_distance_sq 0;
            set two_dee_distance_sq 0;
            mul camo_distance_sq camo_distance_sq;

            observer_unit.getPosition.getX observer_x;
            observer_unit.getPosition.getY observer_y;

            target_unit.getPosition.getX target_x;
            target_unit.getPosition.getY target_y;
            
            sub observer_x target_x;
            sub observer_y target_y;

            mul observer_x observer_x;
            mul observer_y observer_y;

            add two_dee_distance_sq observer_x;
            add two_dee_distance_sq observer_y;
            
            debug_log "Camo units safe distance (sq)" camo_distance_sq;
            debug_log "Camo unit may be visible in distance (sq)" two_dee_distance_sq;

            if gt two_dee_distance_sq camo_distance_sq;
              debug_log "PHANTOM working!";
              set current_visibility 0;   # stay unseen
            else;
              debug_log "Camo unit spotted!";
              set current_visibility 100; # expose
            end;
          end;
          return current_visibility visibility_mode;
    applySoldierBonuses:
      - offset: 23
        code: |
          var int id;
          var int has_reaper;
          var int has_untouchable;
          var int has_lightning_reflexes;
          var int has_death_from_above;
          var int has_blast_padding;
          var int has_phantom;
          var int has_sustain;
          var int has_executioner;
          var int has_threat_assessment;
          var int has_backstab;
          var int has_blademaster;
          var int has_field_medic;
          var int has_shadowstrike;
          var int has_shredder;
          var int has_amf;
          var int has_serial;
          var int has_guardian;
          var int has_electric_reinforcement;
          var ptr RuleSoldier soldier_rule;
          var int has_advanced_combat_information;
          var int current_info_level;

          unit.getId id;
          unit.getRuleSoldier soldier_rule;

          soldier_rule.getTag has_blademaster Tag.BLADEMASTER;
          soldier_rule.getTag has_death_from_above Tag.DEATH_FROM_ABOVE;
          soldier_rule.getTag has_shredder Tag.SHREDDER;
          soldier_rule.getTag has_guardian Tag.GUARDIAN;

          soldier_bonus.getTag has_blast_padding Tag.BLAST_PADDING;
          soldier_bonus.getTag has_field_medic Tag.FIELD_SPECIALIST;
          soldier_bonus.getTag has_shadowstrike Tag.SHADOWSTRIKE;
          soldier_bonus.getTag has_amf Tag.ALPHA_MIKE_FOXTROT;
          soldier_bonus.getTag has_reaper Tag.REAPER;
          soldier_bonus.getTag has_untouchable Tag.UNTOUCHABLE;
          soldier_bonus.getTag has_lightning_reflexes Tag.LIGHTNING_REFLEXES;
          soldier_bonus.getTag has_phantom Tag.PHANTOM;
          soldier_bonus.getTag has_sustain Tag.SUSTAIN;
          soldier_bonus.getTag has_executioner Tag.EXECUTIONER;
          soldier_bonus.getTag has_threat_assessment Tag.THREAT_ASSESSMENT;
          soldier_bonus.getTag has_backstab Tag.BACKSTAB;
          soldier_bonus.getTag has_serial Tag.SERIAL;
          soldier_bonus.getTag has_electric_reinforcement Tag.ELECTRIC_REINFORCEMENT;
          
          if gt has_reaper 0;
            debug_log "Unit" id "- Reaper Skill found";
            unit.setTag Tag.REAPER_STATE 1;
          end;

          if gt has_untouchable 0;
            debug_log "Unit" id "- Untouchable Skill found at" has_untouchable;
            unit.setTag Tag.UNTOUCHABLE_STATE has_untouchable;
          end;

          if gt has_lightning_reflexes 0;
            debug_log "Unit" id "- Lightning Reflexes Skill found at" has_lightning_reflexes;
            unit.setTag Tag.LIGHTNING_REFLEXES_STATE has_lightning_reflexes;
          end;

          if gt has_death_from_above 0;
            debug_log "Unit" id "- Death from Above Skill found at" has_death_from_above;
            unit.setTag Tag.DEATH_FROM_ABOVE_STATE has_death_from_above;
          end;

          if gt has_blast_padding 0;
            debug_log "Unit" id "- Blast padding Skill found at" has_blast_padding;
            unit.setTag Tag.BLAST_PADDING_STATE has_blast_padding;
          end;

          if gt has_phantom 0;
            debug_log "Unit" id "- Phantom Skill found at" has_phantom;
            unit.setTag Tag.PHANTOM_STATE_ORIGINAL has_phantom;
            unit.setTag Tag.PHANTOM_STATE has_phantom;
          end;

          if gt has_sustain 0;
            debug_log "Unit" id "- Sustain Skill found";
            unit.setTag Tag.SUSTAIN_STATE 1;
          end;

          if gt has_executioner 0;
            debug_log "Unit" id "- Executioner Skill found at" has_executioner;
            unit.setTag Tag.EXECUTIONER_STATE has_executioner;
          end;

          if gt has_threat_assessment 0;
            debug_log "Unit" id "- Threat Assessment Skill found at" has_threat_assessment;
            unit.setTag Tag.THREAT_ASSESSMENT_STATE has_threat_assessment;
          end;

          if gt has_backstab 0;
            debug_log "Unit" id "- Backstab Skill found at" has_backstab;
            unit.setTag Tag.BACKSTAB_STATE has_backstab;
          end;

          if gt has_blademaster 0;
            debug_log "Unit" id "- Blademaster Skill found at" has_blademaster;
            unit.setTag Tag.BLADEMASTER_STATE has_blademaster;
          end;

          if gt has_field_medic 0;
            debug_log "Unit" id "- Field Specialist Skill found at" has_field_medic;
            unit.setTag Tag.FIELD_SPECIALIST_STATE has_field_medic;
          end;

          if gt has_shadowstrike 0;
            debug_log "Unit" id "- Shadowstrike Skill found at" has_shadowstrike;
            unit.setTag Tag.SHADOWSTRIKE_STATE has_shadowstrike;
          end;

          if gt has_shredder 0;
            debug_log "Unit" id "-  hredder Skill found at" has_shredder;
            unit.setTag Tag.SHREDDER_STATE has_shredder;
          end;

          if gt has_amf 0;
            debug_log "Unit" id "- AMF Skill found at" has_amf;
            unit.setTag Tag.ALPHA_MIKE_FOXTROT_STATE has_amf;
          end;

          if gt has_serial 0;
            debug_log "Unit" id "- Serial Skill found";
            unit.setTag Tag.SERIAL_STATE 1;
          end;

          if gt has_guardian 0;
            debug_log "Unit" id "- Guardian Skill found";
            unit.setTag Tag.GUARDIAN_STATE has_guardian;
          end;

          if gt has_electric_reinforcement 0;
            debug_log "Unit" id "- Electric Reinforcement Skill found";
            unit.setTag Tag.ELECTRIC_REINFORCEMENT_STATE 1;
          end;

          save_game.getTag current_info_level Tag.COMBAT_INFORMATION_LEVEL;
          soldier_bonus.getTag has_advanced_combat_information Tag.ADVANCED_COMBAT_INFORMATION;
          if and gt has_advanced_combat_information 0 lt current_info_level 2;
            save_game.setTag Tag.COMBAT_INFORMATION_LEVEL 2;
          end;
          return;

ufopaedia:
  - delete: STR_HIGH_EXPLOSIVE
  - id: STR_MILITARY_MOLDING
    type_id: 7 # text & image
    image_id: UFOPAEDIA_IMG_MOLDING_CPAL
    section: STR_MILITARY_MOLDING_CATEGORY
    text: STR_UFOPAEDIA_MILITARY_MOLDING
    text_width: 260
  - id: STR_SOLDIER_EXPERIENCE
    type_id: 7 # text & image
    image_id: UFOPAEDIA_IMG_COMBAT_CPAL
    section: STR_MILITARY_MOLDING_CATEGORY
    text: STR_UFOPAEDIA_COMBAT_EXPERIENCE
    text_width: 260
  - id: STR_RANGER
    type_id: 7 # text & image
    section: STR_MILITARY_MOLDING_CATEGORY
    image_id: UFOPAEDIA_IMG_RANGER_CPAL
    text: STR_UFOPAEDIA_RANGER
    text_width: 158
  - id: STR_RANGER_SKILLS
    type_id: 8 # text
    section: STR_MILITARY_MOLDING_CATEGORY
    text: STR_UFOPAEDIA_RANGER_SKILLS
  - id: STR_RANGER_SKILLS_ACTIVE
    type_id: 8 # text
    section: STR_MILITARY_MOLDING_CATEGORY
    text: STR_UFOPAEDIA_RANGER_SKILLS_ACTIVE
  - id: STR_GRENADIER
    type_id: 7 # text & image
    section: STR_MILITARY_MOLDING_CATEGORY
    image_id: UFOPAEDIA_IMG_GRENADIER_CPAL
    text: STR_UFOPAEDIA_GRENADIER
    text_width: 150
  - id: STR_GRENADIER_SKILLS
    type_id: 8 # text
    section: STR_MILITARY_MOLDING_CATEGORY
    text: STR_UFOPAEDIA_GRENADIER_SKILLS
  - id: STR_GRENADIER_SKILLS_ACTIVE
    type_id: 8 # text
    section: STR_MILITARY_MOLDING_CATEGORY
    text: STR_UFOPAEDIA_GRENADIER_SKILLS_ACTIVE
  - id: STR_SNIPER
    type_id: 7 # text & image
    section: STR_MILITARY_MOLDING_CATEGORY
    image_id: UFOPAEDIA_IMG_SHARPSHOOTER_CPAL
    text: STR_UFOPAEDIA_SNIPER
    text_width: 158
  - id: STR_SNIPER_SKILLS
    type_id: 8 # text
    section: STR_MILITARY_MOLDING_CATEGORY
    text: STR_UFOPAEDIA_SNIPER_SKILLS
  - id: STR_SNIPER_SKILLS_ACTIVE
    type_id: 8 # text
    section: STR_MILITARY_MOLDING_CATEGORY
    text: STR_UFOPAEDIA_SNIPER_SKILLS_ACTIVE
  - id: STR_SPECIALIST
    type_id: 7 # text & image
    section: STR_MILITARY_MOLDING_CATEGORY
    image_id: UFOPAEDIA_IMG_SPECIALIST_CPAL
    text: STR_UFOPAEDIA_SPECIALIST
    text_width: 170
  - id: STR_SPECIALIST_SKILLS
    type_id: 8 # text
    section: STR_MILITARY_MOLDING_CATEGORY
    text: STR_UFOPAEDIA_SPECIALIST_SKILLS
  - id: STR_SPECIALIST_SKILLS_ACTIVE
    type_id: 8 # text
    section: STR_MILITARY_MOLDING_CATEGORY
    text: STR_UFOPAEDIA_SPECIALIST_SKILLS_ACTIVE
  - id: STR_PSI_OPERATIVE
    type_id: 7 # text & image
    section: STR_MILITARY_MOLDING_CATEGORY
    image_id: UFOPAEDIA_IMG_PSIOP_CPAL
    text: STR_UFOPAEDIA_PSI_OP
    text_width: 158
  - id: STR_PSI_OPERATIVE_SKILLS
    type_id: 8 # text
    section: STR_MILITARY_MOLDING_CATEGORY
    text: STR_UFOPAEDIA_PSI_OPERATIVE_SKILLS
  - id: STR_PSI_OPERATIVE_SKILLS_ACTIVE
    type_id: 8 # text
    section: STR_MILITARY_MOLDING_CATEGORY
    text: STR_UFOPAEDIA_PSI_OPERATIVE_SKILLS_ACTIVE
  - id: STR_SKILL_AMP
    type_id: 4 # equipment
    section: STR_NOT_AVAILABLE
    text: STR_UFOPAEDIA_SKILL_AMP

extraStrings:
  - type: en-US
    strings:
      STR_OPENXCOM: "X-Com: Vigilo Confido"
      STR_SOLDIER_EXPERIENCE: Combat Experience
      STR_SOLDIER_EXPERIENCE_DESCRIPTION: Awarded for missions and kills in the service of X-Com.
      STR_SKILL_AMP: Skill Amplifier
      STR_ELITE_CLASS_SKILL: Activate Elite Skill
      STR_CLASS_SKILL: Activate Class Skill
      STR_RANGER_CLASS_SKILL: Run & Gun
      STR_SNIPER_CLASS_SKILL: Headshot
      STR_SPECIALIST_CLASS_SKILL: Paramedic
      STR_NO_USES_LEFT: Exhausted all activations
      STR_MANA: "BATTLE FOCUS"
      STR_MANA_POOL: "FOCUS POINTS"
      STR_MANA_MISSING: "FOCUS MISSING"
      STR_MANA_RECOVERY: "FOCUS RECOVERY"
      STR_NOT_ENOUGH_MANA: "Not Enough Focus!"
      STR_MANA_ABBREVIATION: "FOC"
      STR_MANA_CURRENT: "CURRENT FOCUS"
      STR_MANA_NORMALIZED: "NORMALIZED FOCUS"
      STR_COST_MANA: "focus"
      manaExperience: "Focus experience"
      manaRequired: "Focus required?"
      ToMana: "Focus dmg multiplier"
      RandomMana: "Focus dmg RNG?"
      mana: "Focus"
      manaRecoveryPerDay: "Focus per day"
      STR_RANGER: Ranger
      STR_GRENADIER: Grenadier
      STR_SNIPER: Sniper
      STR_PSI_OPERATIVE: Psi-Operative
      STR_SPECIALIST: Specialist
      STR_RANGER_SKILLS: Ranger Skills (Passive)
      STR_GRENADIER_SKILLS: Grenadier Skills (Passive)
      STR_SNIPER_SKILLS: Sniper Skills (Passive)
      STR_SPECIALIST_SKILLS: Specialist Skills (Passive)
      STR_PSI_OPERATIVE_SKILLS: Psi Operative Skills (Item)
      STR_RANGER_SKILLS_ACTIVE: Ranger Skills (Active)
      STR_GRENADIER_SKILLS_ACTIVE: Grenadier Skills (Active)
      STR_SNIPER_SKILLS_ACTIVE: Sniper Skills (Active)
      STR_SPECIALIST_SKILLS_ACTIVE: Specialist Skills (Active)
      STR_PSI_OPERATIVE_SKILLS_ACTIVE: Psi Operative Skills (Active)
      STR_RANGER_MOLDING: Ranger molding
      STR_GRENADIER_MOLDING: Grenadier molding
      STR_SNIPER_MOLDING: Sniper molding
      STR_SPECIALIST_MOLDING: Specialist molding
      STR_PSI_OPERATIVE_MOLDING: Psi-Op molding
      STR_RANGER_ADVANCED_TRAINING: Advanced Ranger Training
      STR_GRENADIER_ADVANCED_TRAINING: Advanced Grenadier Training
      STR_SNIPER_ADVANCED_TRAINING: Advanced Sniper Training
      STR_SPECIALIST_ADVANCED_TRAINING: Advanced Specialist Training
      STR_RANGER_ELITE_TRAINING: Elite Ranger Training
      STR_GRENADIER_ELITE_TRAINING: Elite Grenadier Training
      STR_SNIPER_ELITE_TRAINING: Elite Sniper Training
      STR_SPECIALIST_ELITE_TRAINING: Elite Specialist Training
      STR_ROOKIE_RANGER_RANK: Rk. Ranger
      STR_SQUADDIE_RANGER_RANK: Sq. Ranger
      STR_SERGEANT_RANGER_RANK: Sgt. Ranger
      STR_CAPTAIN_RANGER_RANK: Cpt. Ranger
      STR_COLONEL_RANGER_RANK: Col. Ranger
      STR_COMMANDER_RANGER_RANK: Cdr. Ranger
      STR_ROOKIE_GRENADIER_RANK: Rk. Grenadier
      STR_SQUADDIE_GRENADIER_RANK: Sq. Grenadier
      STR_SERGEANT_GRENADIER_RANK: Sgt. Grenadier
      STR_CAPTAIN_GRENADIER_RANK: Cpt. Grenadier
      STR_COLONEL_GRENADIER_RANK: Col. Grenadier
      STR_COMMANDER_GRENADIER_RANK: Cdr. Grenadier
      STR_ROOKIE_SNIPER_RANK: Rk. Sniper
      STR_SQUADDIE_SNIPER_RANK: Sq. Sniper
      STR_SERGEANT_SNIPER_RANK: Sgt. Sniper
      STR_CAPTAIN_SNIPER_RANK: Cpt. Sniper
      STR_COLONEL_SNIPER_RANK: Col. Sniper
      STR_COMMANDER_SNIPER_RANK: Cdr. Sniper
      STR_ROOKIE_PSI_OPERATIVE_RANK: Rk. Psi-Op
      STR_SQUADDIE_PSI_OPERATIVE_RANK: Sq. Psi-Op
      STR_SERGEANT_PSI_OPERATIVE_RANK: Sgt. Psi-Op
      STR_CAPTAIN_PSI_OPERATIVE_RANK: Cpt. Psi-Op
      STR_COLONEL_PSI_OPERATIVE_RANK: Col. Psi-Op
      STR_COMMANDER_PSI_OPERATIVE_RANK: Cdr. Psi-Op
      STR_ROOKIE_SPECIALIST_RANK: Rk. Specialist
      STR_SQUADDIE_SPECIALIST_RANK: Sq. Specialist
      STR_SERGEANT_SPECIALIST_RANK: Sgt. Specialist
      STR_CAPTAIN_SPECIALIST_RANK: Cpt. Specialist
      STR_COLONEL_SPECIALIST_RANK: Col. Specialist
      STR_COMMANDER_SPECIALIST_RANK: Cdr. Specialist
      STR_RANGER_INITIAL_BONUS: "Initial Ranger Molding"
      STR_RANGER_ADVANCED_BONUS: "Advanced Ranger"
      STR_RANGER_ELITE_BONUS: "Elite Ranger"
      STR_GRENADIER_INITIAL_BONUS: "Initial Grenadier Molding"
      STR_GRENADIER_ADVANCED_BONUS: "Advanced Grenadier"
      STR_GRENADIER_ELITE_BONUS: "Elite Grenadier"
      STR_SNIPER_INITIAL_BONUS: "Initial Sniper Molding"
      STR_SNIPER_ADVANCED_BONUS: "Advanced Sniper"
      STR_SNIPER_ELITE_BONUS: "Elite Sniper"
      STR_SPECIALIST_INITIAL_BONUS: "Initial Specialist Molding"
      STR_SPECIALIST_ADVANCED_BONUS: "Advanced Specialist"
      STR_SPECIALIST_ELITE_BONUS: "Elite Specialist"
      STR_UNTOUCHABLE_BONUS: "Untouchable"
      STR_LIGHTNING_REFLEXES_BONUS: "Lightning Reflexes"
      STR_DEATH_FROM_ABOVE_BONUS: "Death from above"
      STR_BLAST_PADDING_BONUS: "Blast Padding"
      STR_PHANTOM_BONUS: "Phantom"
      STR_SUSTAIN_BONUS: "Sustain"
      STR_EXECUTIONER_BONUS: "Executioner"
      STR_THREAT_ASSESSMENT_BONUS: "Threat Assessment"
      STR_BACKSTAB_BONUS:  "Backstab"
      STR_BLADEMASTER_BONUS: "Blademaster"
      STR_FIELD_SPECIALIST_BONUS: "Field Specialist"
      STR_UFOPAEDIA_RANGER: "The Ranger serves as our primary reconnaissance unit, capable of moving independently in concealment while engaging enemies at close range using extensive training in swordsmanship.{NEWLINE}{NEWLINE}INITIAL SKILLS{NEWLINE}P>Blademaster{NEWLINE}A>Slash - Run & Gun{NEWLINE}{NEWLINE}ADVANCED SKILLS{NEWLINE}P>Phantom - Shadowstrike{NEWLINE}A>Conceal - Rapid Fire{NEWLINE}{NEWLINE}ELITE SKILLS{NEWLINE}P>Untouchable{NEWLINE}A>Reaper"
      STR_UFOPAEDIA_GRENADIER: "A class specialising in high fire power and area damage. The Grenadier is at its strongest vs armored or high health enemies, but can also be really useful in situations were the enemies cluster together.{NEWLINE}{NEWLINE}INITIAL SKILLS{NEWLINE}P>Shredder{NEWLINE}A>Hvy. Rocket - Rpd. Deployment{NEWLINE}{NEWLINE}ADVANCED SKILLS{NEWLINE}P>Blast Padding - Mayhem{NEWLINE}A>War Cry - Rage Burst{NEWLINE}{NEWLINE}ELITE SKILLS{NEWLINE}P>Sting Grenades{NEWLINE}A>Rupture"
      STR_UFOPAEDIA_SNIPER: "A class able to inflict massive long range damage on enemy targets from a position of safety. They are good at inflicting critical hits, and can augment the chances further with their special Headshot ability.{NEWLINE}{NEWLINE}INITIAL SKILLS{NEWLINE}P>Death from above{NEWLINE}A>Headshot - Disabling Shot{NEWLINE}{NEWLINE}ADVANCED SKILLS{NEWLINE}P>Aim - Center Mass{NEWLINE}A>Quick Aim - Double Tap{NEWLINE}{NEWLINE}ELITE SKILLS{NEWLINE}P>Alpha Mike Foxtrot{NEWLINE}A>Serial"
      STR_UFOPAEDIA_SPECIALIST: "Soldiers trained in the Specialist class serve as both field medics and logistical support to their squad. Equipped with medical supplies, smoke grenades and other items, these troops ensure the safe return of all units deployed in the field.{NEWLINE}{NEWLINE}INITIAL SKILLS{NEWLINE}P>Guardian{NEWLINE}A>Paramedic - Aid Protocol{NEWLINE}{NEWLINE}ADVANCED SKILLS{NEWLINE}P>Steadfast - Field Surgeon{NEWLINE}A>Combat Protocol - Interference{NEWLINE}{NEWLINE}ELITE SKILLS{NEWLINE}P>Savior - Ever Vigilant{NEWLINE}A>Electric Reinforcement"
      STR_UFOPAEDIA_PSI_OP: "A mysterious new branch of study for X-Com, the Psionic Operative utilizes their mental abilities to great effect to boost their allies and cripple the will of enemies.{NEWLINE}{NEWLINE}INITIAL SKILLS{NEWLINE}I>Panic - Mind Merge{NEWLINE}{NEWLINE}ADVANCED SKILLS{NEWLINE}A>Soul Steal - Inspire{NEWLINE}{NEWLINE}ELITE SKILLS{NEWLINE}A>Stasis - Mind Control"
      STR_MILITARY_MOLDING_CATEGORY: "MILITARY MOLDING"
      STR_MILITARY_MOLDING: "Military Molding"
      STR_UFOPAEDIA_MILITARY_MOLDING: "X-Com researchers have perfected military molding processes. Through hard training, genetical manipulation and cybernetical enhancements the soldiers are imprinted with a specialized combat protocol.{NEWLINE}{NEWLINE}The process is irreversible.{NEWLINE}{NEWLINE}After the initial molding process an advanced and elite training program become available to more experienced soldiers. Each stage of training will unlock additional combat abilities."
      STR_UFOPAEDIA_RANGER_SKILLS: "BLADEMASTER>{NEWLINE}Deal increased damage on all sword attacks.{NEWLINE}{NEWLINE}PHANTOM>{NEWLINE}Begin a mission in concealment.{NEWLINE}{NEWLINE}SHADOWSTRIKE>{NEWLINE}While concealed, gain bonus aim and bonus critical chance when attacking enemies.{NEWLINE}{NEWLINE}UNTOUCHABLE>{NEWLINE}If you score a kill during your turn, the next two attacks against you during the enemy turn will miss."
      STR_UFOPAEDIA_GRENADIER_SKILLS: "SHREDDER>{NEWLINE}Your cannon attacks shred armor. Higher rank weapons shred more points of armor.{NEWLINE}{NEWLINE}BLAST PADDING>{NEWLINE}Your gear includes layers of extra padding and blast plates, granting bonus points of Armor and 66% less damage from explosive attacks.{NEWLINE}{NEWLINE}MAYHEM>{NEWLINE}Confers additional damage to all area of effect weapons & auto shooting guns.{NEWLINE}{NEWLINE}STING GRENADES>{NEWLINE}Your flashbang grenades have a 50% chance to stun enemies for one turn in the flashbang's Area of Effect."
      STR_UFOPAEDIA_SNIPER_SKILLS: "DEATH FROM ABOVE>{NEWLINE}Killing an enemy at a lower elevation with your sniper rifle will grant an additional action once per turn.{NEWLINE}{NEWLINE}AIM>{NEWLINE}Kneeling now confers 30% firing accuracy to the first shot on the following turn.{NEWLINE}{NEWLINE}CENTER MASS>{NEWLINE}You do additional points of base damage when using guns.{NEWLINE}{NEWLINE}ALPHA MIKE FOXTROT>{NEWLINE}You do additional points of base damage and additional points of crit damage with your primary weapon."
      STR_UFOPAEDIA_SPECIALIST_SKILLS: "GUARDIAN>{NEWLINE}With every successful Overwatch shot, there is a 50% chance that the action cost will be refunded.{NEWLINE}{NEWLINE}STEADFAST>{NEWLINE}(Almost) Never panic as a result of getting wounded, allies panicking, allies getting wounded or killed, or the panic ability.{NEWLINE}{NEWLINE}FIELD SURGEON>{NEWLINE}Reduces Wounded timer on soldiers who sustained HP damage.{NEWLINE}{NEWLINE}SAVIOR>{NEWLINE}Medikits restore health per use.{NEWLINE}{NEWLINE}EVER VIGILANT>{NEWLINE}At the start of the enemy turn your time units are refilled for free reaction fire."
      STR_UFOPAEDIA_PSI_OPERATIVE_SKILLS: "The operative has to be equipped with a Psi Amplifier to successfully use these abilites in the field.{NEWLINE}{NEWLINE}PANIC>{NEWLINE}Saps a unit's morale, and puts it in a prime position to panic or go berserk.{NEWLINE}{NEWLINE}MIND MERGE>{NEWLINE}Grants bonus will, crit and ablative hit points to an ally until the beginning of the player's next turn.{NEWLINE}{NEWLINE}SOUL STEAL>{NEWLINE}Transfers half of the damage done back to the Psi Operative as health.{NEWLINE}{NEWLINE}INSPIRE>{NEWLINE}Channel your psionic energy into the TUs of another unit."
      STR_UFOPAEDIA_RANGER_SKILLS_ACTIVE: "RUN & GUN>{NEWLINE}Take an extra action after dashing.{NEWLINE}{NEWLINE}SLASH>{NEWLINE}A free melee attack with your sword{NEWLINE}{NEWLINE}CONCEAL>{NEWLINE}Immediately enter concealment once per mission.{NEWLINE}{NEWLINE}RAPID FIRE>{NEWLINE}Fire twice in a row at an enemy. Each shot suffers an Aim penalty.{NEWLINE}{NEWLINE}REAPER>{NEWLINE}A devastating chain melee attack where every kill scored will grant an extra action."
      STR_UFOPAEDIA_GRENADIER_SKILLS_ACTIVE: "HEAVY ROCKET>{NEWLINE}Fire a rocket using an equipped launcher.{NEWLINE}{NEWLINE}RAPID DEPLOYMENT>{NEWLINE}Throw a grenade from your inventory and prime it in one action.{NEWLINE}{NEWLINE}WAR CRY>{NEWLINE}All enemies within 10 tiles have their Action Points Reduced to 50% for the next turn.{NEWLINE}{NEWLINE}RAGE BURST>{NEWLINE}A heavy burst attack with your main weapon. Uses lots of ammo.{NEWLINE}{NEWLINE}RUPTURE>{NEWLINE}A Rupture shot deals critical damage and ensures that the target takes additional damage from all attacks in the future."
      STR_UFOPAEDIA_SNIPER_SKILLS_ACTIVE: "HEADSHOT>{NEWLINE}Fire a shot with +30% critical chance and extra damage on critical hits.{NEWLINE}{NEWLINE}DISABLING SHOT>{NEWLINE}Allows sniper rifles to fire a shot that causes the target's main weapon to malfunction.{NEWLINE}{NEWLINE}QUICK AIM>{NEWLINE}The TU cost of the next shot whit a proficient weapon is reduced, and the accuracy is increased.{NEWLINE}{NEWLINE}DOUBLE TAP>{NEWLINE}Fire twice at your target. Accuracy is reduced.{NEWLINE}{NEWLINE}SERIAL>{NEWLINE}A powerful chained shot ability. For every kill made with your sniper rifle, your actions will be refunded."
      STR_UFOPAEDIA_SPECIALIST_SKILLS_ACTIVE: "PARAMEDIC>{NEWLINE}This unit may use its medikit with drastically reduced action costs.{NEWLINE}{NEWLINE}AID PROTOCOL>{NEWLINE}Grant the target a bonus to Defense until the start of the next player turn.{NEWLINE}{NEWLINE}COMBAT PROTOCOL>{NEWLINE}Jolt an enemy, dealing guaranteed damage.{NEWLINE}{NEWLINE}INTERFERENCE>{NEWLINE}Reduce the TU of the targeted unit to zero.{NEWLINE}{NEWLINE}ELECTRIC REINFORCEMENT>{NEWLINE}Grant additional armor to all allied units for one turn."
      STR_UFOPAEDIA_PSI_OPERATIVE_SKILLS_ACTIVE: "These abilities can only be channeled with the help of an alien Psi Amplifier.{NEWLINE}{NEWLINE}STASIS>{NEWLINE}Completely stuns the target for 1 turn, but renders them immune to any damage or attack.{NEWLINE}{NEWLINE}MIND CONTROL>{NEWLINE}Take direct control over your target's actions."
      STR_UFOPAEDIA_SKILL_AMP: "The skill amplifier is an experimental piece of technology. It is directly connected to the brain of the wearer via the central nervous system and grants the soldier using it extraordinary abilities."
      STR_UFOPAEDIA_COMBAT_EXPERIENCE: "In order for X-Com soldiers to be eligible for the next military training level, they have to accumulate combat experience.{NEWLINE}{NEWLINE}Combat experience is awarded to soldiers for killing enemies and surviving field missions."
      STR_SKILL_NEEDS_ITEM: "Skill needs item!"
      STR_HEAVY_ROCKET: Heavy Rocket
      STR_RAPID_DEPLOYMENT: Rpd. Deployment
      STR_SHREDDER_ROCKET: Shred Rocket
      STR_RAGE_BURST: Rage Burst
      STR_RUPTURE: Rupture
      STR_RUN_AND_GUN: Run and Gun
      STR_SLASH: Slash
      STR_CONCEAL: Conceal
      STR_RAPID_FIRE: Rapid Fire
      STR_HEADSHOT: Headshot
      STR_DOUBLE_TAP: Double Tap
      STR_SERIAL: Serial
      STR_DISABLING_SHOT: Disabling Shot
      STR_QUICK_AIM: Quick Aim
      STR_PARAMEDIC: Paramedic
      STR_AID_PROTOCOL: Aid Protocol
      STR_COMBAT_PROTOCOL: Combat Protocol
      STR_INTERFERENCE: Interference
      STR_RESTORATION: Restoration
      STR_ELECTRIC_REINFORCEMENT: Electric Reinforcement
      STR_WAR_CRY: War Cry
      STR_INSPIRE: Inspire
      STR_MIND_MERGE: Mind Merge
      STR_STASIS: Stasis
      STR_SOUL_STEAL: Soul Steal
      STR_SNAP_SHOT: Fire
      STR_SOUL_STEAL_HIT_MESSAGE: "Soul Steal: {0}>{1}"
      STR_SHOT_TYPE_SNAP: "Default"
      STR_TIME_UNITS_RESERVED_FOR_SNAP_SHOT: "Time Units reserved for firing"
      STR_DAMAGE_ARMOR_PIERCING: "PROJECTILE"
      STR_DAMAGE_INCENDIARY: "INCENDIARY"
      STR_DAMAGE_HIGH_EXPLOSIVE: "HIGH EXPLOSIVE"
      STR_DAMAGE_LASER_BEAM: "LASER"
      STR_DAMAGE_PLASMA_BEAM: "PLASMA"
      STR_DAMAGE_10: "PSIONIC"                
      STR_DAMAGE_11: "POISON"
      STR_DAMAGE_12: "ELECTRIC"

statStrings:
  - string: "Psi" #above average psi skill
    psiSkill: [40, ~]
  - string: "Elite"
    health: [30, ~]
    strength: [40, ~]
    reactions: [60, ~]
    firing: [60, ~]
    stamina: [60, ~]
  #--- accuracy/long range class ---
  - string: "Snipr"
    firing: [70, ~]
    reactions: [60, ~]
  - string: "Mksmn"
    firing: [70, ~]
  #--- mobility heavy class ---
  - string: "HvySct" #mobile medium range
    health: [30, ~]
    strength: [40, ~]
    reactions: [50, ~]
    stamina: [60, ~]
    tu: [60, ~]
  - string: "HvyAsslt" #mobile close range
    health: [30, ~]
    strength: [40, ~]
    reactions: [~, 49]
    stamina: [70, ~]
    tu: [60, ~]
  - string: "HvySupp"
    health: [30, ~]
    strength: [40, ~]
    bravery: [70, ~]
    stamina: [60, ~]
    tu: [50, ~]
  #--- mobility class ---
  - string: "Sct" #mobile medium range
    reactions: [50, ~]
    stamina: [60, ~]
    tu: [60, ~]
  - string: "Asslt" #mobile close range
    reactions: [~, 49]
    stamina: [70, ~]
    tu: [60, ~]
  - string: "Supp"
    bravery: [70, ~]
    stamina: [60, ~]
    tu: [50, ~]
  #--- heavy class ---
  - string: "Hvy"
    health: [30, ~]
    strength: [40, ~]
  #--- speciality class ---
  - string: "Spclst" #good at throwing & melee
    stamina: [60, ~]
    tu: [50, ~]
    strength: [40, ~]
    throwing: [70, ~]
    melee: [70, ~]
  - string: "Grndr" #good at throwing
    strength: [40, ~]
    throwing: [70, ~]
  - string: "Melee" #mobile and good at hand2hand
    stamina: [60, ~]
    tu: [50, ~]
    strength: [40, ~]
    melee: [70, ~]

extraSprites:
  - type: SMOKE.PCK
    height: 80
    width: 160
    subX: 32
    subY: 40
    files:
      56: Resources/Animation/friendly_buff_hit.png
      57: Resources/Animation/blue_cube.png
  - type: SPICONS.DAT
    width: 32
    height: 24
    files:
      2: Resources/UI/SPICON_RANGER.png
      3: Resources/UI/SPICON_HEAVY.png
      4: Resources/UI/SPICON_SNIPER.png
      5: Resources/UI/SPICON_SPECIALIST.png
      6: Resources/UI/SPICON_PSIOP.png
  - type: UFOPAEDIA_IMG_MOLDING_CPAL
    singleImage: true
    width: 320
    height: 200
    files:
      0: Resources/UFOPedia/xcom_molding_new.png
  - type: UFOPAEDIA_IMG_COMBAT_CPAL
    singleImage: true
    width: 320
    height: 200
    files:
      0: Resources/UFOPedia/combat.png
  - type: UFOPAEDIA_IMG_RANGER_CPAL
    singleImage: true
    width: 320
    height: 200
    files:
      0: Resources/UFOPedia/xcom2_ranger.png
  - type: UFOPAEDIA_IMG_GRENADIER_CPAL
    singleImage: true
    width: 320
    height: 200
    files:
      0: Resources/UFOPedia/xcom2_grenadier.png
  - type: UFOPAEDIA_IMG_SPECIALIST_CPAL
    singleImage: true
    width: 320
    height: 200
    files:
      0: Resources/UFOPedia/xcom2_specialist.png
  - type: UFOPAEDIA_IMG_SHARPSHOOTER_CPAL
    singleImage: true
    width: 320
    height: 200
    files:
      0: Resources/UFOPedia/xcom2_sharpshooter.png
  - type: UFOPAEDIA_IMG_PSIOP_CPAL
    singleImage: true
    width: 320
    height: 200
    files:
      0: Resources/UFOPedia/xcom2_psiop.png

# Female
#  Death:    55-68
#  Moving:   69-153
#  Panic:   154-160
#  Berserk: 161-169
# Male
#  Death:   170-183
#  Moving:  184-268
#  Panic:   269-275
#  Berserk: 276-284

extraSounds:
  - type: BATTLE.CAT
    files:
      55: Resources/Voices/SF02_en_uk_DeathScream_00.wav
      56: Resources/Voices/SF02_en_uk_DeathScream_01.wav
      57: Resources/Voices/SF02_en_uk_DeathScream_02.wav
      58: Resources/Voices/SF02_en_uk_DeathScream_03.wav
      59: Resources/Voices/SF02_en_uk_DeathScream_04.wav
      60: Resources/Voices/SF02_en_uk_DeathScream_05.wav
      61: Resources/Voices/SF02_en_uk_DeathScream_06.wav
      62: Resources/Voices/SF02_en_uk_DeathScream_07.wav
      63: Resources/Voices/SF02_en_uk_DeathScream_08.wav
      64: Resources/Voices/SF02_en_uk_DeathScream_09.wav
      65: Resources/Voices/SF02_en_uk_DeathScream_10.wav
      66: Resources/Voices/SF02_en_uk_DeathScream_11.wav
      67: Resources/Voices/SF02_en_uk_DeathScream_12.wav
      68: Resources/Voices/SF02_en_uk_DeathScream_13.wav
      69: Resources/Voices/SF02_en_uk_Moving_00.wav
      70: Resources/Voices/SF02_en_uk_Moving_01.wav
      71: Resources/Voices/SF02_en_uk_Moving_02.wav
      72: Resources/Voices/SF02_en_uk_Moving_03.wav
      73: Resources/Voices/SF02_en_uk_Moving_04.wav
      74: Resources/Voices/SF02_en_uk_Moving_05.wav
      75: Resources/Voices/SF02_en_uk_Moving_06.wav
      76: Resources/Voices/SF02_en_uk_Moving_07.wav
      77: Resources/Voices/SF02_en_uk_Moving_08.wav
      78: Resources/Voices/SF02_en_uk_Moving_09.wav
      79: Resources/Voices/SF02_en_uk_Moving_10.wav
      80: Resources/Voices/SF02_en_uk_Moving_11.wav
      81: Resources/Voices/SF02_en_uk_Moving_12.wav
      82: Resources/Voices/SF02_en_uk_Moving_13.wav
      83: Resources/Voices/SF02_en_uk_Moving_14.wav
      84: Resources/Voices/SF02_en_uk_Moving_15.wav
      85: Resources/Voices/SF02_en_uk_Moving_16.wav
      86: Resources/Voices/SF02_en_uk_Moving_17.wav
      87: Resources/Voices/SF02_en_uk_Moving_18.wav
      88: Resources/Voices/SF02_en_uk_Moving_19.wav
      89: Resources/Voices/SF02_en_uk_Moving_20.wav
      90: Resources/Voices/SF02_en_uk_Moving_21.wav
      91: Resources/Voices/SF02_en_uk_Moving_22.wav
      92: Resources/Voices/SF02_en_uk_Moving_23.wav
      93: Resources/Voices/SF02_en_uk_Moving_24.wav
      94: Resources/Voices/SF02_en_uk_Moving_BY_THE_BOOK_00.wav
      95: Resources/Voices/SF02_en_uk_Moving_BY_THE_BOOK_01.wav
      96: Resources/Voices/SF02_en_uk_Moving_BY_THE_BOOK_02.wav
      97: Resources/Voices/SF02_en_uk_Moving_BY_THE_BOOK_03.wav
      98: Resources/Voices/SF02_en_uk_Moving_BY_THE_BOOK_04.wav
      99: Resources/Voices/SF02_en_uk_Moving_COLD_00.wav
      100: Resources/Voices/SF02_en_uk_Moving_COLD_01.wav
      101: Resources/Voices/SF02_en_uk_Moving_COLD_02.wav
      102: Resources/Voices/SF02_en_uk_Moving_COLD_03.wav
      103: Resources/Voices/SF02_en_uk_Moving_COLD_04.wav
      104: Resources/Voices/SF02_en_uk_Moving_HAPPY_GO_LUCKY_00.wav
      105: Resources/Voices/SF02_en_uk_Moving_HAPPY_GO_LUCKY_01.wav
      106: Resources/Voices/SF02_en_uk_Moving_HAPPY_GO_LUCKY_02.wav
      107: Resources/Voices/SF02_en_uk_Moving_HAPPY_GO_LUCKY_03.wav
      108: Resources/Voices/SF02_en_uk_Moving_HAPPY_GO_LUCKY_04.wav
      109: Resources/Voices/SF02_en_uk_Moving_HARD_LUCK_00.wav
      110: Resources/Voices/SF02_en_uk_Moving_HARD_LUCK_01.wav
      111: Resources/Voices/SF02_en_uk_Moving_HARD_LUCK_02.wav
      112: Resources/Voices/SF02_en_uk_Moving_HARD_LUCK_03.wav
      113: Resources/Voices/SF02_en_uk_Moving_HARD_LUCK_04.wav
      114: Resources/Voices/SF02_en_uk_Moving_INTENSE_00.wav
      115: Resources/Voices/SF02_en_uk_Moving_INTENSE_01.wav
      116: Resources/Voices/SF02_en_uk_Moving_INTENSE_02.wav
      117: Resources/Voices/SF02_en_uk_Moving_INTENSE_03.wav
      118: Resources/Voices/SF02_en_uk_Moving_INTENSE_04.wav
      119: Resources/Voices/SF02_en_uk_Moving_LAID_BACK_00.wav
      120: Resources/Voices/SF02_en_uk_Moving_LAID_BACK_01.wav
      121: Resources/Voices/SF02_en_uk_Moving_LAID_BACK_02.wav
      122: Resources/Voices/SF02_en_uk_Moving_LAID_BACK_03.wav
      123: Resources/Voices/SF02_en_uk_Moving_LAID_BACK_04.wav
      124: Resources/Voices/SF02_en_uk_Moving_TWITCHY_00.wav
      125: Resources/Voices/SF02_en_uk_Moving_TWITCHY_01.wav
      126: Resources/Voices/SF02_en_uk_Moving_TWITCHY_02.wav
      127: Resources/Voices/SF02_en_uk_Moving_TWITCHY_03.wav
      128: Resources/Voices/SF02_en_uk_Moving_TWITCHY_04.wav
      129: Resources/Voices/SF02_en_uk_Moving_w_00.wav
      130: Resources/Voices/SF02_en_uk_Moving_w_01.wav
      131: Resources/Voices/SF02_en_uk_Moving_w_02.wav
      132: Resources/Voices/SF02_en_uk_Moving_w_03.wav
      133: Resources/Voices/SF02_en_uk_Moving_w_04.wav
      134: Resources/Voices/SF02_en_uk_Moving_w_05.wav
      135: Resources/Voices/SF02_en_uk_Moving_w_06.wav
      136: Resources/Voices/SF02_en_uk_Moving_w_07.wav
      137: Resources/Voices/SF02_en_uk_Moving_w_08.wav
      138: Resources/Voices/SF02_en_uk_Moving_w_09.wav
      139: Resources/Voices/SF02_en_uk_Moving_w_10.wav
      140: Resources/Voices/SF02_en_uk_Moving_w_11.wav
      141: Resources/Voices/SF02_en_uk_Moving_w_12.wav
      142: Resources/Voices/SF02_en_uk_Moving_w_13.wav
      143: Resources/Voices/SF02_en_uk_Moving_w_14.wav
      144: Resources/Voices/SF02_en_uk_Moving_w_15.wav
      145: Resources/Voices/SF02_en_uk_Moving_w_16.wav
      146: Resources/Voices/SF02_en_uk_Moving_w_17.wav
      147: Resources/Voices/SF02_en_uk_Moving_w_18.wav
      148: Resources/Voices/SF02_en_uk_Moving_w_19.wav
      149: Resources/Voices/SF02_en_uk_Moving_w_20.wav
      150: Resources/Voices/SF02_en_uk_Moving_w_21.wav
      151: Resources/Voices/SF02_en_uk_Moving_w_22.wav
      152: Resources/Voices/SF02_en_uk_Moving_w_23.wav
      153: Resources/Voices/SF02_en_uk_Moving_w_24.wav
      154: Resources/Voices/SF02_en_uk_PanicScream_00.wav
      155: Resources/Voices/SF02_en_uk_PanicScream_01.wav
      156: Resources/Voices/SF02_en_uk_PanicScream_02.wav
      157: Resources/Voices/SF02_en_uk_PanicScream_03.wav
      158: Resources/Voices/SF02_en_uk_PanicScream_04.wav
      159: Resources/Voices/SF02_en_uk_PanicScream_05.wav
      160: Resources/Voices/SF02_en_uk_PanicScream_06.wav
      161: Resources/Voices/SF02_en_uk_Panic_INTENSE_00.wav
      162: Resources/Voices/SF02_en_uk_Panic_INTENSE_01.wav
      163: Resources/Voices/SF02_en_uk_Panic_INTENSE_02.wav
      164: Resources/Voices/SF02_en_uk_Panic_LAID_BACK_00.wav
      165: Resources/Voices/SF02_en_uk_Panic_LAID_BACK_01.wav
      166: Resources/Voices/SF02_en_uk_Panic_LAID_BACK_02.wav
      167: Resources/Voices/SF02_en_uk_Panic_TWITCHY_00.wav
      168: Resources/Voices/SF02_en_uk_Panic_TWITCHY_01.wav
      169: Resources/Voices/SF02_en_uk_Panic_TWITCHY_02.wav
      170: Resources/Voices/SM02_en_us_DeathScream_00.wav
      171: Resources/Voices/SM02_en_us_DeathScream_01.wav
      172: Resources/Voices/SM02_en_us_DeathScream_02.wav
      173: Resources/Voices/SM02_en_us_DeathScream_03.wav
      174: Resources/Voices/SM02_en_us_DeathScream_04.wav
      175: Resources/Voices/SM02_en_us_DeathScream_05.wav
      176: Resources/Voices/SM02_en_us_DeathScream_06.wav
      177: Resources/Voices/SM02_en_us_DeathScream_07.wav
      178: Resources/Voices/SM02_en_us_DeathScream_08.wav
      179: Resources/Voices/SM02_en_us_DeathScream_09.wav
      180: Resources/Voices/SM02_en_us_DeathScream_10.wav
      181: Resources/Voices/SM02_en_us_DeathScream_11.wav
      182: Resources/Voices/SM02_en_us_DeathScream_12.wav
      183: Resources/Voices/SM02_en_us_DeathScream_13.wav
      184: Resources/Voices/SM02_en_us_Moving_00.wav
      185: Resources/Voices/SM02_en_us_Moving_01.wav
      186: Resources/Voices/SM02_en_us_Moving_02.wav
      187: Resources/Voices/SM02_en_us_Moving_03.wav
      188: Resources/Voices/SM02_en_us_Moving_04.wav
      189: Resources/Voices/SM02_en_us_Moving_05.wav
      190: Resources/Voices/SM02_en_us_Moving_06.wav
      191: Resources/Voices/SM02_en_us_Moving_07.wav
      192: Resources/Voices/SM02_en_us_Moving_08.wav
      193: Resources/Voices/SM02_en_us_Moving_09.wav
      194: Resources/Voices/SM02_en_us_Moving_10.wav
      195: Resources/Voices/SM02_en_us_Moving_11.wav
      196: Resources/Voices/SM02_en_us_Moving_12.wav
      197: Resources/Voices/SM02_en_us_Moving_13.wav
      198: Resources/Voices/SM02_en_us_Moving_14.wav
      199: Resources/Voices/SM02_en_us_Moving_15.wav
      200: Resources/Voices/SM02_en_us_Moving_16.wav
      201: Resources/Voices/SM02_en_us_Moving_17.wav
      202: Resources/Voices/SM02_en_us_Moving_18.wav
      203: Resources/Voices/SM02_en_us_Moving_19.wav
      204: Resources/Voices/SM02_en_us_Moving_20.wav
      205: Resources/Voices/SM02_en_us_Moving_21.wav
      206: Resources/Voices/SM02_en_us_Moving_22.wav
      207: Resources/Voices/SM02_en_us_Moving_23.wav
      208: Resources/Voices/SM02_en_us_Moving_24.wav
      209: Resources/Voices/SM02_en_us_Moving_BY_THE_BOOK_00.wav
      210: Resources/Voices/SM02_en_us_Moving_BY_THE_BOOK_01.wav
      211: Resources/Voices/SM02_en_us_Moving_BY_THE_BOOK_02.wav
      212: Resources/Voices/SM02_en_us_Moving_BY_THE_BOOK_03.wav
      213: Resources/Voices/SM02_en_us_Moving_BY_THE_BOOK_04.wav
      214: Resources/Voices/SM02_en_us_Moving_COLD_00.wav
      215: Resources/Voices/SM02_en_us_Moving_COLD_01.wav
      216: Resources/Voices/SM02_en_us_Moving_COLD_02.wav
      217: Resources/Voices/SM02_en_us_Moving_COLD_03.wav
      218: Resources/Voices/SM02_en_us_Moving_COLD_04.wav
      219: Resources/Voices/SM02_en_us_Moving_HAPPY_GO_LUCKY_00.wav
      220: Resources/Voices/SM02_en_us_Moving_HAPPY_GO_LUCKY_01.wav
      221: Resources/Voices/SM02_en_us_Moving_HAPPY_GO_LUCKY_02.wav
      222: Resources/Voices/SM02_en_us_Moving_HAPPY_GO_LUCKY_03.wav
      223: Resources/Voices/SM02_en_us_Moving_HAPPY_GO_LUCKY_04.wav
      224: Resources/Voices/SM02_en_us_Moving_HARD_LUCK_00.wav
      225: Resources/Voices/SM02_en_us_Moving_HARD_LUCK_01.wav
      226: Resources/Voices/SM02_en_us_Moving_HARD_LUCK_02.wav
      227: Resources/Voices/SM02_en_us_Moving_HARD_LUCK_03.wav
      228: Resources/Voices/SM02_en_us_Moving_HARD_LUCK_04.wav
      229: Resources/Voices/SM02_en_us_Moving_INTENSE_00.wav
      230: Resources/Voices/SM02_en_us_Moving_INTENSE_01.wav
      231: Resources/Voices/SM02_en_us_Moving_INTENSE_02.wav
      232: Resources/Voices/SM02_en_us_Moving_INTENSE_03.wav
      233: Resources/Voices/SM02_en_us_Moving_INTENSE_04.wav
      234: Resources/Voices/SM02_en_us_Moving_LAID_BACK_00.wav
      235: Resources/Voices/SM02_en_us_Moving_LAID_BACK_01.wav
      236: Resources/Voices/SM02_en_us_Moving_LAID_BACK_02.wav
      237: Resources/Voices/SM02_en_us_Moving_LAID_BACK_03.wav
      238: Resources/Voices/SM02_en_us_Moving_LAID_BACK_04.wav
      239: Resources/Voices/SM02_en_us_Moving_TWITCHY_00.wav
      240: Resources/Voices/SM02_en_us_Moving_TWITCHY_01.wav
      241: Resources/Voices/SM02_en_us_Moving_TWITCHY_02.wav
      242: Resources/Voices/SM02_en_us_Moving_TWITCHY_03.wav
      243: Resources/Voices/SM02_en_us_Moving_TWITCHY_04.wav
      244: Resources/Voices/SM02_en_us_Moving_w_00.wav
      245: Resources/Voices/SM02_en_us_Moving_w_01.wav
      246: Resources/Voices/SM02_en_us_Moving_w_02.wav
      247: Resources/Voices/SM02_en_us_Moving_w_03.wav
      248: Resources/Voices/SM02_en_us_Moving_w_04.wav
      249: Resources/Voices/SM02_en_us_Moving_w_05.wav
      250: Resources/Voices/SM02_en_us_Moving_w_06.wav
      251: Resources/Voices/SM02_en_us_Moving_w_07.wav
      252: Resources/Voices/SM02_en_us_Moving_w_08.wav
      253: Resources/Voices/SM02_en_us_Moving_w_09.wav
      254: Resources/Voices/SM02_en_us_Moving_w_10.wav
      255: Resources/Voices/SM02_en_us_Moving_w_11.wav
      256: Resources/Voices/SM02_en_us_Moving_w_12.wav
      257: Resources/Voices/SM02_en_us_Moving_w_13.wav
      258: Resources/Voices/SM02_en_us_Moving_w_14.wav
      259: Resources/Voices/SM02_en_us_Moving_w_15.wav
      260: Resources/Voices/SM02_en_us_Moving_w_16.wav
      261: Resources/Voices/SM02_en_us_Moving_w_17.wav
      262: Resources/Voices/SM02_en_us_Moving_w_18.wav
      263: Resources/Voices/SM02_en_us_Moving_w_19.wav
      264: Resources/Voices/SM02_en_us_Moving_w_20.wav
      265: Resources/Voices/SM02_en_us_Moving_w_21.wav
      266: Resources/Voices/SM02_en_us_Moving_w_22.wav
      267: Resources/Voices/SM02_en_us_Moving_w_23.wav
      268: Resources/Voices/SM02_en_us_Moving_w_24.wav
      269: Resources/Voices/SM02_en_us_PanicScream_00.wav
      270: Resources/Voices/SM02_en_us_PanicScream_01.wav
      271: Resources/Voices/SM02_en_us_PanicScream_02.wav
      272: Resources/Voices/SM02_en_us_PanicScream_03.wav
      273: Resources/Voices/SM02_en_us_PanicScream_04.wav
      274: Resources/Voices/SM02_en_us_PanicScream_05.wav
      275: Resources/Voices/SM02_en_us_PanicScream_06.wav
      276: Resources/Voices/SM02_en_us_Panic_INTENSE_00.wav
      277: Resources/Voices/SM02_en_us_Panic_INTENSE_01.wav
      278: Resources/Voices/SM02_en_us_Panic_INTENSE_02.wav
      279: Resources/Voices/SM02_en_us_Panic_LAID_BACK_00.wav
      280: Resources/Voices/SM02_en_us_Panic_LAID_BACK_01.wav
      281: Resources/Voices/SM02_en_us_Panic_LAID_BACK_02.wav
      282: Resources/Voices/SM02_en_us_Panic_TWITCHY_00.wav
      283: Resources/Voices/SM02_en_us_Panic_TWITCHY_01.wav
      284: Resources/Voices/SM02_en_us_Panic_TWITCHY_02.wav

# Reference Information
# dmg calc.
# Power must be greater zero before reduction by resistances.

#const auto random_damage = type->getRandomDamage(power_of_weapon);  // apply damageRange (0-200% in vanilla ufo)
#TileEngine.hitUnit(targetUnit, random_damage)
#{
#  targetUnit.damage(random_damage)
#}
#BattleUnit.damage(random_damage)
#{
#  if (random_damage < 0) return; // DO NOTHING
#  random_damage = reduceByResistance(random_damage, type->ResistType); // apply armor damage modifiers (resistances)
#  CALL SCRIPT: HitUnit(random_damage as power)
#  adjusted_damage -= getArmor(side) * type->ArmorEffectiveness; // apply armor on respective side, taking armor effectiveness into account
#  CALL SCRIPT: DamageUnit(random_damage as original_damage, adjusted_damage as damage)
#  => Apply Damage directly from output of DamageUnit script
#}

# power of hitUnit / original_damage of damageUnit = (power of weapon +/- randomRange%) * damageModifier(Armor,Type)
# damage of damageUnit = (power output of hitUnit) - Armor(Side) * ArmorEffectiveness
# output of damageUnit is applied immediately

# Vanilla Starting Stats & Caps
# tu: 50-60 (80)
# stamina: 40-70 (100)
# health: 25-40 (60)
# bravery: 10-60 (100)
# reactions: 30-60 (100)
# firing: 40-70 (120)
# throwing: 50-80 (120)
# strength: 20-40 (70)
# psiStrength: 0-100
# psiSkill: 0 (170)
# melee: 20-40 (120)

# Save game edit for leveling
# SNIPER
#RuleSoldier
#        previousTransformations:
#          STR_SNIPER_ADVANCED_TRAINING: 1
#          STR_SNIPER_ELITE_TRAINING: 1
#        transformationBonuses:
#          STR_SNIPER_ADVANCED_BONUS: 1
#          STR_SNIPER_ELITE_BONUS: 1
#BattleUnit
#      tags:
#        DEATH_FROM_ABOVE_STATE: 1
#        AIM_STATE: 1
#        CENTER_MASS_STATE: 20
#        ALPHA_MIKE_FOXTROT_STATE: 20
#        SERIAL_STATE: 1

#SPECIALIST
#RuleSoldier
#        previousTransformations:
#          STR_SPECIALIST_ADVANCED_TRAINING: 1
#          STR_SPECIALIST_ELITE_TRAINING: 1
#        transformationBonuses:
#          STR_SPECIALIST_ADVANCED_BONUS: 1
#          STR_SPECIALIST_ELITE_BONUS: 1
#BattleUnit
#      tags:
#        GUARDIAN_STATE: 1             #X (1/0) a 50% chance that TU on reaction fire get refunded
#        SAVIOR_STATE: 10              #X (1-XXX) flat amount of health restored when using heal
#        EVER_VIGILANT_STATE: 1        #X (1/0) restores all TU on beginning of enemy turn 
#        STEADFAST_STATE: 50           #X (1-XXX) bonus to bravery and psiDefence
#        FIELD_SURGEON_STATE: 30       #X (1-XXX) percent reduction in recovery time if healed by field surgeon

#GRENADIER
#RuleSoldier
#        previousTransformations:
#          STR_GRENADIER_ADVANCED_TRAINING: 1
#          STR_GRENADIER_ELITE_TRAINING: 1
#        transformationBonuses:
#          STR_GRENADIER_ADVANCED_BONUS: 1
#          STR_GRENADIER_ELITE_BONUS: 1
#BattleUnit
#      tags:
#        STING_GRENADES_STATE: 50      #X (1-xxx) chance to stun enemies when using flashbang, in percent
#        RUPTURE_STATE: 1              #X (1/0) on/off enables use rupture skill with compatible weapons, (aimed / auto only)
#        BLAST_PADDING_STATE: 60       #X (0-100) amount of damage reduction in percent for HE and Incendiary
#        MAYHEM_STATE: 10 
#        SHREDDER_STATE: 1  

#PSI Operative
#RuleSoldier
#        previousTransformations:
#          STR_PSI_OPERATIVE_ADVANCED_TRAINING: 1
#          STR_PSI_OPERATIVE_ELITE_TRAINING: 1
#        transformationBonuses:
#          STR_PSI_OPERATIVE_ADVANCED_BONUS: 1
#          STR_PSI_OPERATIVE_ELITE_BONUS: 1
